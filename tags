!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.DEFAULT_GOAL	abstract-machine/Makefile	/^  .DEFAULT_GOAL = image$/;"	m
.DEFAULT_GOAL	nemu/Makefile	/^.DEFAULT_GOAL = app$/;"	m
.DEFAULT_GOAL	nemu/tools/kvm-diff/Makefile	/^.DEFAULT_GOAL = app$/;"	m
.DEFAULT_GOAL	nemu/tools/qemu-diff/Makefile	/^.DEFAULT_GOAL = app$/;"	m
A	fceux-am/src/x6502struct.h	/^        uint8 A,X,Y,S,P,mooPI;$/;"	m	struct:__X6502
A000B	fceux-am/src/boards/mmc3.cpp	/^uint8 A000B, A001B;$/;"	v
A001B	fceux-am/src/boards/mmc3.cpp	/^uint8 A000B, A001B;$/;"	v
ABANKS	fceux-am/src/boards/mmc5.cpp	25;"	d	file:
AC08Power	fceux-am/src/boards/ac-08.cpp	/^static void AC08Power(void) {$/;"	f	file:
AC08_Init	fceux-am/src/boards/ac-08.cpp	/^void AC08_Init(CartInfo *info) {$/;"	f
ADC	fceux-am/src/x6502.cpp	122;"	d	file:
ADDCYC	fceux-am/src/x6502.cpp	33;"	d	file:
AEABI_RTABI	abstract-machine/klib/src/int64.c	28;"	d	file:
ALWAYS_INLINE	abstract-machine/klib/src/int64.c	31;"	d	file:
ALWAYS_INLINE	abstract-machine/klib/src/int64.c	36;"	d	file:
AM	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
AM_DEPTH	fceux-am/src/boards/emu2413.c	137;"	d	file:
AM_DEVREG	abstract-machine/am/include/amdev.h	3;"	d
AM_DP_BITS	fceux-am/src/boards/emu2413.c	123;"	d	file:
AM_DP_WIDTH	fceux-am/src/boards/emu2413.c	124;"	d	file:
AM_GPU_NULL	abstract-machine/am/include/amdev.h	53;"	d
AM_GPU_SUBTREE	abstract-machine/am/include/amdev.h	52;"	d
AM_GPU_TEXTURE	abstract-machine/am/include/amdev.h	51;"	d
AM_H__	abstract-machine/am/include/am.h	2;"	d
AM_KEYS	abstract-machine/am/include/amdev.h	/^  AM_KEYS(AM_KEY_NAMES)$/;"	e	enum:__anon14
AM_KEYS	abstract-machine/am/include/amdev.h	34;"	d
AM_KEY_NAMES	abstract-machine/am/include/amdev.h	43;"	d
AM_KEY_NONE	abstract-machine/am/include/amdev.h	/^  AM_KEY_NONE = 0,$/;"	e	enum:__anon14
AM_PG_BITS	fceux-am/src/boards/emu2413.c	121;"	d	file:
AM_PG_WIDTH	fceux-am/src/boards/emu2413.c	122;"	d	file:
AM_SPEED	fceux-am/src/boards/emu2413.c	135;"	d	file:
AM_SRCS	abstract-machine/scripts/native.mk	/^AM_SRCS := native\/trm.c \\$/;"	m
AM_SRCS	abstract-machine/scripts/platform/nemu.mk	/^AM_SRCS := nemu\/trm.c \\$/;"	m
AM_SRCS	abstract-machine/scripts/x86-qemu.mk	/^AM_SRCS := x86\/qemu\/start32.S \\$/;"	m
AM_SRCS	abstract-machine/scripts/x86_64-qemu.mk	/^AM_SRCS := x86\/qemu\/start64.S \\$/;"	m
AND	fceux-am/src/x6502.cpp	117;"	d	file:
ANROMSync	fceux-am/src/boards/datalatch.cpp	/^static void ANROMSync() {$/;"	f	file:
ANROM_Init	fceux-am/src/boards/datalatch.cpp	/^void ANROM_Init(CartInfo *info) {$/;"	f
APP	nemu/tools/gen-expr/Makefile	/^APP=gen-expr$/;"	m
AR	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
ARCHIVE	abstract-machine/Makefile	/^ARCHIVE   = $(WORK_DIR)\/build\/$(NAME)-$(ARCH).a$/;"	m
ARCHS	abstract-machine/Makefile	/^ARCHS = $(basename $(notdir $(shell ls $(AM_HOME)\/scripts\/*.mk)))$/;"	m
ARCH_H__	abstract-machine/am/include/arch/native.h	2;"	d
ARCH_H__	abstract-machine/am/include/arch/riscv32-nemu.h	2;"	d
ARCH_H__	abstract-machine/am/include/arch/riscv64-nemu.h	2;"	d
ARCH_H__	abstract-machine/am/include/arch/x86-nemu.h	2;"	d
ARCH_H__	abstract-machine/am/include/arch/x86-qemu.h	2;"	d
ARCH_H__	abstract-machine/am/include/arch/x86_64-qemu.h	2;"	d
ARCH_SPLIT	abstract-machine/Makefile	/^ARCH_SPLIT = $(subst -, ,$(ARCH))$/;"	m
ARGSIZE	abstract-machine/am/src/x86/qemu/boot/main.c	6;"	d	file:
ARRAY_SIZE	fceux-am/src/fceu.h	161;"	d
AR_ADJUST_TABLE	fceux-am/src/boards/emu2413.c	/^static uint16 AR_ADJUST_TABLE[1 << EG_BITS];$/;"	v	file:
ARead	fceux-am/src/fceu.cpp	/^readfunc ARead[0x10000];$/;"	v
AReadG	fceux-am/src/fceu.cpp	/^static readfunc *AReadG;$/;"	v	file:
AS	abstract-machine/Makefile	/^AS        = $(CROSS_COMPILE)gcc$/;"	m
ASL	fceux-am/src/x6502.cpp	164;"	d	file:
ASSERT	abstract-machine/am/src/x86/qemu/ioe.c	361;"	d	file:
ATFill	fceux-am/src/boards/mmc5.cpp	/^static uint8 CHRMode, NTAMirroring, NTFill, ATFill;$/;"	v	file:
ATTACK	fceux-am/src/boards/emu2413.c	/^{ SETTLE, ATTACK, DECAY, SUSHOLD, SUSTINE, RELEASE, FINISH };$/;"	e	enum:__anon40	file:
AUDIO_ADDR	abstract-machine/am/src/nemu/include/nemu.h	23;"	d
AUDIO_ADDR	abstract-machine/am/src/nemu/include/nemu.h	29;"	d
AUDIO_CHANNELS_ADDR	abstract-machine/am/src/nemu/ioe/audio.c	5;"	d	file:
AUDIO_COUNT_ADDR	abstract-machine/am/src/nemu/ioe/audio.c	9;"	d	file:
AUDIO_FREQ_ADDR	abstract-machine/am/src/nemu/ioe/audio.c	4;"	d	file:
AUDIO_INIT_ADDR	abstract-machine/am/src/nemu/ioe/audio.c	8;"	d	file:
AUDIO_MMIO	nemu/src/device/audio.c	9;"	d	file:
AUDIO_PORT	nemu/src/device/audio.c	8;"	d	file:
AUDIO_SAMPLES_ADDR	abstract-machine/am/src/nemu/ioe/audio.c	6;"	d	file:
AUDIO_SBUF_ADDR	abstract-machine/am/src/nemu/include/nemu.h	33;"	d
AUDIO_SBUF_SIZE_ADDR	abstract-machine/am/src/nemu/ioe/audio.c	7;"	d	file:
AXS	fceux-am/src/x6502.cpp	148;"	d	file:
AYHiSync	fceux-am/src/boards/69.cpp	/^static void AYHiSync(int32 ts) {$/;"	f	file:
AYSound	fceux-am/src/boards/69.cpp	/^static void AYSound(int Count) {$/;"	f	file:
AYSoundHQ	fceux-am/src/boards/69.cpp	/^static void AYSoundHQ(void) {$/;"	f	file:
AddExState	fceux-am/src/unused.cpp	/^void AddExState(void *v, uint32 s, int type, const char *desc) { }$/;"	f
AddrSpace	abstract-machine/am/include/am.h	/^} AddrSpace;$/;"	t	typeref:struct:__anon13
AllocGenieRW	fceux-am/src/fceu.cpp	/^int AllocGenieRW(void) {$/;"	f
ArchiveScanRecord	fceux-am/src/file.h	/^	ArchiveScanRecord()$/;"	f	struct:ArchiveScanRecord
ArchiveScanRecord	fceux-am/src/file.h	/^	ArchiveScanRecord(int _type, int _numFiles)$/;"	f	struct:ArchiveScanRecord
ArchiveScanRecord	fceux-am/src/file.h	/^struct ArchiveScanRecord$/;"	s
Area	abstract-machine/am/include/am.h	/^} Area;$/;"	t	typeref:struct:__anon10
Assert	nemu/include/debug.h	12;"	d
AutosaveFrequency	fceux-am/src/fceu.cpp	/^int AutosaveFrequency = 256; \/\/ Number of frames between autosaves$/;"	v
AutosaveQty	fceux-am/src/fceu.cpp	/^int AutosaveQty = 4; \/\/ Number of Autosaves to store$/;"	v
B	abstract-machine/am/src/x86/qemu/ioe.c	/^static inline uint8_t B(uint32_t p) { return p; }$/;"	f	file:
BADINF	fceux-am/src/ines.cpp	/^struct BADINF {$/;"	s	file:
BBANKS	fceux-am/src/boards/mmc5.cpp	26;"	d	file:
BC	fceux-am/src/boards/mmc5.cpp	/^	int32 BC[3];$/;"	m	struct:__anon39	file:
BCAST	abstract-machine/am/src/x86/qemu/ioe.c	364;"	d	file:
BGAdrHI	fceux-am/src/ppu.cpp	41;"	d	file:
BGData	fceux-am/src/ppu.cpp	/^struct BGData {$/;"	s	file:
BGLeft8	fceux-am/src/ppu.cpp	51;"	d	file:
BINARY	nemu/Makefile	/^BINARY ?= $(BUILD_DIR)\/$(ISA)-$(NAME)-$(ENGINE)$(SO)$/;"	m
BINARY	nemu/tools/kvm-diff/Makefile	/^BINARY ?= $(BUILD_DIR)\/$(ISA)-kvm-so$/;"	m
BINARY	nemu/tools/qemu-diff/Makefile	/^BINARY ?= $(BUILD_DIR)\/$(ISA)-qemu-so$/;"	m
BIT	fceux-am/src/boards/emu2413.c	157;"	d	file:
BIT	fceux-am/src/x6502.cpp	118;"	d	file:
BITMASK	nemu/include/macro.h	15;"	d
BITREVLUT	fceux-am/src/ppu.cpp	/^	BITREVLUT() {$/;"	f	struct:BITREVLUT
BITREVLUT	fceux-am/src/ppu.cpp	/^struct BITREVLUT {$/;"	s	file:
BITS	nemu/include/macro.h	16;"	d
BLKSZ	abstract-machine/am/src/x86/qemu/ioe.c	264;"	d	file:
BMAPPINGLocal	fceux-am/src/ines.h	/^} BMAPPINGLocal;$/;"	t	typeref:struct:__anon33
BMC1024CA1CW	fceux-am/src/boards/et-100.cpp	/^static void BMC1024CA1CW(uint32 A, uint8 V) {$/;"	f	file:
BMC1024CA1Close	fceux-am/src/boards/et-100.cpp	/^static void BMC1024CA1Close(void) {$/;"	f	file:
BMC1024CA1PW	fceux-am/src/boards/et-100.cpp	/^static void BMC1024CA1PW(uint32 A, uint8 V) {$/;"	f	file:
BMC1024CA1Power	fceux-am/src/boards/et-100.cpp	/^static void BMC1024CA1Power(void) {$/;"	f	file:
BMC1024CA1Reset	fceux-am/src/boards/et-100.cpp	/^static void BMC1024CA1Reset(void) {$/;"	f	file:
BMC1024CA1_Init	fceux-am/src/boards/et-100.cpp	/^void BMC1024CA1_Init(CartInfo *info) {$/;"	f
BMC11160Sync	fceux-am/src/boards/datalatch.cpp	/^static void BMC11160Sync(void) {$/;"	f	file:
BMC11160_Init	fceux-am/src/boards/datalatch.cpp	/^void BMC11160_Init(CartInfo *info) {$/;"	f
BMC12IN1Power	fceux-am/src/boards/12in1.cpp	/^static void BMC12IN1Power(void) {$/;"	f	file:
BMC12IN1_Init	fceux-am/src/boards/12in1.cpp	/^void BMC12IN1_Init(CartInfo *info) {$/;"	f
BMC13in1JY110Power	fceux-am/src/boards/bmc13in1jy110.cpp	/^static void BMC13in1JY110Power(void) {$/;"	f	file:
BMC13in1JY110_Init	fceux-am/src/boards/bmc13in1jy110.cpp	/^void BMC13in1JY110_Init(CartInfo *info) {$/;"	f
BMC190in1Sync	fceux-am/src/boards/addrlatch.cpp	/^static void BMC190in1Sync(void) {$/;"	f	file:
BMC190in1_Init	fceux-am/src/boards/addrlatch.cpp	/^void BMC190in1_Init(CartInfo *info) {$/;"	f
BMC411120CCW	fceux-am/src/boards/411120-c.cpp	/^static void BMC411120CCW(uint32 A, uint8 V) {$/;"	f	file:
BMC411120CPW	fceux-am/src/boards/411120-c.cpp	/^static void BMC411120CPW(uint32 A, uint8 V) {$/;"	f	file:
BMC411120CPower	fceux-am/src/boards/411120-c.cpp	/^static void BMC411120CPower(void) {$/;"	f	file:
BMC411120CReset	fceux-am/src/boards/411120-c.cpp	/^static void BMC411120CReset(void) {$/;"	f	file:
BMC411120C_Init	fceux-am/src/boards/411120-c.cpp	/^void BMC411120C_Init(CartInfo *info) {$/;"	f
BMC64in1nrPower	fceux-am/src/boards/bmc64in1nr.cpp	/^static void BMC64in1nrPower(void) {$/;"	f	file:
BMC64in1nr_Init	fceux-am/src/boards/bmc64in1nr.cpp	/^void BMC64in1nr_Init(CartInfo *info) {$/;"	f
BMC70in1B_Init	fceux-am/src/boards/bmc70in1.cpp	/^void BMC70in1B_Init(CartInfo *info) {$/;"	f
BMC70in1Power	fceux-am/src/boards/bmc70in1.cpp	/^static void BMC70in1Power(void) {$/;"	f	file:
BMC70in1Reset	fceux-am/src/boards/bmc70in1.cpp	/^static void BMC70in1Reset(void) {$/;"	f	file:
BMC70in1_Init	fceux-am/src/boards/bmc70in1.cpp	/^void BMC70in1_Init(CartInfo *info) {$/;"	f
BMC80013BPower	fceux-am/src/boards/80013-B.cpp	/^static void BMC80013BPower(void) {$/;"	f	file:
BMC80013BReset	fceux-am/src/boards/80013-B.cpp	/^static void BMC80013BReset(void) {$/;"	f	file:
BMC80013B_Init	fceux-am/src/boards/80013-B.cpp	/^void BMC80013B_Init(CartInfo *info) {$/;"	f
BMC810131C_CW	fceux-am/src/boards/et-4320.cpp	/^static void BMC810131C_CW(uint32 A, uint8 V) {$/;"	f	file:
BMC810131C_Close	fceux-am/src/boards/et-4320.cpp	/^static void BMC810131C_Close(void) {$/;"	f	file:
BMC810131C_Init	fceux-am/src/boards/et-4320.cpp	/^void BMC810131C_Init(CartInfo *info) {$/;"	f
BMC810131C_PW	fceux-am/src/boards/et-4320.cpp	/^static void BMC810131C_PW(uint32 A, uint8 V) {$/;"	f	file:
BMC810131C_Power	fceux-am/src/boards/et-4320.cpp	/^static void BMC810131C_Power(void) {$/;"	f	file:
BMC810131C_Reset	fceux-am/src/boards/et-4320.cpp	/^static void BMC810131C_Reset(void) {$/;"	f	file:
BMC810544CA1Sync	fceux-am/src/boards/addrlatch.cpp	/^static void BMC810544CA1Sync(void) {$/;"	f	file:
BMC810544CA1_Init	fceux-am/src/boards/addrlatch.cpp	/^void BMC810544CA1_Init(CartInfo *info) {$/;"	f
BMC830118CCW	fceux-am/src/boards/830118C.cpp	/^static void BMC830118CCW(uint32 A, uint8 V) {$/;"	f	file:
BMC830118CPW	fceux-am/src/boards/830118C.cpp	/^static void BMC830118CPW(uint32 A, uint8 V) {$/;"	f	file:
BMC830118CPower	fceux-am/src/boards/830118C.cpp	/^static void BMC830118CPower(void) {$/;"	f	file:
BMC830118CReset	fceux-am/src/boards/830118C.cpp	/^static void BMC830118CReset(void) {$/;"	f	file:
BMC830118C_Init	fceux-am/src/boards/830118C.cpp	/^void BMC830118C_Init(CartInfo *info) {$/;"	f
BMC8IN1CW	fceux-am/src/boards/8in1.cpp	/^static void BMC8IN1CW(uint32 A, uint8 V) {$/;"	f	file:
BMC8IN1PW	fceux-am/src/boards/8in1.cpp	/^static void BMC8IN1PW(uint32 A, uint8 V) {$/;"	f	file:
BMC8IN1Power	fceux-am/src/boards/8in1.cpp	/^static void BMC8IN1Power(void) {$/;"	f	file:
BMC8IN1_Init	fceux-am/src/boards/8in1.cpp	/^void BMC8IN1_Init(CartInfo *info) {$/;"	f
BMCA65ASSync	fceux-am/src/boards/datalatch.cpp	/^static void BMCA65ASSync(void) {$/;"	f	file:
BMCA65AS_Init	fceux-am/src/boards/datalatch.cpp	/^void BMCA65AS_Init(CartInfo *info) {$/;"	f
BMCBS5_Init	fceux-am/src/boards/bs-5.cpp	/^void BMCBS5_Init(CartInfo *info) {$/;"	f
BMCD1038Reset	fceux-am/src/boards/addrlatch.cpp	/^static void BMCD1038Reset(void) {$/;"	f	file:
BMCD1038Sync	fceux-am/src/boards/addrlatch.cpp	/^static void BMCD1038Sync(void) {$/;"	f	file:
BMCD1038_Init	fceux-am/src/boards/addrlatch.cpp	/^void BMCD1038_Init(CartInfo *info) {$/;"	f
BMCF15PW	fceux-am/src/boards/F-15.cpp	/^static void BMCF15PW(uint32 A, uint8 V) {$/;"	f	file:
BMCF15Power	fceux-am/src/boards/F-15.cpp	/^static void BMCF15Power(void) {$/;"	f	file:
BMCF15_Init	fceux-am/src/boards/F-15.cpp	/^void BMCF15_Init(CartInfo *info) {$/;"	f
BMCFK23CAClose	fceux-am/src/boards/fk23c.cpp	/^static void BMCFK23CAClose(void)$/;"	f	file:
BMCFK23CAPower	fceux-am/src/boards/fk23c.cpp	/^static void BMCFK23CAPower(void)$/;"	f	file:
BMCFK23CA_Init	fceux-am/src/boards/fk23c.cpp	/^void BMCFK23CA_Init(CartInfo *info)$/;"	f
BMCFK23CCW	fceux-am/src/boards/fk23c.cpp	/^static void BMCFK23CCW(uint32 A, uint8 V)$/;"	f	file:
BMCFK23CPW	fceux-am/src/boards/fk23c.cpp	/^static void BMCFK23CPW(uint32 A, uint8 V)$/;"	f	file:
BMCFK23CPower	fceux-am/src/boards/fk23c.cpp	/^static void BMCFK23CPower(void)$/;"	f	file:
BMCFK23CReset	fceux-am/src/boards/fk23c.cpp	/^static void BMCFK23CReset(void)$/;"	f	file:
BMCFK23C_Init	fceux-am/src/boards/fk23c.cpp	/^void BMCFK23C_Init(CartInfo *info)$/;"	f
BMCG146Sync	fceux-am/src/boards/addrlatch.cpp	/^static void BMCG146Sync(void) {$/;"	f	file:
BMCG146_Init	fceux-am/src/boards/addrlatch.cpp	/^void BMCG146_Init(CartInfo *info) {$/;"	f
BMCGK192Sync	fceux-am/src/boards/addrlatch.cpp	/^static void BMCGK192Sync(void) {$/;"	f	file:
BMCGK192_Init	fceux-am/src/boards/addrlatch.cpp	/^void BMCGK192_Init(CartInfo *info) {$/;"	f
BMCGS2004Power	fceux-am/src/boards/gs-2004.cpp	/^static void BMCGS2004Power(void) {$/;"	f	file:
BMCGS2004Reset	fceux-am/src/boards/gs-2004.cpp	/^static void BMCGS2004Reset(void) {$/;"	f	file:
BMCGS2004_Init	fceux-am/src/boards/gs-2004.cpp	/^void BMCGS2004_Init(CartInfo *info) {$/;"	f
BMCGS2013Power	fceux-am/src/boards/gs-2013.cpp	/^static void BMCGS2013Power(void) {$/;"	f	file:
BMCGS2013Reset	fceux-am/src/boards/gs-2013.cpp	/^static void BMCGS2013Reset(void) {$/;"	f	file:
BMCGS2013_Init	fceux-am/src/boards/gs-2013.cpp	/^void BMCGS2013_Init(CartInfo *info) {$/;"	f
BMCGhostbusters63in1Close	fceux-am/src/boards/ghostbusters63in1.cpp	/^static void BMCGhostbusters63in1Close(void) {$/;"	f	file:
BMCGhostbusters63in1Power	fceux-am/src/boards/ghostbusters63in1.cpp	/^static void BMCGhostbusters63in1Power(void) {$/;"	f	file:
BMCGhostbusters63in1Reset	fceux-am/src/boards/ghostbusters63in1.cpp	/^static void BMCGhostbusters63in1Reset(void) {$/;"	f	file:
BMCGhostbusters63in1_Init	fceux-am/src/boards/ghostbusters63in1.cpp	/^void BMCGhostbusters63in1_Init(CartInfo *info) {$/;"	f
BMCHP898F_Init	fceux-am/src/boards/hp898f.cpp	/^void BMCHP898F_Init(CartInfo *info) {$/;"	f
BMCHPxxCW	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static void BMCHPxxCW(uint32 A, uint8 V)$/;"	f	file:
BMCHPxxMW	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static void BMCHPxxMW(uint8 V) {$/;"	f	file:
BMCHPxxPW	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static void BMCHPxxPW(uint32 A, uint8 V)$/;"	f	file:
BMCHPxxPower	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static void BMCHPxxPower(void)$/;"	f	file:
BMCHPxxReset	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static void BMCHPxxReset(void)$/;"	f	file:
BMCHPxx_Init	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^void BMCHPxx_Init(CartInfo *info)$/;"	f
BMCNTD03Sync	fceux-am/src/boards/addrlatch.cpp	/^static void BMCNTD03Sync(void) {$/;"	f	file:
BMCNTD03_Init	fceux-am/src/boards/addrlatch.cpp	/^void BMCNTD03_Init(CartInfo *info) {$/;"	f
BMCT2271CW	fceux-am/src/boards/t-227-1.cpp	/^static void BMCT2271CW(uint32 A, uint8 V) {$/;"	f	file:
BMCT2271PW	fceux-am/src/boards/t-227-1.cpp	/^static void BMCT2271PW(uint32 A, uint8 V) {$/;"	f	file:
BMCT2271Power	fceux-am/src/boards/t-227-1.cpp	/^static void BMCT2271Power(void) {$/;"	f	file:
BMCT2271Reset	fceux-am/src/boards/t-227-1.cpp	/^static void BMCT2271Reset(void) {$/;"	f	file:
BMCT2271_Init	fceux-am/src/boards/t-227-1.cpp	/^void BMCT2271_Init(CartInfo *info) {$/;"	f
BMCT262Power	fceux-am/src/boards/t-262.cpp	/^static void BMCT262Power(void) {$/;"	f	file:
BMCT262Reset	fceux-am/src/boards/t-262.cpp	/^static void BMCT262Reset(void) {$/;"	f	file:
BMCT262Restore	fceux-am/src/boards/t-262.cpp	/^static void BMCT262Restore(int version) {$/;"	f	file:
BMCT262_Init	fceux-am/src/boards/t-262.cpp	/^void BMCT262_Init(CartInfo *info) {$/;"	f
BOOTREC_ADDR	abstract-machine/am/src/x86.h	95;"	d
BOOT_HOME	abstract-machine/scripts/platform/qemu.mk	/^BOOT_HOME := $(AM_HOME)\/am\/src\/x86\/qemu\/boot$/;"	m
BS	fceux-am/src/boards/bandai.cpp	344;"	d	file:
BS	fceux-am/src/boards/bandai.cpp	414;"	d	file:
BUILD_DIR	nemu/Makefile	/^BUILD_DIR ?= .\/build$/;"	m
BUILD_DIR	nemu/tools/kvm-diff/Makefile	/^BUILD_DIR ?= .\/build$/;"	m
BUILD_DIR	nemu/tools/qemu-diff/Makefile	/^BUILD_DIR ?= .\/build$/;"	m
BUSY	abstract-machine/am/src/x86/qemu/ioe.c	365;"	d	file:
BUTTC_JOYSTICK	fceux-am/src/drivers/sdl/input.h	22;"	d
BUTTC_KEYBOARD	fceux-am/src/drivers/sdl/input.h	21;"	d
BUTTC_MOUSE	fceux-am/src/drivers/sdl/input.h	23;"	d
BWrite	fceux-am/src/fceu.cpp	/^writefunc BWrite[0x10000];$/;"	v
BWriteG	fceux-am/src/fceu.cpp	/^static writefunc *BWriteG;$/;"	v	file:
B_FLAG	fceux-am/src/x6502.h	58;"	d
BadROMImages	fceux-am/src/ines.cpp	/^static struct BADINF BadROMImages[] =$/;"	v	typeref:struct:BADINF	file:
BandaiIRQHook	fceux-am/src/boards/bandai.cpp	/^static void BandaiIRQHook(int a) {$/;"	f	file:
BandaiPower	fceux-am/src/boards/bandai.cpp	/^static void BandaiPower(void) {$/;"	f	file:
BarcodeCycleCount	fceux-am/src/boards/bandai.cpp	/^static int BarcodeCycleCount;$/;"	v	file:
BarcodeData	fceux-am/src/boards/bandai.cpp	/^static uint8 BarcodeData[256];$/;"	v	file:
BarcodeIRQHook	fceux-am/src/boards/bandai.cpp	/^static void BarcodeIRQHook(int a) {$/;"	f	file:
BarcodeOut	fceux-am/src/boards/bandai.cpp	/^static uint32 BarcodeOut;$/;"	v	file:
BarcodeReadPos	fceux-am/src/boards/bandai.cpp	/^static int BarcodeReadPos;$/;"	v	file:
Blit8ToHigh	fceux-am/src/drivers/common/vidblit.cpp	/^void Blit8ToHigh(uint8 *src, uint8 *dest, int xr, int yr, int pitch, int xscale, int yscale)$/;"	f
BlitScreen	fceux-am/src/drivers/sdl/sdl-video.cpp	/^BlitScreen(uint8 *XBuf)$/;"	f
BootRecord	abstract-machine/am/src/x86.h	/^} BootRecord;$/;"	t	typeref:struct:__anon8
Bpp	fceux-am/src/drivers/common/vidblit.cpp	/^static int Bpp;	\/\/ BYTES per pixel$/;"	v	file:
Buffer	fceux-am/src/boards/mmc1.cpp	/^static uint8 Buffer, BufferShift;$/;"	v	file:
BufferShift	fceux-am/src/boards/mmc1.cpp	/^static uint8 Buffer, BufferShift;$/;"	v	file:
BuildWRAMSizeTable	fceux-am/src/boards/mmc5.cpp	/^static void BuildWRAMSizeTable(void) {$/;"	f	file:
ButtConfig	fceux-am/src/drivers/sdl/input.h	/^} ButtConfig;$/;"	t	typeref:struct:__anon48
ButtType	fceux-am/src/drivers/sdl/input.h	/^	uint8  ButtType[MAXBUTTCONFIG];$/;"	m	struct:__anon48
ButtonNum	fceux-am/src/drivers/sdl/input.h	/^	uint16 ButtonNum[MAXBUTTCONFIG];$/;"	m	struct:__anon48
C44100NTSC	fceux-am/src/fcoeffs.h	/^static const int32 C44100NTSC[NCOEFFS\/2]=$/;"	v
C44100PAL	fceux-am/src/fcoeffs.h	/^static const int32 C44100PAL[NCOEFFS\/2]=$/;"	v
C48000NTSC	fceux-am/src/fcoeffs.h	/^static const int32 C48000NTSC[NCOEFFS\/2]=$/;"	v
C48000PAL	fceux-am/src/fcoeffs.h	/^static const int32 C48000PAL[NCOEFFS\/2]=$/;"	v
C96000NTSC	fceux-am/src/fcoeffs.h	/^static const int32 C96000NTSC[NCOEFFS\/2]=$/;"	v
C96000PAL	fceux-am/src/fcoeffs.h	/^static const int32 C96000PAL[NCOEFFS\/2]=$/;"	v
CALL_PPUREAD	fceux-am/src/ppu.cpp	566;"	d	file:
CALL_PPUWRITE	fceux-am/src/ppu.cpp	568;"	d	file:
CAR	fceux-am/src/boards/emu2413.c	155;"	d	file:
CARD_EXTERNAL_INSERED	fceux-am/src/boards/bonza.cpp	23;"	d	file:
CART_H	fceux-am/src/cart.h	2;"	d
CASE_ENTRY	nemu/include/cpu/exec.h	21;"	d
CAYBC	fceux-am/src/boards/69.cpp	/^static int CAYBC[3];$/;"	v	file:
CBM	fceux-am/src/drivers/common/vidblit.cpp	/^static uint32 CBM[3];$/;"	v	file:
CC	abstract-machine/Makefile	/^CC        = $(CROSS_COMPILE)gcc$/;"	m
CC	nemu/Makefile	/^CC = gcc$/;"	m
CC	nemu/tools/kvm-diff/Makefile	/^CC = gcc$/;"	m
CC	nemu/tools/qemu-diff/Makefile	/^CC = gcc$/;"	m
CCL	fceux-am/src/boards/90.cpp	/^static void CCL(void)$/;"	f	file:
CC_B	nemu/src/isa/x86/exec/cc.h	/^  CC_O, CC_NO, CC_B,  CC_NB,$/;"	e	enum:__anon60
CC_BE	nemu/src/isa/x86/exec/cc.h	/^  CC_E, CC_NE, CC_BE, CC_NBE,$/;"	e	enum:__anon60
CC_E	nemu/src/isa/x86/exec/cc.h	/^  CC_E, CC_NE, CC_BE, CC_NBE,$/;"	e	enum:__anon60
CC_L	nemu/src/isa/x86/exec/cc.h	/^  CC_L, CC_NL, CC_LE, CC_NLE$/;"	e	enum:__anon60
CC_LE	nemu/src/isa/x86/exec/cc.h	/^  CC_L, CC_NL, CC_LE, CC_NLE$/;"	e	enum:__anon60
CC_NB	nemu/src/isa/x86/exec/cc.h	/^  CC_O, CC_NO, CC_B,  CC_NB,$/;"	e	enum:__anon60
CC_NBE	nemu/src/isa/x86/exec/cc.h	/^  CC_E, CC_NE, CC_BE, CC_NBE,$/;"	e	enum:__anon60
CC_NE	nemu/src/isa/x86/exec/cc.h	/^  CC_E, CC_NE, CC_BE, CC_NBE,$/;"	e	enum:__anon60
CC_NL	nemu/src/isa/x86/exec/cc.h	/^  CC_L, CC_NL, CC_LE, CC_NLE$/;"	e	enum:__anon60
CC_NLE	nemu/src/isa/x86/exec/cc.h	/^  CC_L, CC_NL, CC_LE, CC_NLE$/;"	e	enum:__anon60
CC_NO	nemu/src/isa/x86/exec/cc.h	/^  CC_O, CC_NO, CC_B,  CC_NB,$/;"	e	enum:__anon60
CC_NP	nemu/src/isa/x86/exec/cc.h	/^  CC_S, CC_NS, CC_P,  CC_NP,$/;"	e	enum:__anon60
CC_NS	nemu/src/isa/x86/exec/cc.h	/^  CC_S, CC_NS, CC_P,  CC_NP,$/;"	e	enum:__anon60
CC_O	nemu/src/isa/x86/exec/cc.h	/^  CC_O, CC_NO, CC_B,  CC_NB,$/;"	e	enum:__anon60
CC_P	nemu/src/isa/x86/exec/cc.h	/^  CC_S, CC_NS, CC_P,  CC_NP,$/;"	e	enum:__anon60
CC_S	nemu/src/isa/x86/exec/cc.h	/^  CC_S, CC_NS, CC_P,  CC_NP,$/;"	e	enum:__anon60
CFLAGS	fceux-am/Makefile	/^CFLAGS    = -DPSS_STYLE=1 -DFRAMESKIP -D__NO_FILE_SYSTEM__$/;"	m
CHINF	fceux-am/src/ines.cpp	/^struct CHINF {$/;"	s	file:
CHR	fceux-am/src/boards/n106.cpp	/^static uint8 CHR[8];$/;"	v	file:
CHRBanksA	fceux-am/src/boards/mmc5.cpp	/^static uint16 CHRBanksA[8], CHRBanksB[4];$/;"	v	file:
CHRBanksB	fceux-am/src/boards/mmc5.cpp	/^static uint16 CHRBanksA[8], CHRBanksB[4];$/;"	v	file:
CHRMode	fceux-am/src/boards/mmc5.cpp	/^static uint8 CHRMode, NTAMirroring, NTFill, ATFill;$/;"	v	file:
CHRRAM	fceux-am/src/boards/168.cpp	/^static uint8 *CHRRAM = NULL;$/;"	v	file:
CHRRAM	fceux-am/src/boards/199.cpp	/^static uint8 *CHRRAM = NULL;$/;"	v	file:
CHRRAM	fceux-am/src/boards/252.cpp	/^static uint8 *CHRRAM = NULL;$/;"	v	file:
CHRRAM	fceux-am/src/boards/253.cpp	/^static uint8 *CHRRAM = NULL;$/;"	v	file:
CHRRAM	fceux-am/src/boards/77.cpp	/^static uint8 *CHRRAM=NULL;$/;"	v	file:
CHRRAM	fceux-am/src/boards/cheapocabra.cpp	/^static uint8 *CHRRAM = NULL;$/;"	v	file:
CHRRAM	fceux-am/src/boards/et-100.cpp	/^static uint8 *CHRRAM;$/;"	v	file:
CHRRAM	fceux-am/src/boards/et-4320.cpp	/^static uint8 *CHRRAM;$/;"	v	file:
CHRRAM	fceux-am/src/boards/fk23c.cpp	/^static uint8 *CHRRAM=NULL;$/;"	v	file:
CHRRAM	fceux-am/src/boards/mmc1.cpp	/^static uint8 *CHRRAM = NULL;$/;"	v	file:
CHRRAM	fceux-am/src/boards/mmc3.cpp	/^uint8 *CHRRAM;$/;"	v
CHRRAM	fceux-am/src/boards/sheroes.cpp	/^static uint8 *CHRRAM;$/;"	v	file:
CHRRAM	fceux-am/src/boards/super24.cpp	/^static uint8 *CHRRAM = NULL;$/;"	v	file:
CHRRAM	fceux-am/src/boards/vrc5.cpp	/^static uint8 *CHRRAM = NULL;$/;"	v	file:
CHRRAMSIZE	fceux-am/src/boards/168.cpp	/^static uint32 CHRRAMSIZE;$/;"	v	file:
CHRRAMSIZE	fceux-am/src/boards/199.cpp	/^static uint32 CHRRAMSIZE;$/;"	v	file:
CHRRAMSIZE	fceux-am/src/boards/252.cpp	/^static uint32 CHRRAMSIZE;$/;"	v	file:
CHRRAMSIZE	fceux-am/src/boards/253.cpp	/^static uint32 CHRRAMSIZE;$/;"	v	file:
CHRRAMSIZE	fceux-am/src/boards/77.cpp	/^static uint32 CHRRAMSIZE;$/;"	v	file:
CHRRAMSIZE	fceux-am/src/boards/cheapocabra.cpp	/^const uint32 CHRRAMSIZE = 1024 * 32;$/;"	v
CHRRAMSIZE	fceux-am/src/boards/mmc3.cpp	/^uint32 CHRRAMSIZE;$/;"	v
CHRRAMSize	fceux-am/src/boards/et-100.cpp	/^static uint32 CHRRAMSize;$/;"	v	file:
CHRRAMSize	fceux-am/src/boards/et-4320.cpp	/^static uint32 CHRRAMSize;$/;"	v	file:
CHRRAMSize	fceux-am/src/boards/fk23c.cpp	/^static uint32 CHRRAMSize;$/;"	v	file:
CHRRAMSize	fceux-am/src/ines.cpp	/^static int CHRRAMSize = -1;$/;"	v	file:
CHRROM	fceux-am/src/boards/ghostbusters63in1.cpp	/^static uint8 *CHRROM = NULL;$/;"	v	file:
CHRROMSIZE	fceux-am/src/boards/ghostbusters63in1.cpp	/^static uint32 CHRROMSIZE;$/;"	v	file:
CHRSIZE	fceux-am/src/boards/vrc5.cpp	/^static uint16 CHRSIZE = 8192;$/;"	v	file:
CHRmask1	fceux-am/src/cart.cpp	/^uint32 CHRmask1[32];$/;"	v
CHRmask2	fceux-am/src/cart.cpp	/^uint32 CHRmask2[32];$/;"	v
CHRmask4	fceux-am/src/cart.cpp	/^uint32 CHRmask4[32];$/;"	v
CHRmask8	fceux-am/src/cart.cpp	/^uint32 CHRmask8[32];$/;"	v
CHRptr	fceux-am/src/cart.cpp	/^uint8 *CHRptr[32];$/;"	v
CHRram	fceux-am/src/cart.cpp	/^uint8 CHRram[32];$/;"	v
CHRsize	fceux-am/src/cart.cpp	/^uint32 CHRsize[32];$/;"	v
CH_OFFSET	nemu/src/device/serial.c	9;"	d	file:
CLEAN_ALL	abstract-machine/Makefile	/^CLEAN_ALL = $(dir $(shell find . -mindepth 2 -name Makefile))$/;"	m
CMP	fceux-am/src/x6502.cpp	156;"	d	file:
CMPL	fceux-am/src/x6502.cpp	140;"	d	file:
CNROMSync	fceux-am/src/boards/datalatch.cpp	/^static void CNROMSync(void) {$/;"	f	file:
CNROM_Init	fceux-am/src/boards/datalatch.cpp	/^void CNROM_Init(CartInfo *info) {$/;"	f
COM1	abstract-machine/am/src/x86/qemu/ioe.c	7;"	d	file:
COM1	abstract-machine/am/src/x86/qemu/trm.c	37;"	d	file:
COMMON_FLAGS	abstract-machine/scripts/isa/mips32.mk	/^COMMON_FLAGS  := -march=mips32 -fno-pic -fno-delayed-branch -mno-abicalls -mno-check-zero-division -EL$/;"	m
COMMON_FLAGS	abstract-machine/scripts/isa/riscv32.mk	/^COMMON_FLAGS  := -fno-pic -march=rv32im -mabi=ilp32$/;"	m
COMMON_FLAGS	abstract-machine/scripts/isa/riscv64.mk	/^COMMON_FLAGS  := -fno-pic -march=rv64g -mcmodel=medany$/;"	m
COMPILER_RT_ABI	abstract-machine/klib/src/int64.c	20;"	d	file:
COMPILER_RT_ABI	abstract-machine/klib/src/int64.c	22;"	d	file:
COMPILER_RT_ABI	abstract-machine/klib/src/int64.c	25;"	d	file:
COMPILER_RT_ALIAS	abstract-machine/klib/src/int64.c	10;"	d	file:
COMPILER_RT_ALIAS	abstract-machine/klib/src/int64.c	13;"	d	file:
COMPILE_TIME_ASSERT	abstract-machine/klib/src/int64.c	305;"	d	file:
COMPILE_TIME_ASSERT1	abstract-machine/klib/src/int64.c	306;"	d	file:
COMPILE_TIME_ASSERT2	abstract-machine/klib/src/int64.c	307;"	d	file:
COMPLEX_IMAGINARY	abstract-machine/klib/src/int64.c	285;"	d	file:
COMPLEX_IMAGINARY	abstract-machine/klib/src/int64.c	294;"	d	file:
COMPLEX_REAL	abstract-machine/klib/src/int64.c	284;"	d	file:
COMPLEX_REAL	abstract-machine/klib/src/int64.c	293;"	d	file:
CONCAT	abstract-machine/klib/include/klib-macros.h	13;"	d
CONTEXT_SIZE	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define CONTEXT_SIZE ((31 + 6) * 4)$/;"	d
CONTEXT_SIZE	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define CONTEXT_SIZE ((32 + 3) * 4)$/;"	d
CONTEXT_SIZE	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define CONTEXT_SIZE ((32 + 3) * 8)$/;"	d
COOLBOYCW	fceux-am/src/boards/coolboy.cpp	/^static void COOLBOYCW(uint32 A, uint8 V) {$/;"	f	file:
COOLBOYPW	fceux-am/src/boards/coolboy.cpp	/^static void COOLBOYPW(uint32 A, uint8 V) {$/;"	f	file:
COOLBOYPower	fceux-am/src/boards/coolboy.cpp	/^static void COOLBOYPower(void) {$/;"	f	file:
COOLBOYReset	fceux-am/src/boards/coolboy.cpp	/^static void COOLBOYReset(void) {$/;"	f	file:
COOLBOY_Init	fceux-am/src/boards/coolboy.cpp	/^void COOLBOY_Init(CartInfo *info) {$/;"	f
CP0_CAUSE	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define CP0_CAUSE  13$/;"	d
CP0_EPC	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define CP0_EPC    14$/;"	d
CP0_STATUS	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define CP0_STATUS 12$/;"	d
CPROMSync	fceux-am/src/boards/datalatch.cpp	/^static void CPROMSync(void) {$/;"	f	file:
CPROM_Init	fceux-am/src/boards/datalatch.cpp	/^void CPROM_Init(CartInfo *info) {$/;"	f
CPU	abstract-machine/am/src/x86/qemu/x86-qemu.h	74;"	d
CPUWrap	fceux-am/src/boards/90.cpp	/^void CPUWrap(int a)$/;"	f
CPU_state	nemu/include/isa.h	/^typedef concat(__ISA__, _CPU_state) CPU_state;$/;"	t
CPX	fceux-am/src/x6502.cpp	157;"	d	file:
CPY	fceux-am/src/x6502.cpp	158;"	d	file:
CR0_PE	abstract-machine/am/src/x86.h	19;"	d
CR0_PE	abstract-machine/am/src/x86/qemu/boot/start.S	/^#define CR0_PE          0x00000001$/;"	d
CR0_PE	nemu/tools/kvm-diff/src/kvm.c	12;"	d	file:
CR0_PG	abstract-machine/am/src/x86.h	20;"	d
CR0_PG	nemu/tools/kvm-diff/src/kvm.c	13;"	d	file:
CR4_PAE	abstract-machine/am/src/x86.h	21;"	d
CRC32	fceux-am/src/cart.h	/^	uint32 CRC32;	\/\/ Should be set by the iNES\/UNIF loading$/;"	m	struct:__anon37
CROSS_COMPILE	abstract-machine/scripts/isa/mips32.mk	/^CROSS_COMPILE := mips-linux-gnu-$/;"	m
CROSS_COMPILE	abstract-machine/scripts/isa/riscv32.mk	/^CROSS_COMPILE := riscv64-linux-gnu-$/;"	m
CROSS_COMPILE	abstract-machine/scripts/isa/riscv64.mk	/^CROSS_COMPILE := riscv64-linux-gnu-$/;"	m
CRT_HAS_128BIT	abstract-machine/klib/src/int64.c	197;"	d	file:
CSync	fceux-am/src/boards/onebus.cpp	/^static void CSync(void) {$/;"	f	file:
CTASSERT	fceux-am/src/types.h	125;"	d
CVBC	fceux-am/src/boards/n106.cpp	/^static int32 CVBC;$/;"	v	file:
CXX	abstract-machine/Makefile	/^CXX       = $(CROSS_COMPILE)g++$/;"	m
C_FLAG	fceux-am/src/x6502.h	62;"	d
CalculateShift	fceux-am/src/drivers/common/vidblit.cpp	/^static void CalculateShift(uint32 *CBM, int *cshiftr, int *cshiftl)$/;"	f	file:
CartBR	fceux-am/src/cart.h	/^DECLFR(CartBR);$/;"	v
CartBROB	fceux-am/src/cart.h	/^DECLFR(CartBROB);$/;"	v
CartBW	fceux-am/src/cart.h	/^DECLFW(CartBW);$/;"	v
CartInfo	fceux-am/src/cart.h	/^} CartInfo;$/;"	t	typeref:struct:__anon37
ChannelBC	fceux-am/src/sound.cpp	/^static uint32 ChannelBC[5];$/;"	v	file:
CheckBad	fceux-am/src/ines.cpp	/^void CheckBad(uint64 md5partial) {$/;"	f
CheckFreq	fceux-am/src/sound.cpp	/^\/*static*\/ int CheckFreq(uint32 cf, uint8 sr)$/;"	f
CheckHInfo	fceux-am/src/ines.cpp	/^static void CheckHInfo(void) {$/;"	f	file:
CheckSpriteHit	fceux-am/src/ppu.cpp	/^static void CheckSpriteHit(int p) {$/;"	f	file:
ChoosePalette	fceux-am/src/palette.cpp	/^static void ChoosePalette(void)$/;"	f	file:
ClipSidesOffset	fceux-am/src/video.cpp	/^int ClipSidesOffset=0;	\/\/Used to move displayed messages when Clips left and right sides is checked$/;"	v
ClockCounter	fceux-am/src/boards/90.cpp	/^static void ClockCounter(void)$/;"	f	file:
ClockMMC3Counter	fceux-am/src/boards/mmc3.cpp	/^static void ClockMMC3Counter(void) {$/;"	f	file:
Close	fceux-am/src/boards/164.cpp	/^static void Close(void) {$/;"	f	file:
Close	fceux-am/src/boards/ks7037.cpp	/^static void Close(void) {$/;"	f	file:
Close	fceux-am/src/cart.h	/^	void (*Close)(void);$/;"	m	struct:__anon37
CloseGame	fceux-am/src/drivers/sdl/sdl.cpp	/^CloseGame()$/;"	f
Context	abstract-machine/am/include/am.h	/^typedef struct Context Context;$/;"	t	typeref:struct:Context
Context	abstract-machine/am/include/arch/mips32-nemu.h	/^struct Context {$/;"	s
Context	abstract-machine/am/include/arch/native.h	/^struct Context {$/;"	s
Context	abstract-machine/am/include/arch/riscv32-nemu.h	/^struct Context {$/;"	s
Context	abstract-machine/am/include/arch/riscv64-nemu.h	/^struct Context {$/;"	s
Context	abstract-machine/am/include/arch/x86-nemu.h	/^struct Context {$/;"	s
Context	abstract-machine/am/include/arch/x86-qemu.h	/^struct Context {$/;"	s
Context	abstract-machine/am/include/arch/x86_64-qemu.h	/^struct Context {$/;"	s
CopySprites	fceux-am/src/ppu.cpp	/^static void CopySprites(uint8 *target) {$/;"	f	file:
Count	fceux-am/src/boards/3d-block.cpp	/^static int16 Count = 0x0000;$/;"	v	file:
CurInputType	fceux-am/src/drivers/sdl/input.cpp	/^static int CurInputType[NUM_INPUT_DEVICES];$/;"	v	file:
CustInst	fceux-am/src/boards/emu2413.h	/^	uint8 CustInst[8];$/;"	m	struct:__anon44
CycTable	fceux-am/src/x6502.cpp	/^static uint8 CycTable[256] =$/;"	v	file:
CycleCount	fceux-am/src/boards/vrc6.cpp	/^static int32 IRQCount, CycleCount;$/;"	v	file:
CycleCount	fceux-am/src/boards/vrc7.cpp	/^static int32 IRQCount, CycleCount;$/;"	v	file:
CycleCount	fceux-am/src/boards/vrc7p.cpp	/^static int32 IRQCount, CycleCount;$/;"	v	file:
DB	fceux-am/src/x6502struct.h	/^  uint8 DB;         \/* Data bus "cache" for reads from certain areas *\/$/;"	m	struct:__X6502
DB2LIN_AMP_BITS	fceux-am/src/boards/emu2413.c	109;"	d	file:
DB2LIN_TABLE	fceux-am/src/boards/emu2413.c	/^static int16 DB2LIN_TABLE[(DB_MUTE + DB_MUTE) * 2];$/;"	v	file:
DB_BITS	fceux-am/src/boards/emu2413.c	82;"	d	file:
DB_MUTE	fceux-am/src/boards/emu2413.c	84;"	d	file:
DB_NEG	fceux-am/src/boards/emu2413.c	106;"	d	file:
DB_POS	fceux-am/src/boards/emu2413.c	105;"	d	file:
DB_STEP	fceux-am/src/boards/emu2413.c	83;"	d	file:
DEASSERT	abstract-machine/am/src/x86/qemu/ioe.c	362;"	d	file:
DEBUG	fceux-am/src/types.h	33;"	d
DEBUG	fceux-am/src/types.h	35;"	d
DEBUG	nemu/include/common.h	14;"	d
DEC	fceux-am/src/x6502.cpp	161;"	d	file:
DECAY	fceux-am/src/boards/emu2413.c	/^{ SETTLE, ATTACK, DECAY, SUSHOLD, SUSTINE, RELEASE, FINISH };$/;"	e	enum:__anon40	file:
DECLFR	fceux-am/src/boards/01-222.cpp	/^static DECLFR(UNL22211ReadLo) {$/;"	f	file:
DECLFR	fceux-am/src/boards/09-034a.cpp	/^static DECLFR(UNLSMB2JRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/121.cpp	/^static DECLFR(M121Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/158B.cpp	/^static DECLFR(UNL158BProtRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/164.cpp	/^static DECLFR(ReadLow) {$/;"	f	file:
DECLFR	fceux-am/src/boards/170.cpp	/^static DECLFR(M170ProtR) {$/;"	f	file:
DECLFR	fceux-am/src/boards/175.cpp	/^static DECLFR(M175Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/178.cpp	/^static DECLFR(M178ReadSensor) {$/;"	f	file:
DECLFR	fceux-am/src/boards/178.cpp	/^static DECLFR(M178ReadSnd) {$/;"	f	file:
DECLFR	fceux-am/src/boards/186.cpp	/^static DECLFR(ASWRAM) {$/;"	f	file:
DECLFR	fceux-am/src/boards/186.cpp	/^static DECLFR(M186Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/187.cpp	/^static DECLFR(M187Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/208.cpp	/^static DECLFR(M208ProtRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/225.cpp	/^static DECLFR(M225LoRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/228.cpp	/^static DECLFR(M228RamRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/234.cpp	/^DECLFR(M234ReadBank) {$/;"	f
DECLFR	fceux-am/src/boards/234.cpp	/^DECLFR(M234ReadPreg) {$/;"	f
DECLFR	fceux-am/src/boards/36.cpp	/^static DECLFR(M36Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/57.cpp	/^static DECLFR(M57Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/603-5052.cpp	/^static DECLFR(UNL6035052ProtRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/68.cpp	/^static DECLFR(M68Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/69.cpp	/^static DECLFR(M69WRAMRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/80.cpp	/^static DECLFR(M80RamRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/8157.cpp	/^static DECLFR(UNL8157Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/90.cpp	/^static DECLFR(M90TekRead)$/;"	f	file:
DECLFR	fceux-am/src/boards/BMW8544.cpp	/^static DECLFR(UNLBMW8544ProtRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/addrlatch.cpp	/^static DECLFR(BMCD1038Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/addrlatch.cpp	/^static DECLFR(M212Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/addrlatch.cpp	/^static DECLFR(M59Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/addrlatch.cpp	/^static DECLFR(UNL43272Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/bandai.cpp	/^static DECLFR(BandaiRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/bandai.cpp	/^static DECLFR(BarcodeRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/bmc70in1.cpp	/^static DECLFR(BMC70in1Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/bonza.cpp	/^static DECLFR(M216Read5000) {$/;"	f	file:
DECLFR	fceux-am/src/boards/cheapocabra.cpp	/^static DECLFR(M111FlashID)$/;"	f	file:
DECLFR	fceux-am/src/boards/dance2000.cpp	/^static DECLFR(UNLD2000Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/eh8813a.cpp	/^static DECLFR(EH8813ARead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/famicombox.cpp	/^static DECLFR(SSSNROMRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/ghostbusters63in1.cpp	/^static DECLFR(BMCGhostbusters63in1Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static DECLFR(BMCHPxxRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/karaoke.cpp	/^static DECLFR(ExtDev) {$/;"	f	file:
DECLFR	fceux-am/src/boards/ks7017.cpp	/^static DECLFR(FDSRead4030) {$/;"	f	file:
DECLFR	fceux-am/src/boards/ks7030.cpp	/^static DECLFR(UNLKS7030RamRead0) {$/;"	f	file:
DECLFR	fceux-am/src/boards/ks7030.cpp	/^static DECLFR(UNLKS7030RamRead1) {$/;"	f	file:
DECLFR	fceux-am/src/boards/mmc1.cpp	/^static DECLFR(MAWRAM) {$/;"	f	file:
DECLFR	fceux-am/src/boards/mmc3.cpp	/^static DECLFR(M115Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/mmc3.cpp	/^static DECLFR(M12Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/mmc3.cpp	/^static DECLFR(M45Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/mmc3.cpp	/^static DECLFR(MAWRAMMMC6) {$/;"	f	file:
DECLFR	fceux-am/src/boards/mmc3.cpp	/^static DECLFR(MR254WRAM) {$/;"	f	file:
DECLFR	fceux-am/src/boards/mmc5.cpp	/^static DECLFR(MMC5_ExRAMRd) {$/;"	f	file:
DECLFR	fceux-am/src/boards/mmc5.cpp	/^static DECLFR(MMC5_ReadROMRAM) {$/;"	f	file:
DECLFR	fceux-am/src/boards/mmc5.cpp	/^static DECLFR(MMC5_read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/n106.cpp	/^static DECLFR(AWRAM) {$/;"	f	file:
DECLFR	fceux-am/src/boards/n106.cpp	/^static DECLFR(Namco_Read4800) {$/;"	f	file:
DECLFR	fceux-am/src/boards/n106.cpp	/^static DECLFR(Namco_Read5000) {$/;"	f	file:
DECLFR	fceux-am/src/boards/n106.cpp	/^static DECLFR(Namco_Read5800) {$/;"	f	file:
DECLFR	fceux-am/src/boards/onebus.cpp	/^static DECLFR(UNLOneBusReadAPU40XX) {$/;"	f	file:
DECLFR	fceux-am/src/boards/pec-586.cpp	/^static DECLFR(UNLPEC586Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/pec-586.cpp	/^static DECLFR(UNLPEC586ReadHi) {$/;"	f	file:
DECLFR	fceux-am/src/boards/rt-01.cpp	/^static DECLFR(UNLRT01Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/sachen.cpp	/^static DECLFR(S74LS374NRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/sachen.cpp	/^static DECLFR(TCA01Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/sachen.cpp	/^static DECLFR(TCU02Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/sb-2000.cpp	/^static DECLFR(UNLSB2000Read) {$/;"	f	file:
DECLFR	fceux-am/src/boards/sc-127.cpp	/^static DECLFR(UNLSC127ProtRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/sheroes.cpp	/^static DECLFR(MSHRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/t-227-1.cpp	/^static DECLFR(BMCT2271HiRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/transformer.cpp	/^static DECLFR(TransformerRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/unrom512.cpp	/^static DECLFR(UNROM512LatchRead)$/;"	f	file:
DECLFR	fceux-am/src/boards/vrc5.cpp	/^static DECLFR(QTAiRead) {$/;"	f	file:
DECLFR	fceux-am/src/boards/yoko.cpp	/^static DECLFR(UNLYOKOReadDip) {$/;"	f	file:
DECLFR	fceux-am/src/boards/yoko.cpp	/^static DECLFR(UNLYOKOReadLow) {$/;"	f	file:
DECLFR	fceux-am/src/cart.cpp	/^DECLFR(CartBR) {$/;"	f
DECLFR	fceux-am/src/cart.cpp	/^DECLFR(CartBROB) {$/;"	f
DECLFR	fceux-am/src/fceu.cpp	/^static DECLFR(ANull) {$/;"	f	file:
DECLFR	fceux-am/src/fceu.cpp	/^static DECLFR(ARAMH) {$/;"	f	file:
DECLFR	fceux-am/src/fceu.cpp	/^static DECLFR(ARAML) {$/;"	f	file:
DECLFR	fceux-am/src/fceu.h	22;"	d
DECLFR	fceux-am/src/ines.cpp	/^static DECLFR(TrainerRead) {$/;"	f	file:
DECLFR	fceux-am/src/input.cpp	/^static DECLFR(JPRead)$/;"	f	file:
DECLFR	fceux-am/src/ppu.cpp	/^static DECLFR(A2002) {$/;"	f	file:
DECLFR	fceux-am/src/ppu.cpp	/^static DECLFR(A2004) {$/;"	f	file:
DECLFR	fceux-am/src/ppu.cpp	/^static DECLFR(A2007) {$/;"	f	file:
DECLFR	fceux-am/src/ppu.cpp	/^static DECLFR(A200x) {	\/* Not correct for $2004 reads. *\/$/;"	f	file:
DECLFR	fceux-am/src/sound.cpp	/^static DECLFR(StatusRead)$/;"	f	file:
DECLFW	fceux-am/src/boards/01-222.cpp	/^static DECLFW(UNL22211WriteHi) {$/;"	f	file:
DECLFW	fceux-am/src/boards/01-222.cpp	/^static DECLFW(UNL22211WriteLo) {$/;"	f	file:
DECLFW	fceux-am/src/boards/09-034a.cpp	/^static DECLFW(UNLSMB2JWrite1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/09-034a.cpp	/^static DECLFW(UNLSMB2JWrite2) {$/;"	f	file:
DECLFW	fceux-am/src/boards/103.cpp	/^static DECLFW(M103RamWrite0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/103.cpp	/^static DECLFW(M103RamWrite1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/103.cpp	/^static DECLFW(M103Write0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/103.cpp	/^static DECLFW(M103Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/103.cpp	/^static DECLFW(M103Write2) {$/;"	f	file:
DECLFW	fceux-am/src/boards/106.cpp	/^static DECLFW(M106Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/108.cpp	/^static DECLFW(M108Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/112.cpp	/^static DECLFW(M112Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/116.cpp	/^static DECLFW(UNLSL12ModeWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/116.cpp	/^static DECLFW(UNLSL12Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/117.cpp	/^static DECLFW(M117Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/120.cpp	/^static DECLFW(M120Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/121.cpp	/^static DECLFW(M121LoWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/121.cpp	/^static DECLFW(M121Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/12in1.cpp	/^static DECLFW(BMC12IN1Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/15.cpp	/^static DECLFW(M15Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/151.cpp	/^static DECLFW(M151Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/156.cpp	/^static DECLFW(M156Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/158B.cpp	/^static DECLFW(UNL158BProtWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/164.cpp	/^static DECLFW(Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/164.cpp	/^static DECLFW(Write2) {$/;"	f	file:
DECLFW	fceux-am/src/boards/164.cpp	/^static DECLFW(Write3) {$/;"	f	file:
DECLFW	fceux-am/src/boards/168.cpp	/^static DECLFW(M168Dummy) {$/;"	f	file:
DECLFW	fceux-am/src/boards/168.cpp	/^static DECLFW(M168Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/170.cpp	/^static DECLFW(M170ProtW) {$/;"	f	file:
DECLFW	fceux-am/src/boards/175.cpp	/^static DECLFW(M175Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/175.cpp	/^static DECLFW(M175Write2) {$/;"	f	file:
DECLFW	fceux-am/src/boards/176.cpp	/^static DECLFW(M176Write_5001)$/;"	f	file:
DECLFW	fceux-am/src/boards/176.cpp	/^static DECLFW(M176Write_5010)$/;"	f	file:
DECLFW	fceux-am/src/boards/176.cpp	/^static DECLFW(M176Write_5011)$/;"	f	file:
DECLFW	fceux-am/src/boards/176.cpp	/^static DECLFW(M176Write_5FF1)$/;"	f	file:
DECLFW	fceux-am/src/boards/176.cpp	/^static DECLFW(M176Write_5FF2)$/;"	f	file:
DECLFW	fceux-am/src/boards/176.cpp	/^static DECLFW(M176Write_A001)$/;"	f	file:
DECLFW	fceux-am/src/boards/176.cpp	/^static DECLFW(M176Write_WriteSRAM)$/;"	f	file:
DECLFW	fceux-am/src/boards/177.cpp	/^static DECLFW(M177Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/178.cpp	/^static DECLFW(M178Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/178.cpp	/^static DECLFW(M178WriteSnd) {$/;"	f	file:
DECLFW	fceux-am/src/boards/18.cpp	/^static DECLFW(M18WriteChr) {$/;"	f	file:
DECLFW	fceux-am/src/boards/18.cpp	/^static DECLFW(M18WriteIRQ) {$/;"	f	file:
DECLFW	fceux-am/src/boards/18.cpp	/^static DECLFW(M18WritePrg) {$/;"	f	file:
DECLFW	fceux-am/src/boards/183.cpp	/^static DECLFW(M183Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/185.cpp	/^static DECLFW(MWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/186.cpp	/^static DECLFW(BSWRAM) {$/;"	f	file:
DECLFW	fceux-am/src/boards/186.cpp	/^static DECLFW(M186Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/187.cpp	/^static DECLFW(M187Write8000) {$/;"	f	file:
DECLFW	fceux-am/src/boards/187.cpp	/^static DECLFW(M187Write8001) {$/;"	f	file:
DECLFW	fceux-am/src/boards/187.cpp	/^static DECLFW(M187WriteLo) {$/;"	f	file:
DECLFW	fceux-am/src/boards/189.cpp	/^static DECLFW(M189Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/190.cpp	/^static DECLFW(Mapper190_Write89) { prgr = V&7; Mapper190_Sync(); }$/;"	f	file:
DECLFW	fceux-am/src/boards/190.cpp	/^static DECLFW(Mapper190_WriteAB) {$/;"	f	file:
DECLFW	fceux-am/src/boards/190.cpp	/^static DECLFW(Mapper190_WriteCD) { prgr = 8|(V&7); Mapper190_Sync(); }$/;"	f	file:
DECLFW	fceux-am/src/boards/193.cpp	/^static DECLFW(M193Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/199.cpp	/^static DECLFW(M199Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/206.cpp	/^static DECLFW(M206Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/208.cpp	/^static DECLFW(M208ProtWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/208.cpp	/^static DECLFW(M208Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/222.cpp	/^static DECLFW(M222Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/225.cpp	/^static DECLFW(M225LoWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/225.cpp	/^static DECLFW(M225Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/228.cpp	/^static DECLFW(M228RamWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/228.cpp	/^static DECLFW(M228Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/230.cpp	/^static DECLFW(M230Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/232.cpp	/^static DECLFW(M232WriteBank) {$/;"	f	file:
DECLFW	fceux-am/src/boards/232.cpp	/^static DECLFW(M232WritePreg) {$/;"	f	file:
DECLFW	fceux-am/src/boards/235.cpp	/^static DECLFW(M235Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/244.cpp	/^static DECLFW(M244Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/246.cpp	/^static DECLFW(M246Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/252.cpp	/^static DECLFW(M252Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/253.cpp	/^static DECLFW(M253Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/28.cpp	/^static DECLFW(WriteEXP)$/;"	f	file:
DECLFW	fceux-am/src/boards/28.cpp	/^static DECLFW(WritePRG)$/;"	f	file:
DECLFW	fceux-am/src/boards/32.cpp	/^static DECLFW(M32Write0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/32.cpp	/^static DECLFW(M32Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/32.cpp	/^static DECLFW(M32Write2) {$/;"	f	file:
DECLFW	fceux-am/src/boards/32.cpp	/^static DECLFW(M32Write3) {$/;"	f	file:
DECLFW	fceux-am/src/boards/33.cpp	/^static DECLFW(M33Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/33.cpp	/^static DECLFW(M48Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/34.cpp	/^static DECLFW(M34Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/36.cpp	/^static DECLFW(M36Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/3d-block.cpp	/^static DECLFW(UNL3DBlockWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/40.cpp	/^static DECLFW(M40Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/41.cpp	/^static DECLFW(M41Write0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/41.cpp	/^static DECLFW(M41Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/411120-c.cpp	/^static DECLFW(BMC411120CLoWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/42.cpp	/^static DECLFW(M42Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/43.cpp	/^static DECLFW(M43Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/46.cpp	/^static DECLFW(M46Write0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/46.cpp	/^static DECLFW(M46Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/50.cpp	/^static DECLFW(M50Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/51.cpp	/^static DECLFW(M51WriteBank) {$/;"	f	file:
DECLFW	fceux-am/src/boards/51.cpp	/^static DECLFW(M51WriteMode) {$/;"	f	file:
DECLFW	fceux-am/src/boards/57.cpp	/^static DECLFW(M57Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/603-5052.cpp	/^static DECLFW(UNL6035052ProtWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/62.cpp	/^static DECLFW(M62Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/65.cpp	/^static DECLFW(M65Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/67.cpp	/^static DECLFW(M67Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/68.cpp	/^static DECLFW(M68WriteCHR) {$/;"	f	file:
DECLFW	fceux-am/src/boards/68.cpp	/^static DECLFW(M68WriteLo) {$/;"	f	file:
DECLFW	fceux-am/src/boards/68.cpp	/^static DECLFW(M68WriteMIR) {$/;"	f	file:
DECLFW	fceux-am/src/boards/68.cpp	/^static DECLFW(M68WriteNT1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/68.cpp	/^static DECLFW(M68WriteNT2) {$/;"	f	file:
DECLFW	fceux-am/src/boards/68.cpp	/^static DECLFW(M68WriteROM) {$/;"	f	file:
DECLFW	fceux-am/src/boards/69.cpp	/^static DECLFW(M69SWrite0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/69.cpp	/^static DECLFW(M69SWrite1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/69.cpp	/^static DECLFW(M69WRAMWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/69.cpp	/^static DECLFW(M69Write0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/69.cpp	/^static DECLFW(M69Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/71.cpp	/^static DECLFW(M71Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/72.cpp	/^static DECLFW(M72Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/77.cpp	/^static DECLFW(M77Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/79.cpp	/^static DECLFW(M79Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/80.cpp	/^static DECLFW(M80RamWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/80.cpp	/^static DECLFW(M80Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/80.cpp	/^static DECLFW(M95Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/80013-B.cpp	/^static DECLFW(BMC80013BWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/8157.cpp	/^static DECLFW(UNL8157Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/82.cpp	/^static DECLFW(M82Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/8237.cpp	/^static DECLFW(UNL8237ExWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/8237.cpp	/^static DECLFW(UNL8237Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/830118C.cpp	/^static DECLFW(BMC830118CLoWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/88.cpp	/^static DECLFW(M88Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/8in1.cpp	/^static DECLFW(BMC8IN1Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/90.cpp	/^static DECLFW(M90CHRhiWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/90.cpp	/^static DECLFW(M90CHRlowWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/90.cpp	/^static DECLFW(M90DummyWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/90.cpp	/^static DECLFW(M90IRQWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/90.cpp	/^static DECLFW(M90ModeWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/90.cpp	/^static DECLFW(M90NTWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/90.cpp	/^static DECLFW(M90PRGWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/90.cpp	/^static DECLFW(M90TekWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/91.cpp	/^static DECLFW(M91Write0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/91.cpp	/^static DECLFW(M91Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/96.cpp	/^static DECLFW(M96Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/99.cpp	/^static DECLFW(M99Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/BMW8544.cpp	/^static DECLFW(UNLBMW8544ProtWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/F-15.cpp	/^static DECLFW(BMCF15Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/a9746.cpp	/^static DECLFW(UNLA9746Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ac-08.cpp	/^static DECLFW(AC08Mirr) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ac-08.cpp	/^static DECLFW(AC08Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/addrlatch.cpp	/^static DECLFW(LatchWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ax5705.cpp	/^static DECLFW(UNLAX5705Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bandai.cpp	/^static DECLFW(BandaiWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bb.cpp	/^static DECLFW(UNLBBWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bmc13in1jy110.cpp	/^static DECLFW(BMC13in1JY110Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bmc42in1r.cpp	/^static DECLFW(M226Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bmc64in1nr.cpp	/^static DECLFW(BMC64in1nrWriteHi) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bmc64in1nr.cpp	/^static DECLFW(BMC64in1nrWriteLo) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bmc70in1.cpp	/^static DECLFW(BMC70in1Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bonza.cpp	/^static DECLFW(M216Write5000) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bonza.cpp	/^static DECLFW(M216WriteHi) {$/;"	f	file:
DECLFW	fceux-am/src/boards/bs-5.cpp	/^static DECLFW(MBS5Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/cheapocabra.cpp	/^static DECLFW(M111Flash) {$/;"	f	file:
DECLFW	fceux-am/src/boards/cheapocabra.cpp	/^static DECLFW(M111Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/cityfighter.cpp	/^static DECLFW(UNLCITYFIGHTWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/coolboy.cpp	/^static DECLFW(COOLBOYWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/dance2000.cpp	/^static DECLFW(UNLD2000Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/datalatch.cpp	/^static DECLFW(LatchWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/datalatch.cpp	/^static DECLFW(NROMWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/dream.cpp	/^static DECLFW(DREAMWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/edu2000.cpp	/^static DECLFW(UNLEDU2000HiWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/eh8813a.cpp	/^static DECLFW(EH8813AWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/et-100.cpp	/^static DECLFW(BMC1024CA1Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/et-4320.cpp	/^static DECLFW(BMC810131C_Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/famicombox.cpp	/^static DECLFW(SSSNROMWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ffe.cpp	/^static DECLFW(FFEWriteChr) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ffe.cpp	/^static DECLFW(FFEWriteIRQ) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ffe.cpp	/^static DECLFW(FFEWriteLatch) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ffe.cpp	/^static DECLFW(FFEWriteMirr) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ffe.cpp	/^static DECLFW(FFEWritePrg) {$/;"	f	file:
DECLFW	fceux-am/src/boards/fk23c.cpp	/^static DECLFW(BMCFK23CHiWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/fk23c.cpp	/^static DECLFW(BMCFK23CWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/ghostbusters63in1.cpp	/^static DECLFW(BMCGhostbusters63in1Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/gs-2004.cpp	/^static DECLFW(BMCGS2004Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/gs-2013.cpp	/^static DECLFW(BMCGS2013Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/h2288.cpp	/^static DECLFW(H2288WriteHi) {$/;"	f	file:
DECLFW	fceux-am/src/boards/h2288.cpp	/^static DECLFW(H2288WriteLo) {$/;"	f	file:
DECLFW	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static DECLFW(BMCHPxxHiWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static DECLFW(BMCHPxxWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/hp898f.cpp	/^static DECLFW(HP898FWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/inlnsf.cpp	/^static DECLFW(M31Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/karaoke.cpp	/^static DECLFW(M188Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/kof97.cpp	/^static DECLFW(UNLKOF97CMDWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/kof97.cpp	/^static DECLFW(UNLKOF97IRQWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7010.cpp	/^static DECLFW(UNLKS7010Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7012.cpp	/^static DECLFW(UNLKS7012Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7013.cpp	/^static DECLFW(UNLKS7013BHiWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7013.cpp	/^static DECLFW(UNLKS7013BLoWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7016.cpp	/^static DECLFW(UNLKS7016Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7017.cpp	/^static DECLFW(UNLKS7017Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7030.cpp	/^static DECLFW(UNLKS7030RamWrite0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7030.cpp	/^static DECLFW(UNLKS7030RamWrite1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7030.cpp	/^static DECLFW(UNLKS7030Write0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7030.cpp	/^static DECLFW(UNLKS7030Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7031.cpp	/^static DECLFW(UNLKS7031Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7032.cpp	/^static DECLFW(UNLKS7032Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7037.cpp	/^static DECLFW(UNLKS7037Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/ks7057.cpp	/^static DECLFW(UNLKS7057Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/le05.cpp	/^static DECLFW(LE05Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/lh32.cpp	/^static DECLFW(LH32Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/lh53.cpp	/^static DECLFW(LH53IRQaWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/lh53.cpp	/^static DECLFW(LH53RamWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/lh53.cpp	/^static DECLFW(LH53Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mihunche.cpp	/^static DECLFW(UNLCC21Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mihunche.cpp	/^static DECLFW(UNLCC21Write2) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc1.cpp	/^static DECLFW(MBWRAM) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc1.cpp	/^static DECLFW(MMC1_write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc2and4.cpp	/^DECLFW(MMC2and4Write) {$/;"	f
DECLFW	fceux-am/src/boards/mmc3.cpp	/^DECLFW(KT008HackWrite) {$/;"	f
DECLFW	fceux-am/src/boards/mmc3.cpp	/^DECLFW(MMC3_CMDWrite) {$/;"	f
DECLFW	fceux-am/src/boards/mmc3.cpp	/^DECLFW(MMC3_IRQWrite) {$/;"	f
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M114ExWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M114Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M115Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M12Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M134Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M205Write0) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M205Write1) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M249Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M250IRQWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M250Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M254Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M37Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M44Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M45Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M47Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M49Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(M52Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(MBWRAMMMC6) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(Mapper196Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(Mapper196WriteLo) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc3.cpp	/^static DECLFW(UNLMaliSBWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc5.cpp	/^static DECLFW(MMC5_ExRAMWr) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc5.cpp	/^static DECLFW(MMC5_WriteROMRAM) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc5.cpp	/^static DECLFW(Mapper5_SW) {$/;"	f	file:
DECLFW	fceux-am/src/boards/mmc5.cpp	/^static DECLFW(Mapper5_write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/n106.cpp	/^static DECLFW(BWRAM) {$/;"	f	file:
DECLFW	fceux-am/src/boards/n106.cpp	/^static DECLFW(Mapper19C0D8_write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/n106.cpp	/^static DECLFW(Mapper19_write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/n625092.cpp	/^static DECLFW(UNLN625092WriteBank) {$/;"	f	file:
DECLFW	fceux-am/src/boards/n625092.cpp	/^static DECLFW(UNLN625092WriteCommand) {$/;"	f	file:
DECLFW	fceux-am/src/boards/novel.cpp	/^static DECLFW(NovelWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/onebus.cpp	/^static DECLFW(UNLOneBusWriteAPU40XX) {$/;"	f	file:
DECLFW	fceux-am/src/boards/onebus.cpp	/^static DECLFW(UNLOneBusWriteCPU410X) {$/;"	f	file:
DECLFW	fceux-am/src/boards/onebus.cpp	/^static DECLFW(UNLOneBusWriteMMC3) {$/;"	f	file:
DECLFW	fceux-am/src/boards/onebus.cpp	/^static DECLFW(UNLOneBusWritePPU201X) {$/;"	f	file:
DECLFW	fceux-am/src/boards/pec-586.cpp	/^static DECLFW(UNLPEC586Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sa-9602b.cpp	/^static DECLFW(SA9602BWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sachen.cpp	/^static DECLFW(S74LS374NAWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sachen.cpp	/^static DECLFW(S74LS374NWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sachen.cpp	/^static DECLFW(S8259Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sachen.cpp	/^static DECLFW(SADWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sachen.cpp	/^static DECLFW(SAWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sachen.cpp	/^static DECLFW(TCU01Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sachen.cpp	/^static DECLFW(TCU02Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sb-2000.cpp	/^static DECLFW(UNLSB2000Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sc-127.cpp	/^static DECLFW(UNLSC127Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sheroes.cpp	/^static DECLFW(MSHWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/sl1632.cpp	/^static DECLFW(UNLSL1632CMDWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/subor.cpp	/^static DECLFW(M166Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/super24.cpp	/^static DECLFW(Super24Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/supervision.cpp	/^static DECLFW(SuperWriteHi) {$/;"	f	file:
DECLFW	fceux-am/src/boards/supervision.cpp	/^static DECLFW(SuperWriteLo) {$/;"	f	file:
DECLFW	fceux-am/src/boards/t-227-1.cpp	/^static DECLFW(BMCT2271LoWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/t-262.cpp	/^static DECLFW(BMCT262Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/tengen.cpp	/^static DECLFW(M64Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/tf-1201.cpp	/^static DECLFW(UNLTF1201Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/unrom512.cpp	/^static DECLFW(UNROM512HLatchWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/unrom512.cpp	/^static DECLFW(UNROM512LLatchWrite)$/;"	f	file:
DECLFW	fceux-am/src/boards/vrc1.cpp	/^static DECLFW(M75Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/vrc2and4.cpp	/^static DECLFW(VRC24Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/vrc3.cpp	/^static DECLFW(M73Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/vrc5.cpp	/^static DECLFW(QTAiWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/vrc6.cpp	/^static DECLFW(VRC6SW) {$/;"	f	file:
DECLFW	fceux-am/src/boards/vrc6.cpp	/^static DECLFW(VRC6Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/vrc7.cpp	/^static DECLFW(VRC7SW) {$/;"	f	file:
DECLFW	fceux-am/src/boards/vrc7.cpp	/^static DECLFW(VRC7Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/vrc7p.cpp	/^static DECLFW(UNLVRC7Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/yoko.cpp	/^static DECLFW(M83Write) {$/;"	f	file:
DECLFW	fceux-am/src/boards/yoko.cpp	/^static DECLFW(UNLYOKOWrite) {$/;"	f	file:
DECLFW	fceux-am/src/boards/yoko.cpp	/^static DECLFW(UNLYOKOWriteLow) {$/;"	f	file:
DECLFW	fceux-am/src/cart.cpp	/^DECLFW(CartBW) {$/;"	f
DECLFW	fceux-am/src/fceu.cpp	/^static DECLFW(BNull) {$/;"	f	file:
DECLFW	fceux-am/src/fceu.cpp	/^static DECLFW(BRAMH) {$/;"	f	file:
DECLFW	fceux-am/src/fceu.cpp	/^static DECLFW(BRAML) {$/;"	f	file:
DECLFW	fceux-am/src/fceu.h	23;"	d
DECLFW	fceux-am/src/input.cpp	/^static DECLFW(B4016)$/;"	f	file:
DECLFW	fceux-am/src/ppu.cpp	/^static DECLFW(B2000) {$/;"	f	file:
DECLFW	fceux-am/src/ppu.cpp	/^static DECLFW(B2001) {$/;"	f	file:
DECLFW	fceux-am/src/ppu.cpp	/^static DECLFW(B2002) {$/;"	f	file:
DECLFW	fceux-am/src/ppu.cpp	/^static DECLFW(B2003) {$/;"	f	file:
DECLFW	fceux-am/src/ppu.cpp	/^static DECLFW(B2004) {$/;"	f	file:
DECLFW	fceux-am/src/ppu.cpp	/^static DECLFW(B2005) {$/;"	f	file:
DECLFW	fceux-am/src/ppu.cpp	/^static DECLFW(B2006) {$/;"	f	file:
DECLFW	fceux-am/src/ppu.cpp	/^static DECLFW(B2007) {$/;"	f	file:
DECLFW	fceux-am/src/ppu.cpp	/^static DECLFW(B4014) {$/;"	f	file:
DECLFW	fceux-am/src/sound.cpp	/^DECLFW(Write_IRQFM)$/;"	f
DECLFW	fceux-am/src/sound.cpp	/^static DECLFW(StatusWrite)$/;"	f	file:
DECLFW	fceux-am/src/sound.cpp	/^static DECLFW(Write_DMCRegs)$/;"	f	file:
DECLFW	fceux-am/src/sound.cpp	/^static DECLFW(Write_PSG)$/;"	f	file:
DELIVS	abstract-machine/am/src/x86/qemu/ioe.c	360;"	d	file:
DIFF	nemu/Makefile	/^DIFF = qemu$/;"	m
DIFF	nemu/Makefile	/^DIFF ?= kvm$/;"	m
DIFFTEST_REG_SIZE	nemu/src/isa/mips32/difftest/difftest.h	4;"	d
DIFFTEST_REG_SIZE	nemu/src/isa/riscv32/difftest/difftest.h	4;"	d
DIFFTEST_REG_SIZE	nemu/src/isa/riscv64/difftest/difftest.h	4;"	d
DIFFTEST_REG_SIZE	nemu/src/isa/x86/difftest/difftest.h	4;"	d
DIFF_REF_PATH	nemu/Makefile	/^DIFF_REF_PATH = $(NEMU_HOME)$/;"	m
DIFF_REF_PATH	nemu/Makefile	/^DIFF_REF_PATH = $(NEMU_HOME)\/tools\/kvm-diff$/;"	m
DIFF_REF_PATH	nemu/Makefile	/^DIFF_REF_PATH = $(NEMU_HOME)\/tools\/qemu-diff$/;"	m
DIFF_REF_SO	nemu/Makefile	/^DIFF_REF_SO = $(DIFF_REF_PATH)\/build\/$(ISA)-kvm-so$/;"	m
DIFF_REF_SO	nemu/Makefile	/^DIFF_REF_SO = $(DIFF_REF_PATH)\/build\/$(ISA)-nemu-interpreter-so$/;"	m
DIFF_REF_SO	nemu/Makefile	/^DIFF_REF_SO = $(DIFF_REF_PATH)\/build\/$(ISA)-qemu-so$/;"	m
DIFF_TEST	nemu/include/common.h	13;"	d
DISKSZ	abstract-machine/am/src/x86/qemu/ioe.c	265;"	d	file:
DMCAddress	fceux-am/src/sound.cpp	/^static uint32 DMCAddress=0;$/;"	v	file:
DMCAddressLatch	fceux-am/src/sound.cpp	/^uint8 DMCAddressLatch=0;	\/\/ $4012 \/ Start of DMC waveform is at address $C000 + $40*$xx$/;"	v
DMCBitCount	fceux-am/src/sound.cpp	/^\/*static*\/ uint8 DMCBitCount=0;$/;"	v
DMCDMA	fceux-am/src/sound.cpp	/^static INLINE void DMCDMA(void)$/;"	f	file:
DMCDMABuf	fceux-am/src/sound.cpp	/^static uint8 DMCDMABuf=0;$/;"	v	file:
DMCFormat	fceux-am/src/sound.cpp	/^uint8 DMCFormat=0;			\/\/ $4010 \/ Play mode and frequency$/;"	v
DMCHaveDMA	fceux-am/src/sound.cpp	/^static char DMCHaveDMA=0;$/;"	v	file:
DMCHaveSample	fceux-am/src/sound.cpp	/^\/*static*\/ char DMCHaveSample=0;$/;"	v
DMCPeriod	fceux-am/src/sound.cpp	/^\/*static*\/ int32 DMCPeriod=0;$/;"	v
DMCShift	fceux-am/src/sound.cpp	/^static uint8 DMCShift=0;$/;"	v	file:
DMCSize	fceux-am/src/sound.cpp	/^static int32 DMCSize=0;$/;"	v	file:
DMCSizeLatch	fceux-am/src/sound.cpp	/^uint8 DMCSizeLatch=0;		\/\/ $4013 \/ Length of DMC waveform is $10*$xx + 1 bytes (128*$xx + 8 samples)$/;"	v
DMC_7bit	fceux-am/src/sound.cpp	/^bool DMC_7bit = 0; \/\/ used to skip overclocking$/;"	v
DMCacc	fceux-am/src/sound.cpp	/^\/*static*\/ int32 DMCacc=1;$/;"	v
DPL_KERN	abstract-machine/am/src/x86.h	2;"	d
DPL_USER	abstract-machine/am/src/x86.h	3;"	d
DP_BASE_BITS	fceux-am/src/boards/emu2413.c	79;"	d	file:
DP_BITS	fceux-am/src/boards/emu2413.c	77;"	d	file:
DP_WIDTH	fceux-am/src/boards/emu2413.c	78;"	d	file:
DR	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
DREAMPower	fceux-am/src/boards/dream.cpp	/^static void DREAMPower(void) {$/;"	f	file:
DRegBuf	fceux-am/src/boards/mmc3.cpp	/^uint8 DRegBuf[8];$/;"	v
DRegs	fceux-am/src/boards/206.cpp	/^static uint8 DRegs[8];$/;"	v	file:
DRegs	fceux-am/src/boards/mmc1.cpp	/^static uint8 DRegs[4];$/;"	v	file:
DST_DIR	abstract-machine/Makefile	/^DST_DIR   = $(WORK_DIR)\/build\/$(ARCH)$/;"	m
DTestButton	fceux-am/src/drivers/sdl/input.cpp	/^DTestButton (ButtConfig * bc)$/;"	f	file:
DUMMY	fceux-am/src/drivers/sdl/sdl.cpp	369;"	d	file:
D_FLAG	fceux-am/src/x6502.h	59;"	d
Dcomplex	abstract-machine/klib/src/int64.c	/^typedef double _Complex Dcomplex;$/;"	t	file:
Dcomplex	abstract-machine/klib/src/int64.c	/^typedef struct { double real, imaginary; } Dcomplex;$/;"	t	typeref:struct:__anon29	file:
DecCountTo1	fceux-am/src/sound.h	/^	uint8 DecCountTo1;$/;"	m	struct:__anon36
DecodeExecState	nemu/include/cpu/decode.h	/^} DecodeExecState;$/;"	t	typeref:struct:__anon67
DefaultGamePad	fceux-am/src/drivers/sdl/input.cpp	/^const int DefaultGamePad[GAMEPAD_NUM_DEVICES][GAMEPAD_NUM_BUTTONS] =$/;"	v
DefaultGamePadDevice	fceux-am/src/drivers/sdl/input.cpp	/^const char *DefaultGamePadDevice[GAMEPAD_NUM_DEVICES] =$/;"	v
DetectMMC1WRAMSize	fceux-am/src/boards/mmc1.cpp	/^static int DetectMMC1WRAMSize(CartInfo *info, int *bs) {$/;"	f	file:
DetectMMC5WRAMSize	fceux-am/src/boards/mmc5.cpp	/^int DetectMMC5WRAMSize(uint32 crc32) {$/;"	f
DeviceNum	fceux-am/src/drivers/sdl/input.h	/^	uint8  DeviceNum[MAXBUTTCONFIG];$/;"	m	struct:__anon48
Do5PCM	fceux-am/src/boards/mmc5.cpp	/^static void Do5PCM() {$/;"	f	file:
Do5PCMHQ	fceux-am/src/boards/mmc5.cpp	/^static void Do5PCMHQ() {$/;"	f	file:
Do5SQ	fceux-am/src/boards/mmc5.cpp	/^static void Do5SQ(int P) {$/;"	f	file:
Do5SQHQ	fceux-am/src/boards/mmc5.cpp	/^static void Do5SQHQ(int P) {$/;"	f	file:
DoAYSQ	fceux-am/src/boards/69.cpp	/^static void DoAYSQ(int x) {$/;"	f	file:
DoAYSQHQ	fceux-am/src/boards/69.cpp	/^static void DoAYSQHQ(int x) {$/;"	f	file:
DoCHRRAMROM	fceux-am/src/boards/n106.cpp	/^static void DoCHRRAMROM(int x, uint8 V) {$/;"	f	file:
DoFun	fceux-am/src/drivers/sdl/sdl.cpp	/^static void DoFun(int frameskip, int periodic_saves)$/;"	f	file:
DoLine	fceux-am/src/ppu.cpp	/^static void DoLine(void) {$/;"	f	file:
DoNTARAMROM	fceux-am/src/boards/n106.cpp	/^static void DoNTARAMROM(int w, uint8 V) {$/;"	f	file:
DoNamcoSound	fceux-am/src/boards/n106.cpp	/^static void DoNamcoSound(int32 *Wave, int Count) {$/;"	f	file:
DoNamcoSoundHQ	fceux-am/src/boards/n106.cpp	/^static void DoNamcoSoundHQ(void) {$/;"	f	file:
DoNoise	fceux-am/src/sound.cpp	/^static void (*DoNoise)(void)=Dummyfunc;$/;"	v	file:
DoNovel	fceux-am/src/boards/novel.cpp	/^static void DoNovel(void) {$/;"	f	file:
DoPCM	fceux-am/src/sound.cpp	/^static void (*DoPCM)(void)=Dummyfunc;$/;"	v	file:
DoSQ1	fceux-am/src/sound.cpp	/^static void (*DoSQ1)(void)=Dummyfunc;$/;"	v	file:
DoSQ2	fceux-am/src/sound.cpp	/^static void (*DoSQ2)(void)=Dummyfunc;$/;"	v	file:
DoSQV	fceux-am/src/boards/vrc6.cpp	/^static INLINE void DoSQV(int x) {$/;"	f	file:
DoSQV1	fceux-am/src/boards/vrc6.cpp	/^static void DoSQV1(void) {$/;"	f	file:
DoSQV1HQ	fceux-am/src/boards/vrc6.cpp	/^static void DoSQV1HQ(void) {$/;"	f	file:
DoSQV2	fceux-am/src/boards/vrc6.cpp	/^static void DoSQV2(void) {$/;"	f	file:
DoSQV2HQ	fceux-am/src/boards/vrc6.cpp	/^static void DoSQV2HQ(void) {$/;"	f	file:
DoSQVHQ	fceux-am/src/boards/vrc6.cpp	/^static INLINE void DoSQVHQ(int x) {$/;"	f	file:
DoSawV	fceux-am/src/boards/vrc6.cpp	/^static void DoSawV(void) {$/;"	f	file:
DoSawVHQ	fceux-am/src/boards/vrc6.cpp	/^static void DoSawVHQ(void) {$/;"	f	file:
DoTriangle	fceux-am/src/sound.cpp	/^static void (*DoTriangle)(void)=Dummyfunc;$/;"	v	file:
DoVRC7Sound	fceux-am/src/boards/vrc7.cpp	/^void DoVRC7Sound(void) {$/;"	f
Draw	fceux-am/src/input.h	/^	void Draw(int w, uint8 *buf, int arg) { if(_Draw) _Draw(w,buf,arg); }$/;"	f	struct:INPUTC
Draw	fceux-am/src/input.h	/^	void Draw(uint8 *buf, int arg) { if(_Draw) _Draw(buf,arg); }$/;"	f	struct:INPUTCFC
DrawTextTrans	fceux-am/src/drawing.cpp	/^void DrawTextTrans(uint8 *dest, uint32 width, uint8 *textmsg, uint8 fgcolor)$/;"	f
DrawTextTransWH	fceux-am/src/drawing.cpp	/^void DrawTextTransWH(uint8 *dest, int width, uint8 *textmsg, uint8 fgcolor, int max_w, int max_h, int border)$/;"	f
DreamTech01_Init	fceux-am/src/boards/dream.cpp	/^void DreamTech01_Init(CartInfo *info) {$/;"	f
DriverInitialize	fceux-am/src/drivers/sdl/sdl.cpp	/^DriverInitialize(FCEUGI *gi)$/;"	f	file:
DriverKill	fceux-am/src/drivers/sdl/sdl.cpp	/^DriverKill()$/;"	f	file:
DummyCHR	fceux-am/src/boards/185.cpp	/^static uint8 *DummyCHR = NULL;$/;"	v	file:
DummyJPort	fceux-am/src/input.cpp	/^static INPUTC DummyJPort={0};$/;"	v	file:
DummyPortFC	fceux-am/src/input.cpp	/^static INPUTCFC DummyPortFC={0};$/;"	v	file:
DummyRead	fceux-am/src/ppu.cpp	/^uint32 TempAddr = 0, RefreshAddr = 0, DummyRead = 0, NTRefreshAddr = 0;$/;"	v
Dummyfunc	fceux-am/src/sound.cpp	/^static void Dummyfunc(void) {};$/;"	f	file:
EFCEUI	fceux-am/src/driver.h	/^enum EFCEUI$/;"	g
EG	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
EG2DB	fceux-am/src/boards/emu2413.c	101;"	d	file:
EGIT	fceux-am/src/git.h	/^enum EGIT$/;"	g
EGIV	fceux-am/src/git.h	/^enum EGIV$/;"	g
EG_BITS	fceux-am/src/boards/emu2413.c	88;"	d	file:
EG_DP_BITS	fceux-am/src/boards/emu2413.c	113;"	d	file:
EG_DP_WIDTH	fceux-am/src/boards/emu2413.c	114;"	d	file:
EG_MUTE	fceux-am/src/boards/emu2413.c	89;"	d	file:
EG_STEP	fceux-am/src/boards/emu2413.c	87;"	d	file:
EH8813APower	fceux-am/src/boards/eh8813a.cpp	/^static void EH8813APower(void) {$/;"	f	file:
EH8813AReset	fceux-am/src/boards/eh8813a.cpp	/^static void EH8813AReset(void) {$/;"	f	file:
EKROM_Init	fceux-am/src/boards/mmc5.cpp	/^void EKROM_Init(CartInfo *info) {$/;"	f
ELROM_Init	fceux-am/src/boards/mmc5.cpp	/^void ELROM_Init(CartInfo *info) {$/;"	f
EMPTY	nemu/include/cpu/exec.h	18;"	d
EMPTY_PALETTE_1	fceux-am/src/palettes/palettes.h	1;"	d
EMPTY_PALETTE_16	fceux-am/src/palettes/palettes.h	3;"	d
EMPTY_PALETTE_4	fceux-am/src/palettes/palettes.h	2;"	d
EMPTY_PALETTE_64	fceux-am/src/palettes/palettes.h	4;"	d
EMPTY_PALETTE_DEEMPH_X_7	fceux-am/src/palettes/palettes.h	5;"	d
EMUCMD	fceux-am/src/input.h	/^enum EMUCMD$/;"	g
EMUCMDFLAG	fceux-am/src/input.h	/^enum EMUCMDFLAG$/;"	g
EMUCMDFLAG_NONE	fceux-am/src/input.h	/^	EMUCMDFLAG_NONE = 0,$/;"	e	enum:EMUCMDFLAG
EMUCMDFLAG_TASEDITOR	fceux-am/src/input.h	/^	EMUCMDFLAG_TASEDITOR = 1,$/;"	e	enum:EMUCMDFLAG
EMUCMDFN	fceux-am/src/input.h	/^typedef void EMUCMDFN(void);$/;"	t
EMUCMDTABLE	fceux-am/src/input.h	/^struct EMUCMDTABLE$/;"	s
EMUCMDTYPE	fceux-am/src/input.h	/^enum EMUCMDTYPE$/;"	g
EMUCMDTYPE_AVI	fceux-am/src/input.h	/^	EMUCMDTYPE_AVI,$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_FDS	fceux-am/src/input.h	/^	EMUCMDTYPE_FDS,$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_MAX	fceux-am/src/input.h	/^	EMUCMDTYPE_MAX$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_MISC	fceux-am/src/input.h	/^	EMUCMDTYPE_MISC=0,$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_MOVIE	fceux-am/src/input.h	/^	EMUCMDTYPE_MOVIE,$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_SOUND	fceux-am/src/input.h	/^	EMUCMDTYPE_SOUND,$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_SPEED	fceux-am/src/input.h	/^	EMUCMDTYPE_SPEED,$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_STATE	fceux-am/src/input.h	/^	EMUCMDTYPE_STATE,$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_TASEDITOR	fceux-am/src/input.h	/^	EMUCMDTYPE_TASEDITOR,	\/\/ Windows-only as well$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_TOOL	fceux-am/src/input.h	/^	EMUCMDTYPE_TOOL,  \/\/All Tools type are currenty windows only programs$/;"	e	enum:EMUCMDTYPE
EMUCMDTYPE_VSUNI	fceux-am/src/input.h	/^	EMUCMDTYPE_VSUNI,$/;"	e	enum:EMUCMDTYPE
EMUCMD_AVI_RECORD_AS	fceux-am/src/input.h	/^	EMUCMD_AVI_RECORD_AS,$/;"	e	enum:EMUCMD
EMUCMD_AVI_STOP	fceux-am/src/input.h	/^	EMUCMD_AVI_STOP,$/;"	e	enum:EMUCMD
EMUCMD_CLOSEROM	fceux-am/src/input.h	/^	EMUCMD_CLOSEROM,$/;"	e	enum:EMUCMD
EMUCMD_EXIT	fceux-am/src/input.h	/^	EMUCMD_EXIT,$/;"	e	enum:EMUCMD
EMUCMD_FDS_EJECT_INSERT	fceux-am/src/input.h	/^	EMUCMD_FDS_EJECT_INSERT,$/;"	e	enum:EMUCMD
EMUCMD_FDS_SIDE_SELECT	fceux-am/src/input.h	/^	EMUCMD_FDS_SIDE_SELECT,$/;"	e	enum:EMUCMD
EMUCMD_FPS_DISPLAY_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_FPS_DISPLAY_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_FRAMEADV_SKIPLAG	fceux-am/src/input.h	/^	EMUCMD_FRAMEADV_SKIPLAG,$/;"	e	enum:EMUCMD
EMUCMD_FRAME_ADVANCE	fceux-am/src/input.h	/^	EMUCMD_FRAME_ADVANCE,$/;"	e	enum:EMUCMD
EMUCMD_HIDE_MENU_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_HIDE_MENU_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_FROM	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_FROM,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_0	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_0,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_1	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_1,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_2	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_2,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_3	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_3,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_4	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_4,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_5	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_5,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_6	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_6,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_7	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_7,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_8	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_8,$/;"	e	enum:EMUCMD
EMUCMD_LOAD_STATE_SLOT_9	fceux-am/src/input.h	/^	EMUCMD_LOAD_STATE_SLOT_9,$/;"	e	enum:EMUCMD
EMUCMD_MAX	fceux-am/src/input.h	/^	EMUCMD_MAX$/;"	e	enum:EMUCMD
EMUCMD_MISC_AUTOSAVE	fceux-am/src/input.h	/^	EMUCMD_MISC_AUTOSAVE,$/;"	e	enum:EMUCMD
EMUCMD_MISC_DISPLAY_BG_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_MISC_DISPLAY_BG_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_MISC_DISPLAY_LAGCOUNTER_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_MISC_DISPLAY_LAGCOUNTER_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_MISC_DISPLAY_MOVIESUBTITLES	fceux-am/src/input.h	/^	EMUCMD_MISC_DISPLAY_MOVIESUBTITLES,$/;"	e	enum:EMUCMD
EMUCMD_MISC_DISPLAY_OBJ_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_MISC_DISPLAY_OBJ_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_MISC_OPENTASEDITOR	fceux-am/src/input.h	/^	EMUCMD_MISC_OPENTASEDITOR,$/;"	e	enum:EMUCMD
EMUCMD_MISC_SHOWSTATES	fceux-am/src/input.h	/^	EMUCMD_MISC_SHOWSTATES,$/;"	e	enum:EMUCMD
EMUCMD_MISC_TOGGLEFULLSCREEN	fceux-am/src/input.h	/^	EMUCMD_MISC_TOGGLEFULLSCREEN,$/;"	e	enum:EMUCMD
EMUCMD_MISC_UNDOREDOSAVESTATE	fceux-am/src/input.h	/^	EMUCMD_MISC_UNDOREDOSAVESTATE,$/;"	e	enum:EMUCMD
EMUCMD_MISC_USE_INPUT_PRESET_1	fceux-am/src/input.h	/^	EMUCMD_MISC_USE_INPUT_PRESET_1,$/;"	e	enum:EMUCMD
EMUCMD_MISC_USE_INPUT_PRESET_2	fceux-am/src/input.h	/^	EMUCMD_MISC_USE_INPUT_PRESET_2,$/;"	e	enum:EMUCMD
EMUCMD_MISC_USE_INPUT_PRESET_3	fceux-am/src/input.h	/^	EMUCMD_MISC_USE_INPUT_PRESET_3,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_DELETE_1_FRAME	fceux-am/src/input.h	/^	EMUCMD_MOVIE_DELETE_1_FRAME,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_FRAME_DISPLAY_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_MOVIE_FRAME_DISPLAY_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_ICON_DISPLAY_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_MOVIE_ICON_DISPLAY_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_INPUT_DISPLAY_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_MOVIE_INPUT_DISPLAY_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_INSERT_1_FRAME	fceux-am/src/input.h	/^	EMUCMD_MOVIE_INSERT_1_FRAME,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_NEXT_RECORD_MODE	fceux-am/src/input.h	/^	EMUCMD_MOVIE_NEXT_RECORD_MODE,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_PLAY_FROM_BEGINNING	fceux-am/src/input.h	/^	EMUCMD_MOVIE_PLAY_FROM_BEGINNING,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_PREV_RECORD_MODE	fceux-am/src/input.h	/^	EMUCMD_MOVIE_PREV_RECORD_MODE,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_READONLY_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_MOVIE_READONLY_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_RECORD_MODE_INSERT	fceux-am/src/input.h	/^	EMUCMD_MOVIE_RECORD_MODE_INSERT,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_RECORD_MODE_OVERWRITE	fceux-am/src/input.h	/^	EMUCMD_MOVIE_RECORD_MODE_OVERWRITE,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_RECORD_MODE_TRUNCATE	fceux-am/src/input.h	/^	EMUCMD_MOVIE_RECORD_MODE_TRUNCATE,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_RECORD_TO	fceux-am/src/input.h	/^	EMUCMD_MOVIE_RECORD_TO,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_REPLAY_FROM	fceux-am/src/input.h	/^	EMUCMD_MOVIE_REPLAY_FROM,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_STOP	fceux-am/src/input.h	/^	EMUCMD_MOVIE_STOP,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_TOGGLE_RECORDING	fceux-am/src/input.h	/^	EMUCMD_MOVIE_TOGGLE_RECORDING,$/;"	e	enum:EMUCMD
EMUCMD_MOVIE_TRUNCATE	fceux-am/src/input.h	/^	EMUCMD_MOVIE_TRUNCATE,$/;"	e	enum:EMUCMD
EMUCMD_OPENROM	fceux-am/src/input.h	/^	EMUCMD_OPENROM,$/;"	e	enum:EMUCMD
EMUCMD_PAUSE	fceux-am/src/input.h	/^	EMUCMD_PAUSE,$/;"	e	enum:EMUCMD
EMUCMD_POWER	fceux-am/src/input.h	/^	EMUCMD_POWER=0,$/;"	e	enum:EMUCMD
EMUCMD_RELOAD	fceux-am/src/input.h	/^	EMUCMD_RELOAD,$/;"	e	enum:EMUCMD
EMUCMD_RERECORD_DISPLAY_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_RERECORD_DISPLAY_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_RESET	fceux-am/src/input.h	/^	EMUCMD_RESET,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_0	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_0,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_1	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_1,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_2	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_2,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_3	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_3,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_4	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_4,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_5	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_5,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_6	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_6,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_7	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_7,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_8	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_8,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_9	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_9,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_NEXT	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_NEXT,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_SLOT_PREV	fceux-am/src/input.h	/^	EMUCMD_SAVE_SLOT_PREV,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_AS	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_AS,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_0	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_0,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_1	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_1,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_2	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_2,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_3	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_3,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_4	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_4,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_5	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_5,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_6	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_6,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_7	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_7,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_8	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_8,$/;"	e	enum:EMUCMD
EMUCMD_SAVE_STATE_SLOT_9	fceux-am/src/input.h	/^	EMUCMD_SAVE_STATE_SLOT_9,$/;"	e	enum:EMUCMD
EMUCMD_SCREENSHOT	fceux-am/src/input.h	/^	EMUCMD_SCREENSHOT,$/;"	e	enum:EMUCMD
EMUCMD_SCRIPT_RELOAD	fceux-am/src/input.h	/^	EMUCMD_SCRIPT_RELOAD,$/;"	e	enum:EMUCMD
EMUCMD_SOUND_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_SOUND_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_SOUND_VOLUME_DOWN	fceux-am/src/input.h	/^	EMUCMD_SOUND_VOLUME_DOWN,$/;"	e	enum:EMUCMD
EMUCMD_SOUND_VOLUME_NORMAL	fceux-am/src/input.h	/^	EMUCMD_SOUND_VOLUME_NORMAL,$/;"	e	enum:EMUCMD
EMUCMD_SOUND_VOLUME_UP	fceux-am/src/input.h	/^	EMUCMD_SOUND_VOLUME_UP,$/;"	e	enum:EMUCMD
EMUCMD_SPEED_FASTER	fceux-am/src/input.h	/^	EMUCMD_SPEED_FASTER,$/;"	e	enum:EMUCMD
EMUCMD_SPEED_FASTEST	fceux-am/src/input.h	/^	EMUCMD_SPEED_FASTEST,$/;"	e	enum:EMUCMD
EMUCMD_SPEED_NORMAL	fceux-am/src/input.h	/^	EMUCMD_SPEED_NORMAL,$/;"	e	enum:EMUCMD
EMUCMD_SPEED_SLOWER	fceux-am/src/input.h	/^	EMUCMD_SPEED_SLOWER,$/;"	e	enum:EMUCMD
EMUCMD_SPEED_SLOWEST	fceux-am/src/input.h	/^	EMUCMD_SPEED_SLOWEST,$/;"	e	enum:EMUCMD
EMUCMD_SPEED_TURBO	fceux-am/src/input.h	/^	EMUCMD_SPEED_TURBO,$/;"	e	enum:EMUCMD
EMUCMD_SPEED_TURBO_TOGGLE	fceux-am/src/input.h	/^	EMUCMD_SPEED_TURBO_TOGGLE,$/;"	e	enum:EMUCMD
EMUCMD_TASEDITOR_CANCEL_SEEKING	fceux-am/src/input.h	/^	EMUCMD_TASEDITOR_CANCEL_SEEKING,$/;"	e	enum:EMUCMD
EMUCMD_TASEDITOR_RESTORE_PLAYBACK	fceux-am/src/input.h	/^	EMUCMD_TASEDITOR_RESTORE_PLAYBACK,$/;"	e	enum:EMUCMD
EMUCMD_TASEDITOR_REWIND	fceux-am/src/input.h	/^	EMUCMD_TASEDITOR_REWIND,$/;"	e	enum:EMUCMD
EMUCMD_TASEDITOR_RUN_MANUAL_LUA	fceux-am/src/input.h	/^	EMUCMD_TASEDITOR_RUN_MANUAL_LUA,$/;"	e	enum:EMUCMD
EMUCMD_TASEDITOR_SWITCH_AUTORESTORING	fceux-am/src/input.h	/^	EMUCMD_TASEDITOR_SWITCH_AUTORESTORING,$/;"	e	enum:EMUCMD
EMUCMD_TASEDITOR_SWITCH_MULTITRACKING	fceux-am/src/input.h	/^	EMUCMD_TASEDITOR_SWITCH_MULTITRACKING,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_DEBUGSTEPINTO	fceux-am/src/input.h	/^	EMUCMD_TOOL_DEBUGSTEPINTO,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENCDLOGGER	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENCDLOGGER,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENCHEATS	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENCHEATS,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENDEBUGGER	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENDEBUGGER,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENHEX	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENHEX,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENMEMORYWATCH	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENMEMORYWATCH,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENNTVIEW	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENNTVIEW,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENPPU	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENPPU,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENRAMSEARCH	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENRAMSEARCH,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENRAMWATCH	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENRAMWATCH,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_OPENTRACELOGGER	fceux-am/src/input.h	/^	EMUCMD_TOOL_OPENTRACELOGGER,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_RAMSEARCHEQ	fceux-am/src/input.h	/^	EMUCMD_TOOL_RAMSEARCHEQ,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_RAMSEARCHGT	fceux-am/src/input.h	/^	EMUCMD_TOOL_RAMSEARCHGT,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_RAMSEARCHGTE	fceux-am/src/input.h	/^	EMUCMD_TOOL_RAMSEARCHGTE,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_RAMSEARCHLT	fceux-am/src/input.h	/^	EMUCMD_TOOL_RAMSEARCHLT,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_RAMSEARCHLTE	fceux-am/src/input.h	/^	EMUCMD_TOOL_RAMSEARCHLTE,$/;"	e	enum:EMUCMD
EMUCMD_TOOL_RAMSEARCHNE	fceux-am/src/input.h	/^	EMUCMD_TOOL_RAMSEARCHNE,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_COIN	fceux-am/src/input.h	/^	EMUCMD_VSUNI_COIN,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_0	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_0,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_1	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_1,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_2	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_2,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_3	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_3,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_4	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_4,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_5	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_5,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_6	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_6,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_7	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_7,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_8	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_8,$/;"	e	enum:EMUCMD
EMUCMD_VSUNI_TOGGLE_DIP_9	fceux-am/src/input.h	/^	EMUCMD_VSUNI_TOGGLE_DIP_9,$/;"	e	enum:EMUCMD
EMUFILE	fceux-am/src/emufile.h	/^	EMUFILE()$/;"	f	class:EMUFILE
EMUFILE	fceux-am/src/emufile.h	/^class EMUFILE {$/;"	c
EMUFILE_FILE	fceux-am/src/emufile.h	/^	EMUFILE_FILE(const char* fname, const char* mode) { open(fname,mode); }$/;"	f	class:EMUFILE_FILE
EMUFILE_FILE	fceux-am/src/emufile.h	/^class EMUFILE_FILE : public EMUFILE {$/;"	c
EMUFILE_FILE	fceux-am/src/emufile.h	/^class EMUFILE_FILE {$/;"	c
EMUFILE_H	fceux-am/src/emufile.h	26;"	d
EMULATIONPAUSED_FA	fceux-am/src/fceu.h	164;"	d
EMULATIONPAUSED_PAUSED	fceux-am/src/fceu.h	163;"	d
EMUSPEED_FASTER	fceux-am/src/driver.h	/^	EMUSPEED_FASTER,$/;"	e	enum:EMUSPEED_SET
EMUSPEED_FASTEST	fceux-am/src/driver.h	/^	EMUSPEED_FASTEST$/;"	e	enum:EMUSPEED_SET
EMUSPEED_NORMAL	fceux-am/src/driver.h	/^	EMUSPEED_NORMAL,$/;"	e	enum:EMUSPEED_SET
EMUSPEED_SET	fceux-am/src/driver.h	/^enum EMUSPEED_SET$/;"	g
EMUSPEED_SLOWER	fceux-am/src/driver.h	/^	EMUSPEED_SLOWER,$/;"	e	enum:EMUSPEED_SET
EMUSPEED_SLOWEST	fceux-am/src/driver.h	/^	EMUSPEED_SLOWEST=0,$/;"	e	enum:EMUSPEED_SET
ENABLE	abstract-machine/am/src/x86/qemu/ioe.c	355;"	d	file:
ENGINE	nemu/Makefile	/^ENGINE ?= interpreter$/;"	m
ENGINES	nemu/Makefile	/^ENGINES = $(shell ls src\/engine\/)$/;"	m
ENVUNIT	fceux-am/src/sound.h	/^} ENVUNIT;$/;"	t	typeref:struct:__anon36
EOI	abstract-machine/am/src/x86/qemu/ioe.c	353;"	d	file:
EOR	fceux-am/src/x6502.cpp	119;"	d	file:
EO_AUTOHIDE	fceux-am/src/drivers/sdl/main.h	35;"	d
EO_CLIPSIDES	fceux-am/src/drivers/sdl/main.h	28;"	d
EO_FOURSCORE	fceux-am/src/drivers/sdl/main.h	30;"	d
EO_GAMEGENIE	fceux-am/src/drivers/sdl/main.h	32;"	d
EO_LOWPASS	fceux-am/src/drivers/sdl/main.h	34;"	d
EO_NO8LIM	fceux-am/src/drivers/sdl/main.h	26;"	d
EO_NOTHROTTLE	fceux-am/src/drivers/sdl/main.h	31;"	d
EO_PAL	fceux-am/src/drivers/sdl/main.h	33;"	d
EO_SNAPNAME	fceux-am/src/drivers/sdl/main.h	29;"	d
EO_SUBASE	fceux-am/src/drivers/sdl/main.h	27;"	d
ERR	abstract-machine/am/src/x86/qemu/trap32.S	/^#define ERR$/;"	d
ERR	abstract-machine/am/src/x86/qemu/trap64.S	/^#define ERR$/;"	d
ERROR	abstract-machine/am/src/x86/qemu/ioe.c	374;"	d	file:
ESI	fceux-am/src/git.h	/^enum ESI$/;"	g
ESIFC	fceux-am/src/git.h	/^enum ESIFC$/;"	g
ESIFC_Name	fceux-am/src/git.h	/^inline const char* ESIFC_Name(ESIFC esifc)$/;"	f
ESIS	fceux-am/src/git.h	/^enum ESIS$/;"	g
ESI_Name	fceux-am/src/git.h	/^inline const char* ESI_Name(ESI esi)$/;"	f
ESR	abstract-machine/am/src/x86/qemu/ioe.c	356;"	d	file:
ETROM_Init	fceux-am/src/boards/mmc5.cpp	/^void ETROM_Init(CartInfo *info) {$/;"	f
EVENT_ERROR	abstract-machine/am/include/am.h	/^    EVENT_YIELD, EVENT_SYSCALL, EVENT_PAGEFAULT, EVENT_ERROR,$/;"	e	enum:__anon11::__anon12
EVENT_IRQ_IODEV	abstract-machine/am/include/am.h	/^    EVENT_IRQ_TIMER, EVENT_IRQ_IODEV,$/;"	e	enum:__anon11::__anon12
EVENT_IRQ_TIMER	abstract-machine/am/include/am.h	/^    EVENT_IRQ_TIMER, EVENT_IRQ_IODEV,$/;"	e	enum:__anon11::__anon12
EVENT_NULL	abstract-machine/am/include/am.h	/^    EVENT_NULL = 0,$/;"	e	enum:__anon11::__anon12
EVENT_PAGEFAULT	abstract-machine/am/include/am.h	/^    EVENT_YIELD, EVENT_SYSCALL, EVENT_PAGEFAULT, EVENT_ERROR,$/;"	e	enum:__anon11::__anon12
EVENT_SYSCALL	abstract-machine/am/include/am.h	/^    EVENT_YIELD, EVENT_SYSCALL, EVENT_PAGEFAULT, EVENT_ERROR,$/;"	e	enum:__anon11::__anon12
EVENT_YIELD	abstract-machine/am/include/am.h	/^    EVENT_YIELD, EVENT_SYSCALL, EVENT_PAGEFAULT, EVENT_ERROR,$/;"	e	enum:__anon11::__anon12
EWROM_Init	fceux-am/src/boards/mmc5.cpp	/^void EWROM_Init(CartInfo *info) {$/;"	f
EX	nemu/include/cpu/exec.h	17;"	d
EXPAND_BITS	fceux-am/src/boards/emu2413.c	146;"	d	file:
EXPAND_BITS_X	fceux-am/src/boards/emu2413.c	149;"	d	file:
EXPREGS	fceux-am/src/boards/mmc3.cpp	/^uint8 EXPREGS[8];	\/* For bootleg games, mostly. *\/$/;"	v
EXPSOUND	fceux-am/src/sound.h	/^} EXPSOUND;$/;"	t	typeref:struct:__anon35
EXW	nemu/include/cpu/exec.h	16;"	d
EX_DE	abstract-machine/am/src/x86.h	40;"	d
EX_DF	abstract-machine/am/src/x86.h	43;"	d
EX_ENTRY	abstract-machine/am/src/nemu/isa/mips32/cte.c	24;"	d	file:
EX_GP	abstract-machine/am/src/x86.h	47;"	d
EX_MF	abstract-machine/am/src/x86.h	49;"	d
EX_NM	abstract-machine/am/src/x86.h	42;"	d
EX_NP	abstract-machine/am/src/x86.h	45;"	d
EX_PF	abstract-machine/am/src/x86.h	48;"	d
EX_SS	abstract-machine/am/src/x86.h	46;"	d
EX_SYSCALL	abstract-machine/am/src/x86.h	50;"	d
EX_TS	abstract-machine/am/src/x86.h	44;"	d
EX_UD	abstract-machine/am/src/x86.h	41;"	d
EX_YIELD	abstract-machine/am/src/x86.h	51;"	d
EmulationPaused	fceux-am/src/fceu.cpp	/^int EmulationPaused = 0;$/;"	v
EnableAutosave	fceux-am/src/fceu.cpp	/^int EnableAutosave = 0;$/;"	v
EnabledChannels	fceux-am/src/sound.cpp	/^uint8 EnabledChannels=0;	\/\/ $4015 \/ Sound channels enable and status$/;"	v
EndRL	fceux-am/src/ppu.cpp	/^static void EndRL(void) {$/;"	f	file:
EnvCache	fceux-am/src/boards/n106.cpp	/^static uint32 EnvCache[8];$/;"	v	file:
EnvUnits	fceux-am/src/sound.cpp	/^ENVUNIT EnvUnits[3];$/;"	v
Event	abstract-machine/am/include/am.h	/^} Event;$/;"	t	typeref:struct:__anon11
ExRAM	fceux-am/src/boards/mmc5.cpp	/^static uint8 *ExRAM = NULL;$/;"	v	file:
ExtraNTARAM	fceux-am/src/ines.cpp	/^uint8 *ExtraNTARAM = NULL;$/;"	v
F	fceux-am/src/utils/md5.cpp	113;"	d	file:
F	fceux-am/src/utils/md5.cpp	115;"	d	file:
F	fceux-am/src/utils/md5.cpp	134;"	d	file:
F	fceux-am/src/utils/md5.cpp	136;"	d	file:
F	fceux-am/src/utils/md5.cpp	155;"	d	file:
F	fceux-am/src/utils/md5.cpp	73;"	d	file:
F	fceux-am/src/utils/md5.cpp	92;"	d	file:
F	fceux-am/src/utils/md5.cpp	94;"	d	file:
FAMILYKEYBOARD_NUM_BUTTONS	fceux-am/src/drivers/sdl/main.h	93;"	d
FASTCALL	fceux-am/src/ppu.h	29;"	d
FB	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
FB_ADDR	abstract-machine/am/src/nemu/include/nemu.h	32;"	d
FCEUD_GetTime	fceux-am/src/drivers/sdl/sdl.cpp	/^FCEUD_GetTime()$/;"	f
FCEUD_GetTimeFreq	fceux-am/src/drivers/sdl/sdl.cpp	/^FCEUD_GetTimeFreq(void)$/;"	f
FCEUD_Message	fceux-am/src/drivers/sdl/sdl.cpp	/^void FCEUD_Message(const char *text)$/;"	f
FCEUD_PauseAfterPlayback	fceux-am/src/drivers/sdl/sdl.cpp	/^bool FCEUD_PauseAfterPlayback() { return false; }$/;"	f
FCEUD_PrintError	fceux-am/src/drivers/sdl/sdl.cpp	/^void FCEUD_PrintError(const char *errormsg)$/;"	f
FCEUD_SetPalette	fceux-am/src/drivers/sdl/sdl-video.cpp	/^FCEUD_SetPalette(uint8 index,$/;"	f
FCEUD_ShowStatusIcon	fceux-am/src/drivers/sdl/sdl.cpp	/^int FCEUD_ShowStatusIcon(void) {return 0;}$/;"	f
FCEUD_SoundToggle	fceux-am/src/drivers/sdl/sdl-sound.cpp	/^FCEUD_SoundToggle(void)$/;"	f
FCEUD_SoundVolumeAdjust	fceux-am/src/drivers/sdl/sdl-sound.cpp	/^FCEUD_SoundVolumeAdjust(int n)$/;"	f
FCEUD_TraceInstruction	fceux-am/src/drivers/sdl/sdl.cpp	/^void FCEUD_TraceInstruction() {$/;"	f
FCEUD_TurboOff	fceux-am/src/drivers/sdl/sdl.cpp	/^void FCEUD_TurboOff   (void) { NoWaiting&=~1; }$/;"	f
FCEUD_TurboOn	fceux-am/src/drivers/sdl/sdl.cpp	/^void FCEUD_TurboOn	(void) { NoWaiting|= 1; }$/;"	f
FCEUD_TurboToggle	fceux-am/src/drivers/sdl/sdl.cpp	/^void FCEUD_TurboToggle(void) { NoWaiting^= 1; }$/;"	f
FCEUD_UTF8_fstream	fceux-am/src/drivers/sdl/sdl.cpp	/^EMUFILE_FILE* FCEUD_UTF8_fstream(const char *fn, const char *m)$/;"	f
FCEUD_Update	fceux-am/src/drivers/sdl/sdl.cpp	/^FCEUD_Update(uint8 *XBuf,$/;"	f
FCEUD_UpdateInput	fceux-am/src/drivers/sdl/input.cpp	/^void FCEUD_UpdateInput ()$/;"	f
FCEUD_VideoChanged	fceux-am/src/drivers/sdl/sdl-video.cpp	/^void FCEUD_VideoChanged()$/;"	f
FCEUFILE	fceux-am/src/file.h	/^	FCEUFILE() {}$/;"	f	struct:FCEUFILE
FCEUFILE	fceux-am/src/file.h	/^struct FCEUFILE {$/;"	s
FCEUGI	fceux-am/src/fceu.cpp	/^FCEUGI::FCEUGI() { }$/;"	f	class:FCEUGI
FCEUGI	fceux-am/src/git.h	/^struct FCEUGI$/;"	s
FCEUIOD_AVI	fceux-am/src/driver.h	204;"	d
FCEUIOD_BBOT	fceux-am/src/driver.h	200;"	d
FCEUIOD_CHEATS	fceux-am/src/driver.h	197;"	d
FCEUIOD_FDSROM	fceux-am/src/driver.h	195;"	d
FCEUIOD_INPUT	fceux-am/src/driver.h	202;"	d
FCEUIOD_LUA	fceux-am/src/driver.h	203;"	d
FCEUIOD_MACRO	fceux-am/src/driver.h	201;"	d
FCEUIOD_MEMW	fceux-am/src/driver.h	199;"	d
FCEUIOD_MOVIES	fceux-am/src/driver.h	198;"	d
FCEUIOD_NV	fceux-am/src/driver.h	193;"	d
FCEUIOD_ROMS	fceux-am/src/driver.h	192;"	d
FCEUIOD_SNAPS	fceux-am/src/driver.h	196;"	d
FCEUIOD_STATES	fceux-am/src/driver.h	194;"	d
FCEUIOD__COUNT	fceux-am/src/driver.h	205;"	d
FCEUI_AviIsRecording	fceux-am/src/drivers/sdl/sdl.cpp	/^bool FCEUI_AviIsRecording(void) {return false;}$/;"	f
FCEUI_AviVideoUpdate	fceux-am/src/drivers/sdl/sdl.cpp	/^void FCEUI_AviVideoUpdate(const unsigned char* buffer) { }$/;"	f
FCEUI_CLOSEGAME	fceux-am/src/driver.h	/^	FCEUI_OPENGAME, FCEUI_CLOSEGAME,$/;"	e	enum:EFCEUI
FCEUI_CloseGame	fceux-am/src/fceu.cpp	/^void FCEUI_CloseGame(void) {$/;"	f
FCEUI_DELETE1FRAME	fceux-am/src/driver.h	/^	FCEUI_TOGGLERECORDINGMOVIE, FCEUI_TRUNCATEMOVIE, FCEUI_INSERT1FRAME, FCEUI_DELETE1FRAME$/;"	e	enum:EFCEUI
FCEUI_DatachSet	fceux-am/src/boards/bandai.cpp	/^int FCEUI_DatachSet(const uint8 *rcode) {$/;"	f
FCEUI_DisableSpriteLimitation	fceux-am/src/ppu.cpp	/^void FCEUI_DisableSpriteLimitation(int a) {$/;"	f
FCEUI_DispMessage	fceux-am/src/driver.h	169;"	d
FCEUI_EJECT_DISK	fceux-am/src/driver.h	/^	FCEUI_RESET, FCEUI_POWER, FCEUI_PLAYFROMBEGINNING, FCEUI_EJECT_DISK, FCEUI_SWITCH_DISK, FCEUI_INSERT_COIN,$/;"	e	enum:EFCEUI
FCEUI_Emulate	fceux-am/src/fceu.cpp	/^void FCEUI_Emulate(uint8 **pXBuf, int32 **SoundBuf, int32 *SoundBufSize, int skip) {$/;"	f
FCEUI_EmulationPaused	fceux-am/src/fceu.cpp	/^int FCEUI_EmulationPaused(void)$/;"	f
FCEUI_GetCurrentVidSystem	fceux-am/src/fceu.cpp	/^int FCEUI_GetCurrentVidSystem(int *slstart, int *slend) {$/;"	f
FCEUI_GetDesiredFPS	fceux-am/src/fceu.cpp	/^int32 FCEUI_GetDesiredFPS(void) {$/;"	f
FCEUI_GetIVectors	fceux-am/src/x6502.cpp	/^void FCEUI_GetIVectors(uint16 *reset, uint16 *irq, uint16 *nmi)$/;"	f
FCEUI_GetRenderPlanes	fceux-am/src/ppu.cpp	/^void FCEUI_GetRenderPlanes(bool& sprites, bool& bg) {$/;"	f
FCEUI_INSERT1FRAME	fceux-am/src/driver.h	/^	FCEUI_TOGGLERECORDINGMOVIE, FCEUI_TRUNCATEMOVIE, FCEUI_INSERT1FRAME, FCEUI_DELETE1FRAME$/;"	e	enum:EFCEUI
FCEUI_INSERT_COIN	fceux-am/src/driver.h	/^	FCEUI_RESET, FCEUI_POWER, FCEUI_PLAYFROMBEGINNING, FCEUI_EJECT_DISK, FCEUI_SWITCH_DISK, FCEUI_INSERT_COIN,$/;"	e	enum:EFCEUI
FCEUI_IRQ	fceux-am/src/x6502.cpp	/^void FCEUI_IRQ(void)$/;"	f
FCEUI_Initialize	fceux-am/src/fceu.cpp	/^bool FCEUI_Initialize() {$/;"	f
FCEUI_Kill	fceux-am/src/fceu.cpp	/^void FCEUI_Kill(void) {$/;"	f
FCEUI_LOADSTATE	fceux-am/src/driver.h	/^	FCEUI_STOPAVI, FCEUI_QUICKSAVE, FCEUI_QUICKLOAD, FCEUI_SAVESTATE, FCEUI_LOADSTATE,$/;"	e	enum:EFCEUI
FCEUI_LoadGame	fceux-am/src/fceu.cpp	/^FCEUGI *FCEUI_LoadGame(const char *name, int OverwriteVidMode, bool silent)$/;"	f
FCEUI_LoadGameVirtual	fceux-am/src/fceu.cpp	/^FCEUGI *FCEUI_LoadGameVirtual(const char *name, int OverwriteVidMode, bool silent)$/;"	f
FCEUI_NEXTSAVESTATE	fceux-am/src/driver.h	/^	FCEUI_NEXTSAVESTATE,FCEUI_PREVIOUSSAVESTATE,FCEUI_VIEWSLOTS,$/;"	e	enum:EFCEUI
FCEUI_NMI	fceux-am/src/x6502.cpp	/^void FCEUI_NMI(void)$/;"	f
FCEUI_OPENGAME	fceux-am/src/driver.h	/^	FCEUI_OPENGAME, FCEUI_CLOSEGAME,$/;"	e	enum:EFCEUI
FCEUI_PLAYFROMBEGINNING	fceux-am/src/driver.h	/^	FCEUI_RESET, FCEUI_POWER, FCEUI_PLAYFROMBEGINNING, FCEUI_EJECT_DISK, FCEUI_SWITCH_DISK, FCEUI_INSERT_COIN,$/;"	e	enum:EFCEUI
FCEUI_PLAYMOVIE	fceux-am/src/driver.h	/^	FCEUI_STOPMOVIE, FCEUI_RECORDMOVIE, FCEUI_PLAYMOVIE,$/;"	e	enum:EFCEUI
FCEUI_POWER	fceux-am/src/driver.h	/^	FCEUI_RESET, FCEUI_POWER, FCEUI_PLAYFROMBEGINNING, FCEUI_EJECT_DISK, FCEUI_SWITCH_DISK, FCEUI_INSERT_COIN,$/;"	e	enum:EFCEUI
FCEUI_PREVIOUSSAVESTATE	fceux-am/src/driver.h	/^	FCEUI_NEXTSAVESTATE,FCEUI_PREVIOUSSAVESTATE,FCEUI_VIEWSLOTS,$/;"	e	enum:EFCEUI
FCEUI_QUICKLOAD	fceux-am/src/driver.h	/^	FCEUI_STOPAVI, FCEUI_QUICKSAVE, FCEUI_QUICKLOAD, FCEUI_SAVESTATE, FCEUI_LOADSTATE,$/;"	e	enum:EFCEUI
FCEUI_QUICKSAVE	fceux-am/src/driver.h	/^	FCEUI_STOPAVI, FCEUI_QUICKSAVE, FCEUI_QUICKLOAD, FCEUI_SAVESTATE, FCEUI_LOADSTATE,$/;"	e	enum:EFCEUI
FCEUI_RECORDMOVIE	fceux-am/src/driver.h	/^	FCEUI_STOPMOVIE, FCEUI_RECORDMOVIE, FCEUI_PLAYMOVIE,$/;"	e	enum:EFCEUI
FCEUI_RESET	fceux-am/src/driver.h	/^	FCEUI_RESET, FCEUI_POWER, FCEUI_PLAYFROMBEGINNING, FCEUI_EJECT_DISK, FCEUI_SWITCH_DISK, FCEUI_INSERT_COIN,$/;"	e	enum:EFCEUI
FCEUI_SAVESTATE	fceux-am/src/driver.h	/^	FCEUI_STOPAVI, FCEUI_QUICKSAVE, FCEUI_QUICKLOAD, FCEUI_SAVESTATE, FCEUI_LOADSTATE,$/;"	e	enum:EFCEUI
FCEUI_STOPAVI	fceux-am/src/driver.h	/^	FCEUI_STOPAVI, FCEUI_QUICKSAVE, FCEUI_QUICKLOAD, FCEUI_SAVESTATE, FCEUI_LOADSTATE,$/;"	e	enum:EFCEUI
FCEUI_STOPMOVIE	fceux-am/src/driver.h	/^	FCEUI_STOPMOVIE, FCEUI_RECORDMOVIE, FCEUI_PLAYMOVIE,$/;"	e	enum:EFCEUI
FCEUI_SWITCH_DISK	fceux-am/src/driver.h	/^	FCEUI_RESET, FCEUI_POWER, FCEUI_PLAYFROMBEGINNING, FCEUI_EJECT_DISK, FCEUI_SWITCH_DISK, FCEUI_INSERT_COIN,$/;"	e	enum:EFCEUI
FCEUI_SetInput	fceux-am/src/input.cpp	/^void FCEUI_SetInput(int port, ESI type, void *ptr, int attrib)$/;"	f
FCEUI_SetInputFC	fceux-am/src/input.cpp	/^void FCEUI_SetInputFC(ESIFC type, void *ptr, int attrib)$/;"	f
FCEUI_SetInputFourscore	fceux-am/src/input.cpp	/^void FCEUI_SetInputFourscore(bool attachFourscore)$/;"	f
FCEUI_SetNTSCTH	fceux-am/src/palette.cpp	/^void FCEUI_SetNTSCTH(bool en, int tint, int hue)$/;"	f
FCEUI_SetNoiseVolume	fceux-am/src/sound.cpp	/^void FCEUI_SetNoiseVolume(uint32 volume)$/;"	f
FCEUI_SetPCMVolume	fceux-am/src/sound.cpp	/^void FCEUI_SetPCMVolume(uint32 volume)$/;"	f
FCEUI_SetRegion	fceux-am/src/fceu.cpp	/^void FCEUI_SetRegion(int region, int notify) {$/;"	f
FCEUI_SetRenderPlanes	fceux-am/src/ppu.cpp	/^void FCEUI_SetRenderPlanes(bool sprites, bool bg) {$/;"	f
FCEUI_SetRenderedLines	fceux-am/src/fceu.cpp	/^void FCEUI_SetRenderedLines(int ntscf, int ntscl, int palf, int pall) {$/;"	f
FCEUI_SetShowFPS	fceux-am/src/video.cpp	/^void FCEUI_SetShowFPS(bool showFPS)$/;"	f
FCEUI_SetSoundQuality	fceux-am/src/sound.cpp	/^void FCEUI_SetSoundQuality(int quality)$/;"	f
FCEUI_SetSoundVolume	fceux-am/src/sound.cpp	/^void FCEUI_SetSoundVolume(uint32 volume)$/;"	f
FCEUI_SetSquare1Volume	fceux-am/src/sound.cpp	/^void FCEUI_SetSquare1Volume(uint32 volume)$/;"	f
FCEUI_SetSquare2Volume	fceux-am/src/sound.cpp	/^void FCEUI_SetSquare2Volume(uint32 volume)$/;"	f
FCEUI_SetTriangleVolume	fceux-am/src/sound.cpp	/^void FCEUI_SetTriangleVolume(uint32 volume)$/;"	f
FCEUI_SetVidSystem	fceux-am/src/fceu.cpp	/^void FCEUI_SetVidSystem(int a) {$/;"	f
FCEUI_Sound	fceux-am/src/sound.cpp	/^void FCEUI_Sound(int Rate)$/;"	f
FCEUI_TASEDITOR	fceux-am/src/driver.h	/^	FCEUI_TASEDITOR,$/;"	e	enum:EFCEUI
FCEUI_TOGGLERECORDINGMOVIE	fceux-am/src/driver.h	/^	FCEUI_TOGGLERECORDINGMOVIE, FCEUI_TRUNCATEMOVIE, FCEUI_INSERT1FRAME, FCEUI_DELETE1FRAME$/;"	e	enum:EFCEUI
FCEUI_TRUNCATEMOVIE	fceux-am/src/driver.h	/^	FCEUI_TOGGLERECORDINGMOVIE, FCEUI_TRUNCATEMOVIE, FCEUI_INSERT1FRAME, FCEUI_DELETE1FRAME$/;"	e	enum:EFCEUI
FCEUI_UseInputPreset	fceux-am/src/drivers/sdl/sdl.cpp	/^void FCEUI_UseInputPreset(int preset) { }$/;"	f
FCEUI_VIEWSLOTS	fceux-am/src/driver.h	/^	FCEUI_NEXTSAVESTATE,FCEUI_PREVIOUSSAVESTATE,FCEUI_VIEWSLOTS,$/;"	e	enum:EFCEUI
FCEUI_printf	fceux-am/src/driver.h	13;"	d
FCEUMKF_AUTOSTATE	fceux-am/src/file.h	94;"	d
FCEUMKF_AVI	fceux-am/src/file.h	100;"	d
FCEUMKF_BBOT	fceux-am/src/file.h	96;"	d
FCEUMKF_CHEAT	fceux-am/src/file.h	83;"	d
FCEUMKF_FDS	fceux-am/src/file.h	88;"	d
FCEUMKF_FDSROM	fceux-am/src/file.h	84;"	d
FCEUMKF_GGROM	fceux-am/src/file.h	86;"	d
FCEUMKF_INPUT	fceux-am/src/file.h	98;"	d
FCEUMKF_IPS	fceux-am/src/file.h	87;"	d
FCEUMKF_LUA	fceux-am/src/file.h	99;"	d
FCEUMKF_MEMW	fceux-am/src/file.h	95;"	d
FCEUMKF_MOVIE	fceux-am/src/file.h	89;"	d
FCEUMKF_MOVIEGLOB	fceux-am/src/file.h	91;"	d
FCEUMKF_MOVIEGLOB2	fceux-am/src/file.h	93;"	d
FCEUMKF_PALETTE	fceux-am/src/file.h	85;"	d
FCEUMKF_RESUMESTATE	fceux-am/src/file.h	102;"	d
FCEUMKF_ROMS	fceux-am/src/file.h	97;"	d
FCEUMKF_SAV	fceux-am/src/file.h	82;"	d
FCEUMKF_SNAP	fceux-am/src/file.h	81;"	d
FCEUMKF_STATE	fceux-am/src/file.h	80;"	d
FCEUMKF_STATEGLOB	fceux-am/src/file.h	92;"	d
FCEUMKF_TASEDITOR	fceux-am/src/file.h	101;"	d
FCEUPPU_GetAttr	fceux-am/src/ppu.cpp	/^int FCEUPPU_GetAttr(int ntnum, int xt, int yt) {$/;"	f
FCEUPPU_GetCHR	fceux-am/src/ppu.cpp	/^uint8* FCEUPPU_GetCHR(uint32 vadr, uint32 refreshaddr) {$/;"	f
FCEUPPU_Init	fceux-am/src/ppu.cpp	/^void FCEUPPU_Init(void) {$/;"	f
FCEUPPU_LineUpdate	fceux-am/src/ppu.cpp	/^void FCEUPPU_LineUpdate(void) {$/;"	f
FCEUPPU_LoadState	fceux-am/src/ppu.cpp	/^void FCEUPPU_LoadState(int version) {$/;"	f
FCEUPPU_Loop	fceux-am/src/ppu.cpp	/^int FCEUPPU_Loop(int skip) {$/;"	f
FCEUPPU_PeekAddress	fceux-am/src/ppu.cpp	/^uint32 FCEUPPU_PeekAddress()$/;"	f
FCEUPPU_Power	fceux-am/src/ppu.cpp	/^void FCEUPPU_Power(void) {$/;"	f
FCEUPPU_Reset	fceux-am/src/ppu.cpp	/^void FCEUPPU_Reset(void) {$/;"	f
FCEUPPU_STATEINFO	fceux-am/src/ppu.cpp	/^SFORMAT FCEUPPU_STATEINFO[] = {$/;"	v
FCEUPPU_SaveState	fceux-am/src/ppu.cpp	/^void FCEUPPU_SaveState(void) {$/;"	f
FCEUPPU_SetVideoSystem	fceux-am/src/ppu.cpp	/^void FCEUPPU_SetVideoSystem(int w) {$/;"	f
FCEUS	fceux-am/src/fceu.h	/^} FCEUS;$/;"	t	typeref:struct:__anon32
FCEUSND_Power	fceux-am/src/sound.cpp	/^void FCEUSND_Power(void)$/;"	f
FCEUSND_Reset	fceux-am/src/sound.cpp	/^void FCEUSND_Reset(void)$/;"	f
FCEUSND_STATEINFO	fceux-am/src/sound.cpp	/^SFORMAT FCEUSND_STATEINFO[]={$/;"	v
FCEUSTATE_FLAGS	fceux-am/src/state.h	43;"	d
FCEUSTATE_INDIRECT	fceux-am/src/state.h	40;"	d
FCEUSTATE_RLSB	fceux-am/src/state.h	37;"	d
FCEUX_PPU_Loop	fceux-am/src/ppu.cpp	/^int FCEUX_PPU_Loop(int skip) {$/;"	f
FCEUX_SRC	fceux-am/Makefile	/^FCEUX_SRC = $(shell find -L src\/ -name "*.c" -o -name "*.cpp")$/;"	m
FCEUX_fstat	fceux-am/src/types.h	49;"	d
FCEUX_fstat	fceux-am/src/types.h	71;"	d
FCEU_COMPILER	fceux-am/src/version.h	47;"	d
FCEU_COMPILER_DETAIL	fceux-am/src/version.h	48;"	d
FCEU_CheatAddRAM	fceux-am/src/unused.cpp	/^void FCEU_CheatAddRAM(int s, uint32 A, uint8 *p) { }$/;"	f
FCEU_CloseGame	fceux-am/src/fceu.cpp	/^static void FCEU_CloseGame(void)$/;"	f	file:
FCEU_CloseGenie	fceux-am/src/cart.cpp	/^void FCEU_CloseGenie(void) {$/;"	f
FCEU_DispMessage	fceux-am/src/types.h	141;"	d
FCEU_DrawInput	fceux-am/src/input.cpp	/^void FCEU_DrawInput(uint8 *buf)$/;"	f
FCEU_FEATURE_STRING	fceux-am/src/version.h	36;"	d
FCEU_GetJoyJoy	fceux-am/src/input.cpp	/^uint8 FCEU_GetJoyJoy(void)$/;"	f
FCEU_IQDPCM	fceux-am/src/x6502.h	75;"	d
FCEU_IQEXT	fceux-am/src/x6502.h	69;"	d
FCEU_IQEXT2	fceux-am/src/x6502.h	70;"	d
FCEU_IQFCOUNT	fceux-am/src/x6502.h	76;"	d
FCEU_IQNMI	fceux-am/src/x6502.h	74;"	d
FCEU_IQNMI2	fceux-am/src/x6502.h	73;"	d
FCEU_IQRESET	fceux-am/src/x6502.h	72;"	d
FCEU_IQTEMP	fceux-am/src/x6502.h	77;"	d
FCEU_InitVirtualVideo	fceux-am/src/video.cpp	/^int FCEU_InitVirtualVideo(void)$/;"	f
FCEU_KillGenie	fceux-am/src/cart.cpp	/^void FCEU_KillGenie(void) {$/;"	f
FCEU_KillVirtualVideo	fceux-am/src/video.cpp	/^void FCEU_KillVirtualVideo(void)$/;"	f
FCEU_LoadGamePalette	fceux-am/src/palette.cpp	/^void FCEU_LoadGamePalette(void)$/;"	f
FCEU_MemoryRand	fceux-am/src/fceu.cpp	/^void FCEU_MemoryRand(uint8 *ptr, uint32 size, bool default_zero) {$/;"	f
FCEU_NAME	fceux-am/src/version.h	34;"	d
FCEU_NAME_AND_VERSION	fceux-am/src/version.h	52;"	d
FCEU_NEWPPU_STATEINFO	fceux-am/src/ppu.cpp	/^SFORMAT FCEU_NEWPPU_STATEINFO[] = {$/;"	v
FCEU_PrintError	fceux-am/src/types.h	140;"	d
FCEU_PutImageDummy	fceux-am/src/video.cpp	/^void FCEU_PutImageDummy(void)$/;"	f
FCEU_ResetPalette	fceux-am/src/palette.cpp	/^void FCEU_ResetPalette(void)$/;"	f
FCEU_ResetVidSys	fceux-am/src/fceu.cpp	/^void FCEU_ResetVidSys(void) {$/;"	f
FCEU_SUBVERSION_STRING	fceux-am/src/version.h	39;"	d
FCEU_SUBVERSION_STRING	fceux-am/src/version.h	41;"	d
FCEU_SUBVERSION_STRING	fceux-am/src/version.h	43;"	d
FCEU_SoundCPUHook	fceux-am/src/sound.cpp	/^void FCEU_SoundCPUHook(int cycles)$/;"	f
FCEU_TextScanlineOffset	fceux-am/src/fceu.cpp	/^int FCEU_TextScanlineOffset(int y) {$/;"	f
FCEU_TextScanlineOffsetFromBottom	fceux-am/src/fceu.cpp	/^int FCEU_TextScanlineOffsetFromBottom(int y) {$/;"	f
FCEU_TogglePPU	fceux-am/src/fceu.cpp	/^void FCEU_TogglePPU(void) {$/;"	f
FCEU_UpdateInput	fceux-am/src/input.cpp	/^void FCEU_UpdateInput(void)$/;"	f
FCEU_VERSION_NUMERIC	fceux-am/src/version.h	50;"	d
FCEU_VERSION_STRING	fceux-am/src/version.h	51;"	d
FCEU_dfree	fceux-am/src/utils/memory.cpp	/^void FCEU_dfree(void *ptr)$/;"	f
FCEU_dmalloc	fceux-am/src/utils/memory.cpp	/^void *FCEU_dmalloc(uint32 size)$/;"	f
FCEU_dwmemset	fceux-am/src/utils/memory.h	25;"	d
FCEU_fclose	fceux-am/src/file.cpp	/^int FCEU_fclose(FCEUFILE *fp)$/;"	f
FCEU_fopen	fceux-am/src/file.cpp	/^FCEUFILE * FCEU_fopen(const char *path, const char *ipsfn, const char *mode, char *ext, int index, const char** extensions, int* userCancel)$/;"	f
FCEU_fread	fceux-am/src/file.cpp	/^uint64 FCEU_fread(void *ptr, size_t size, size_t nmemb, FCEUFILE *fp)$/;"	f
FCEU_free	fceux-am/src/utils/memory.cpp	/^void FCEU_free(void *ptr)    \/\/ Might do something with this and FCEU_malloc later...$/;"	f
FCEU_fseek	fceux-am/src/file.cpp	/^int FCEU_fseek(FCEUFILE *fp, long offset, int whence)$/;"	f
FCEU_ftell	fceux-am/src/file.cpp	/^uint64 FCEU_ftell(FCEUFILE *fp)$/;"	f
FCEU_gfree	fceux-am/src/utils/memory.cpp	/^void FCEU_gfree(void *ptr)$/;"	f
FCEU_gmalloc	fceux-am/src/utils/memory.cpp	/^void *FCEU_gmalloc(uint32 size)$/;"	f
FCEU_malloc	fceux-am/src/utils/memory.cpp	/^void *FCEU_malloc(uint32 size)$/;"	f
FCEU_printf	fceux-am/src/types.h	139;"	d
FCFGD_GAMEPAD	fceux-am/src/drivers/sdl/input.h	25;"	d
FCFGD_HYPERSHOT	fceux-am/src/drivers/sdl/input.h	27;"	d
FCFGD_POWERPAD	fceux-am/src/drivers/sdl/input.h	26;"	d
FCFGD_QUIZKING	fceux-am/src/drivers/sdl/input.h	28;"	d
FCPORT	fceux-am/src/input.h	/^extern struct FCPORT$/;"	s
FFCEUX_PPURead	fceux-am/src/ppu.cpp	/^uint8 (FASTCALL *FFCEUX_PPURead)(uint32 A) = 0;$/;"	v
FFCEUX_PPURead_Default	fceux-am/src/ppu.cpp	/^uint8 FASTCALL FFCEUX_PPURead_Default(uint32 A) {$/;"	f
FFCEUX_PPUWrite	fceux-am/src/ppu.cpp	/^void (*FFCEUX_PPUWrite)(uint32 A, uint8 V) = 0;$/;"	v
FFCEUX_PPUWrite_Default	fceux-am/src/ppu.cpp	/^inline void FFCEUX_PPUWrite_Default(uint32 A, uint8 V) {$/;"	f
FFEClose	fceux-am/src/boards/ffe.cpp	/^static void FFEClose(void)$/;"	f	file:
FFEIRQHook	fceux-am/src/boards/ffe.cpp	/^static void FFEIRQHook(int a) {$/;"	f	file:
FFEPower	fceux-am/src/boards/ffe.cpp	/^static void FFEPower(void) {$/;"	f	file:
FINISH	fceux-am/src/boards/emu2413.c	/^{ SETTLE, ATTACK, DECAY, SUSHOLD, SUSTINE, RELEASE, FINISH };$/;"	e	enum:__anon40	file:
FIXED	abstract-machine/am/src/x86/qemu/ioe.c	366;"	d	file:
FLASHROM	fceux-am/src/boards/cheapocabra.cpp	/^static uint8 *FLASHROM = NULL;$/;"	v	file:
FLASHROMSIZE	fceux-am/src/boards/cheapocabra.cpp	/^const uint32 FLASHROMSIZE = 1024 * 512;$/;"	v
FL_IF	abstract-machine/am/src/x86.h	16;"	d
FMT_WORD	nemu/include/common.h	29;"	d
FMT_WORD	nemu/include/common.h	33;"	d
FNALIAS	abstract-machine/klib/src/int64.c	12;"	d	file:
FNALIAS	abstract-machine/klib/src/int64.c	8;"	d	file:
FPS	abstract-machine/am/src/native/native-gpu.c	13;"	d	file:
FRAMEADVANCE_DELAY_DEFAULT	fceux-am/src/fceu.h	166;"	d
FSAttached	fceux-am/src/input.cpp	/^static bool FSAttached = false;$/;"	v	file:
FSettings	fceux-am/src/fceu.cpp	/^FCEUS FSettings;$/;"	v
FTRAINER_NUM_BUTTONS	fceux-am/src/drivers/sdl/main.h	87;"	d
F_OK	fceux-am/src/types.h	53;"	d
Fcomplex	abstract-machine/klib/src/int64.c	/^typedef float _Complex Fcomplex;$/;"	t	file:
Fcomplex	abstract-machine/klib/src/int64.c	/^typedef struct { float real, imaginary; } Fcomplex;$/;"	t	typeref:struct:__anon28	file:
FetchDuff	fceux-am/src/boards/n106.cpp	/^static INLINE uint32 FetchDuff(uint32 P, uint32 envelope) {$/;"	f	file:
FetchSpriteData	fceux-am/src/ppu.cpp	/^static void FetchSpriteData(void) {$/;"	f	file:
Fill	fceux-am/src/sound.h	/^	   void (*Fill)(int Count);	\/* Low quality ext sound. *\/$/;"	m	struct:__anon35
FirstSLine	fceux-am/src/fceu.h	/^	int FirstSLine;$/;"	m	struct:__anon32
FixCRR	fceux-am/src/boards/n106.cpp	/^static void FixCRR(void) {$/;"	f	file:
FixCache	fceux-am/src/boards/n106.cpp	/^static void FixCache(int a, int V) {$/;"	f	file:
FixJoedChar	fceux-am/src/drawing.cpp	/^static int FixJoedChar(uint8 ch)$/;"	f	file:
FixMMC3CHR	fceux-am/src/boards/mmc3.cpp	/^void FixMMC3CHR(int V) {$/;"	f
FixMMC3PRG	fceux-am/src/boards/mmc3.cpp	/^void FixMMC3PRG(int V) {$/;"	f
FixNTAR	fceux-am/src/boards/n106.cpp	/^static void FixNTAR(void) {$/;"	f	file:
Fixit1	fceux-am/src/ppu.cpp	/^static void Fixit1(void) {$/;"	f	file:
Fixit2	fceux-am/src/ppu.cpp	/^static INLINE void Fixit2(void) {$/;"	f	file:
FlashPage	fceux-am/src/boards/unrom512.cpp	/^static uint8 *FlashPage[32];$/;"	v	file:
FlashRegs	fceux-am/src/boards/cheapocabra.cpp	/^static SFORMAT FlashRegs[] =$/;"	v	file:
FlushEmulateSound	fceux-am/src/sound.cpp	/^int FlushEmulateSound(void)$/;"	f
FlushGenieRW	fceux-am/src/fceu.cpp	/^void FlushGenieRW(void) {$/;"	f
Font6x7	fceux-am/src/drawing.cpp	/^static uint8 Font6x7[792] =$/;"	v	file:
FrameSoundStuff	fceux-am/src/sound.cpp	/^static void FrameSoundStuff(int V)$/;"	f	file:
FrameSoundUpdate	fceux-am/src/sound.cpp	/^void FrameSoundUpdate(void)$/;"	f
FreqCache	fceux-am/src/boards/n106.cpp	/^static uint32 FreqCache[8];$/;"	v	file:
G	abstract-machine/am/src/x86/qemu/ioe.c	/^static inline uint8_t G(uint32_t p) { return p >> 8; }$/;"	f	file:
GAMEPAD_NUM_BUTTONS	fceux-am/src/drivers/sdl/main.h	50;"	d
GAMEPAD_NUM_DEVICES	fceux-am/src/drivers/sdl/main.h	49;"	d
GAME_MEM_BLOCK_SIZE	fceux-am/src/fceu.h	68;"	d
GATE	abstract-machine/am/src/x86/qemu/cte.c	6;"	d	file:
GATE	abstract-machine/am/src/x86/qemu/cte.c	9;"	d	file:
GATE32	abstract-machine/am/src/x86.h	211;"	d
GATE64	abstract-machine/am/src/x86.h	215;"	d
GDT_ENTRY	abstract-machine/am/src/x86/qemu/boot/start.S	/^#define GDT_ENTRY(n)  \\$/;"	d
GENCWRAP	fceux-am/src/boards/mmc3.cpp	/^static void GENCWRAP(uint32 A, uint8 V) {$/;"	f	file:
GENMWRAP	fceux-am/src/boards/mmc3.cpp	/^static void GENMWRAP(uint8 V) {$/;"	f	file:
GENNOMWRAP	fceux-am/src/boards/mmc3.cpp	/^static void GENNOMWRAP(uint8 V) {$/;"	f	file:
GENPWRAP	fceux-am/src/boards/mmc3.cpp	/^static void GENPWRAP(uint32 A, uint8 V) {$/;"	f	file:
GETLASTPIXEL	fceux-am/src/ppu.cpp	1019;"	d	file:
GET_UINT32	fceux-am/src/utils/md5.cpp	14;"	d	file:
GI	fceux-am/src/fceu.h	/^enum GI {$/;"	g
GINLINE	fceux-am/src/types.h	79;"	d
GINLINE	fceux-am/src/types.h	85;"	d
GIT_CART	fceux-am/src/git.h	/^	GIT_CART	= 0,  \/\/Cart$/;"	e	enum:EGIT
GIT_FDS	fceux-am/src/git.h	/^	GIT_FDS		= 2,  \/\/ Famicom Disk System$/;"	e	enum:EGIT
GIT_NSF	fceux-am/src/git.h	/^	GIT_NSF		= 3,  \/\/NES Sound Format$/;"	e	enum:EGIT
GIT_VSUNI	fceux-am/src/git.h	/^	GIT_VSUNI	= 1,  \/\/VS Unisystem$/;"	e	enum:EGIT
GIV_NTSC	fceux-am/src/git.h	/^	GIV_NTSC	= 0,  \/\/NTSC emulation.$/;"	e	enum:EGIV
GIV_PAL	fceux-am/src/git.h	/^	GIV_PAL		= 1,  \/\/PAL emulation.$/;"	e	enum:EGIV
GIV_USER	fceux-am/src/git.h	/^	GIV_USER	= 2,  \/\/What was set by FCEUI_SetVidSys().$/;"	e	enum:EGIV
GI_CLOSE	fceux-am/src/fceu.h	/^	GI_CLOSE =3,$/;"	e	enum:GI
GI_POWER	fceux-am/src/fceu.h	/^	GI_POWER =2,$/;"	e	enum:GI
GI_RESETM2	fceux-am/src/fceu.h	/^	GI_RESETM2	=1,$/;"	e	enum:GI
GI_RESETSAVE	fceux-am/src/fceu.h	/^	GI_RESETSAVE = 4$/;"	e	enum:GI
GPC	fceux-am/src/input.cpp	/^static INPUTC GPC={ReadGP,0,StrobeGP,UpdateGP,0,0};$/;"	v	file:
GPR1	abstract-machine/am/include/arch/mips32-nemu.h	9;"	d
GPR1	abstract-machine/am/include/arch/native.h	18;"	d
GPR1	abstract-machine/am/include/arch/riscv32-nemu.h	9;"	d
GPR1	abstract-machine/am/include/arch/riscv64-nemu.h	9;"	d
GPR1	abstract-machine/am/include/arch/x86-nemu.h	10;"	d
GPR1	abstract-machine/am/include/arch/x86-qemu.h	11;"	d
GPR1	abstract-machine/am/include/arch/x86_64-qemu.h	15;"	d
GPR2	abstract-machine/am/include/arch/mips32-nemu.h	10;"	d
GPR2	abstract-machine/am/include/arch/native.h	19;"	d
GPR2	abstract-machine/am/include/arch/riscv32-nemu.h	10;"	d
GPR2	abstract-machine/am/include/arch/riscv64-nemu.h	10;"	d
GPR2	abstract-machine/am/include/arch/x86-nemu.h	11;"	d
GPR2	abstract-machine/am/include/arch/x86-qemu.h	12;"	d
GPR2	abstract-machine/am/include/arch/x86_64-qemu.h	16;"	d
GPR3	abstract-machine/am/include/arch/mips32-nemu.h	11;"	d
GPR3	abstract-machine/am/include/arch/native.h	20;"	d
GPR3	abstract-machine/am/include/arch/riscv32-nemu.h	11;"	d
GPR3	abstract-machine/am/include/arch/riscv64-nemu.h	11;"	d
GPR3	abstract-machine/am/include/arch/x86-nemu.h	12;"	d
GPR3	abstract-machine/am/include/arch/x86-qemu.h	13;"	d
GPR3	abstract-machine/am/include/arch/x86_64-qemu.h	17;"	d
GPR4	abstract-machine/am/include/arch/mips32-nemu.h	12;"	d
GPR4	abstract-machine/am/include/arch/native.h	21;"	d
GPR4	abstract-machine/am/include/arch/riscv32-nemu.h	12;"	d
GPR4	abstract-machine/am/include/arch/riscv64-nemu.h	12;"	d
GPR4	abstract-machine/am/include/arch/x86-nemu.h	13;"	d
GPR4	abstract-machine/am/include/arch/x86-qemu.h	14;"	d
GPR4	abstract-machine/am/include/arch/x86_64-qemu.h	18;"	d
GPRx	abstract-machine/am/include/arch/mips32-nemu.h	13;"	d
GPRx	abstract-machine/am/include/arch/native.h	22;"	d
GPRx	abstract-machine/am/include/arch/riscv32-nemu.h	13;"	d
GPRx	abstract-machine/am/include/arch/riscv64-nemu.h	13;"	d
GPRx	abstract-machine/am/include/arch/x86-nemu.h	14;"	d
GPRx	abstract-machine/am/include/arch/x86-qemu.h	15;"	d
GPRx	abstract-machine/am/include/arch/x86_64-qemu.h	19;"	d
GPZ	fceux-am/src/drivers/sdl/input.cpp	155;"	d	file:
GRAYSCALE	fceux-am/src/ppu.cpp	48;"	d	file:
GameExpSound	fceux-am/src/sound.cpp	/^EXPSOUND GameExpSound={0,0,0};$/;"	v
GameGenie	fceux-am/src/fceu.h	/^	bool GameGenie;$/;"	m	struct:__anon32
GameHBIRQHook	fceux-am/src/ppu.cpp	/^void (*GameHBIRQHook)(void), (*GameHBIRQHook2)(void);$/;"	v
GameInfo	fceux-am/src/fceu.cpp	/^FCEUGI *GameInfo = NULL;$/;"	v
GameInterface	fceux-am/src/fceu.cpp	/^void (*GameInterface)(GI h);$/;"	v
GamePadConfig	fceux-am/src/drivers/sdl/input.cpp	/^ButtConfig GamePadConfig[4][10] = {$/;"	v
GamePadNames	fceux-am/src/drivers/sdl/input.cpp	/^const char *GamePadNames[GAMEPAD_NUM_BUTTONS] = { "A", "B", "Select", "Start",$/;"	v
GameStateRestore	fceux-am/src/fceu.cpp	/^void (*GameStateRestore)(int version);$/;"	v
GateDesc32	abstract-machine/am/src/x86.h	/^} GateDesc32;$/;"	t	typeref:struct:__anon2
GateDesc64	abstract-machine/am/src/x86.h	/^} GateDesc64;$/;"	t	typeref:struct:__anon3
GenMMC1Close	fceux-am/src/boards/mmc1.cpp	/^static void GenMMC1Close(void) {$/;"	f	file:
GenMMC1Init	fceux-am/src/boards/mmc1.cpp	/^static void GenMMC1Init(CartInfo *info, int prg, int chr, int wram, int bram) {$/;"	f	file:
GenMMC1Power	fceux-am/src/boards/mmc1.cpp	/^static void GenMMC1Power(void) {$/;"	f	file:
GenMMC3Close	fceux-am/src/boards/mmc3.cpp	/^static void GenMMC3Close(void) {$/;"	f	file:
GenMMC3Power	fceux-am/src/boards/mmc3.cpp	/^void GenMMC3Power(void) {$/;"	f
GenMMC3Restore	fceux-am/src/boards/mmc3.cpp	/^void GenMMC3Restore(int version) {$/;"	f
GenMMC3_Init	fceux-am/src/boards/mmc3.cpp	/^void GenMMC3_Init(CartInfo *info, int prg, int chr, int wram, int battery) {$/;"	f
GenMMC5Reset	fceux-am/src/boards/mmc5.cpp	/^static void GenMMC5Reset(void) {$/;"	f	file:
GenMMC5_Init	fceux-am/src/boards/mmc5.cpp	/^static void GenMMC5_Init(CartInfo *info, int wsize, int battery) {$/;"	f	file:
GetAB	fceux-am/src/x6502.cpp	192;"	d	file:
GetABIRD	fceux-am/src/x6502.cpp	201;"	d	file:
GetABIWR	fceux-am/src/x6502.cpp	216;"	d	file:
GetCHRAddress	fceux-am/src/ppu.cpp	/^int GetCHRAddress(int A) {$/;"	f
GetCHROffset	fceux-am/src/ppu.cpp	/^int GetCHROffset(uint8 *ptr) {$/;"	f
GetFlashWriteCount	fceux-am/src/boards/unrom512.cpp	/^uint32 GetFlashWriteCount(uint8 bank, uint32 A)$/;"	f
GetIX	fceux-am/src/x6502.cpp	241;"	d	file:
GetIYRD	fceux-am/src/x6502.cpp	253;"	d	file:
GetIYWR	fceux-am/src/x6502.cpp	273;"	d	file:
GetKeyboard	fceux-am/src/drivers/sdl/input.cpp	/^unsigned int *GetKeyboard(void)$/;"	f
GetMaxSound	fceux-am/src/drivers/sdl/sdl-sound.cpp	/^GetMaxSound(void)$/;"	f
GetReadHandler	fceux-am/src/fceu.cpp	/^readfunc GetReadHandler(int32 a) {$/;"	f
GetWriteHandler	fceux-am/src/fceu.cpp	/^writefunc GetWriteHandler(int32 a) {$/;"	f
GetWriteSound	fceux-am/src/drivers/sdl/sdl-sound.cpp	/^GetWriteSound(void)$/;"	f
GetZP	fceux-am/src/x6502.cpp	227;"	d	file:
GetZPI	fceux-am/src/x6502.cpp	234;"	d	file:
H	abstract-machine/am/src/native/native-gpu.c	10;"	d	file:
H	abstract-machine/am/src/native/native-gpu.c	7;"	d	file:
H2288PW	fceux-am/src/boards/h2288.cpp	/^static void H2288PW(uint32 A, uint8 V) {$/;"	f	file:
H2288Power	fceux-am/src/boards/h2288.cpp	/^static void H2288Power(void) {$/;"	f	file:
HAS_GUI	fceux-am/src/config.h	4;"	d
HIGHBITS	fceux-am/src/boards/emu2413.c	140;"	d	file:
HKROM_Init	fceux-am/src/boards/mmc3.cpp	/^void HKROM_Init(CartInfo *info) {$/;"	f
HP898FPower	fceux-am/src/boards/hp898f.cpp	/^static void HP898FPower(void) {$/;"	f	file:
HP898FReset	fceux-am/src/boards/hp898f.cpp	/^static void HP898FReset(void) {$/;"	f	file:
HYPERSHOT_NUM_BUTTONS	fceux-am/src/drivers/sdl/main.h	69;"	d
H_FLIP	fceux-am/src/ppu.cpp	1302;"	d	file:
HiFill	fceux-am/src/sound.h	/^	   void (*HiFill)(void);$/;"	m	struct:__anon35
HiFreq	fceux-am/src/boards/emu2413.h	/^	uint8 HiFreq[6];$/;"	m	struct:__anon44
HiSync	fceux-am/src/sound.h	/^	   void (*HiSync)(int32 ts);$/;"	m	struct:__anon35
I8042_DATA_MMIO	nemu/src/device/keyboard.c	6;"	d	file:
I8042_DATA_PORT	nemu/src/device/keyboard.c	5;"	d	file:
ICRHI	abstract-machine/am/src/x86/qemu/ioe.c	367;"	d	file:
ICRLO	abstract-machine/am/src/x86/qemu/ioe.c	357;"	d	file:
ID	abstract-machine/am/src/x86/qemu/ioe.c	350;"	d	file:
ID	fceux-am/src/ines.h	/^	char ID[4]; \/*NES^Z*\/        \/\/ 0-3$/;"	m	struct:iNES_HEADER
IDEX	nemu/include/cpu/exec.h	15;"	d
IDEXW	nemu/include/cpu/exec.h	14;"	d
IDT_ENTRY	abstract-machine/am/src/x86/qemu/cte.c	115;"	d	file:
IMAGE	abstract-machine/Makefile	/^IMAGE     = $(abspath $(IMAGE_REL))$/;"	m
IMAGE_REL	abstract-machine/Makefile	/^IMAGE_REL = build\/$(NAME)-$(ARCH)$/;"	m
IMAGE_START	nemu/include/isa.h	10;"	d
IMG	nemu/Makefile	/^IMG :=$/;"	m
INC	fceux-am/src/x6502.cpp	162;"	d	file:
INC32	fceux-am/src/ppu.cpp	43;"	d	file:
INCLUDES	nemu/Makefile	/^INCLUDES  = $(addprefix -I, $(INC_DIR))$/;"	m
INCLUDES	nemu/tools/kvm-diff/Makefile	/^INCLUDES  = $(addprefix -I, $(INC_DIR))$/;"	m
INCLUDES	nemu/tools/qemu-diff/Makefile	/^INCLUDES  = $(addprefix -I, $(INC_DIR))$/;"	m
INC_PATH	fceux-am/Makefile	/^INC_PATH  = $(ROM_PATH)\/gen\/$/;"	m
INESB_CORRUPT	fceux-am/src/ines.cpp	213;"	d	file:
INESB_HACKED	fceux-am/src/ines.cpp	214;"	d	file:
INESB_INCOMPLETE	fceux-am/src/ines.cpp	212;"	d	file:
INIT	abstract-machine/am/src/x86/qemu/ioe.c	358;"	d	file:
INLINE	fceux-am/src/boards/emu2413.h	10;"	d
INLINE	fceux-am/src/boards/emu2413.h	12;"	d
INLINE	fceux-am/src/boards/emu2413.h	8;"	d
INLINE	fceux-am/src/types.h	78;"	d
INLINE	fceux-am/src/types.h	84;"	d
INPSEL	fceux-am/src/ines.cpp	/^struct INPSEL {$/;"	s	file:
INPUTC	fceux-am/src/input.h	/^struct INPUTC$/;"	s
INPUTCFC	fceux-am/src/input.h	/^struct INPUTCFC$/;"	s
INT_ACTIVELOW	abstract-machine/am/src/x86/qemu/ioe.c	387;"	d	file:
INT_DISABLED	abstract-machine/am/src/x86/qemu/ioe.c	385;"	d	file:
INT_LEVEL	abstract-machine/am/src/x86/qemu/ioe.c	386;"	d	file:
INT_LOGICAL	abstract-machine/am/src/x86/qemu/ioe.c	388;"	d	file:
INVALID_STATE	fceux-am/src/drivers/sdl/sdl.h	/^const int INVALID_STATE = 99;$/;"	v
IN_RANGE	abstract-machine/klib/include/klib-macros.h	8;"	d
IOAPIC	abstract-machine/am/src/x86/qemu/ioe.c	/^struct IOAPIC {$/;"	s	file:
IOAPIC	abstract-machine/am/src/x86/qemu/ioe.c	/^typedef struct IOAPIC IOAPIC;$/;"	t	typeref:struct:IOAPIC	file:
IOAPIC_ADDR	abstract-machine/am/src/x86/qemu/ioe.c	380;"	d	file:
IOMap	nemu/include/device/map.h	/^} IOMap;$/;"	t	typeref:struct:__anon70
IO_SPACE_MAX	nemu/src/device/io/map.c	6;"	d	file:
IRAM	fceux-am/src/boards/n106.cpp	/^static uint8 IRAM[128];$/;"	v	file:
IRQ	abstract-machine/am/src/x86/qemu/cte.c	45;"	d	file:
IRQClock	fceux-am/src/boards/252.cpp	/^static int32 IRQa, IRQCount, IRQClock, IRQLatch;$/;"	v	file:
IRQClock	fceux-am/src/boards/253.cpp	/^static int32 IRQa, IRQCount, IRQLatch, IRQClock;$/;"	v	file:
IRQCount	fceux-am/src/boards/09-034a.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQCount	fceux-am/src/boards/106.cpp	/^static uint32 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/116.cpp	/^static uint8 IRQCount, IRQLatch, IRQa;$/;"	v	file:
IRQCount	fceux-am/src/boards/117.cpp	/^static uint8 IRQa, IRQCount, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/18.cpp	/^static int32 IRQCount, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/183.cpp	/^static uint8 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/222.cpp	/^static uint8 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/252.cpp	/^static int32 IRQa, IRQCount, IRQClock, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/253.cpp	/^static int32 IRQa, IRQCount, IRQLatch, IRQClock;$/;"	v	file:
IRQCount	fceux-am/src/boards/33.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/3d-block.cpp	/^static int16 IRQCount, IRQPause;$/;"	v	file:
IRQCount	fceux-am/src/boards/40.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQCount	fceux-am/src/boards/42.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQCount	fceux-am/src/boards/43.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQCount	fceux-am/src/boards/50.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQCount	fceux-am/src/boards/65.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/67.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/69.cpp	/^static int32 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/90.cpp	/^static uint8 IRQCount;       \/\/ from $c005$/;"	v	file:
IRQCount	fceux-am/src/boards/91.cpp	/^static uint8 IRQCount, IRQa;$/;"	v	file:
IRQCount	fceux-am/src/boards/ax5705.cpp	/^static uint8 IRQCount; \/\/, IRQPre;$/;"	v	file:
IRQCount	fceux-am/src/boards/bandai.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/cityfighter.cpp	/^static int32 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/ffe.cpp	/^static int32 IRQCount, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/ks7017.cpp	/^static int32 IRQa, IRQCount, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/ks7032.cpp	/^static int32 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/lh53.cpp	/^static int32 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/mmc3.cpp	/^uint8 IRQCount, IRQLatch, IRQa;$/;"	v
IRQCount	fceux-am/src/boards/mmc3.cpp	41;"	d	file:
IRQCount	fceux-am/src/boards/mmc3.h	8;"	d
IRQCount	fceux-am/src/boards/n106.cpp	/^static uint16 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/onebus.cpp	/^static uint8 IRQCount, IRQa, IRQReload;$/;"	v	file:
IRQCount	fceux-am/src/boards/sb-2000.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/sc-127.cpp	/^static uint16 IRQCount, IRQa;$/;"	v	file:
IRQCount	fceux-am/src/boards/tengen.cpp	/^static uint8 rmode, IRQmode, IRQCount, IRQa, IRQLatch;$/;"	v	file:
IRQCount	fceux-am/src/boards/tf-1201.cpp	/^static uint8 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/vrc2and4.cpp	/^static uint16 IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/vrc3.cpp	/^static uint16 IRQReload, IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/vrc5.cpp	/^static uint32 IRQLatch, IRQCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/vrc6.cpp	/^static int32 IRQCount, CycleCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/vrc7.cpp	/^static int32 IRQCount, CycleCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/vrc7p.cpp	/^static int32 IRQCount, CycleCount;$/;"	v	file:
IRQCount	fceux-am/src/boards/yoko.cpp	/^static int32 IRQCount;$/;"	v	file:
IRQEnable	fceux-am/src/boards/mmc5.cpp	/^static uint8 IRQScanline, IRQEnable;$/;"	v	file:
IRQFrameMode	fceux-am/src/sound.cpp	/^uint8 IRQFrameMode=0;		\/\/ $4017 \/ Frame counter control \/ xx000000$/;"	v
IRQHANDLE_DECL	abstract-machine/am/src/x86/qemu/cte.c	12;"	d	file:
IRQLatch	fceux-am/src/boards/116.cpp	/^static uint8 IRQCount, IRQLatch, IRQa;$/;"	v	file:
IRQLatch	fceux-am/src/boards/117.cpp	/^static uint8 IRQa, IRQCount, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/18.cpp	/^static int32 IRQCount, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/252.cpp	/^static int32 IRQa, IRQCount, IRQClock, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/253.cpp	/^static int32 IRQa, IRQCount, IRQLatch, IRQClock;$/;"	v	file:
IRQLatch	fceux-am/src/boards/33.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/65.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/67.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/bandai.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/ffe.cpp	/^static int32 IRQCount, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/ks7017.cpp	/^static int32 IRQa, IRQCount, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/mmc3.cpp	/^uint8 IRQCount, IRQLatch, IRQa;$/;"	v
IRQLatch	fceux-am/src/boards/mmc3.cpp	42;"	d	file:
IRQLatch	fceux-am/src/boards/mmc3.h	9;"	d
IRQLatch	fceux-am/src/boards/onebus.cpp	35;"	d	file:
IRQLatch	fceux-am/src/boards/sb-2000.cpp	/^static int16 IRQCount, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/tengen.cpp	/^static uint8 rmode, IRQmode, IRQCount, IRQa, IRQLatch;$/;"	v	file:
IRQLatch	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 IRQLatch, IRQa;$/;"	v	file:
IRQLatch	fceux-am/src/boards/vrc5.cpp	/^static uint32 IRQLatch, IRQCount;$/;"	v	file:
IRQLatch	fceux-am/src/boards/vrc6.cpp	/^static uint8 IRQLatch, IRQa, IRQd;$/;"	v	file:
IRQLatch	fceux-am/src/boards/vrc7.cpp	/^static uint8 IRQLatch, IRQa, IRQd;$/;"	v	file:
IRQLatch	fceux-am/src/boards/vrc7p.cpp	/^static uint8 IRQLatch, IRQa, IRQd;$/;"	v	file:
IRQMode	fceux-am/src/boards/90.cpp	/^static uint8 IRQMode;        \/\/ from $c001$/;"	v	file:
IRQPause	fceux-am/src/boards/3d-block.cpp	/^static int16 IRQCount, IRQPause;$/;"	v	file:
IRQPre	fceux-am/src/boards/183.cpp	/^static uint8 IRQPre;$/;"	v	file:
IRQPre	fceux-am/src/boards/90.cpp	/^static uint8 IRQPre;         \/\/ from $c004$/;"	v	file:
IRQPre	fceux-am/src/boards/tf-1201.cpp	/^static uint8 IRQPre;$/;"	v	file:
IRQPreSize	fceux-am/src/boards/90.cpp	/^static uint8 IRQPreSize;     \/\/ from $c007$/;"	v	file:
IRQReload	fceux-am/src/boards/116.cpp	/^static uint8 IRQReload;$/;"	v	file:
IRQReload	fceux-am/src/boards/mmc3.cpp	/^uint8 IRQReload;$/;"	v
IRQReload	fceux-am/src/boards/onebus.cpp	/^static uint8 IRQCount, IRQa, IRQReload;$/;"	v	file:
IRQReload	fceux-am/src/boards/vrc3.cpp	/^static uint16 IRQReload, IRQCount;$/;"	v	file:
IRQS	abstract-machine/am/src/x86.h	54;"	d
IRQScanline	fceux-am/src/boards/mmc5.cpp	/^static uint8 IRQScanline, IRQEnable;$/;"	v	file:
IRQXOR	fceux-am/src/boards/90.cpp	/^static uint8 IRQXOR;         \/\/ Loaded from $C006$/;"	v	file:
IRQ_COM1	abstract-machine/am/src/x86.h	37;"	d
IRQ_DEF	abstract-machine/am/src/x86/qemu/trap32.S	/^#define IRQ_DEF(id, dpl, err) \\$/;"	d
IRQ_DEF	abstract-machine/am/src/x86/qemu/trap64.S	/^#define IRQ_DEF(id, dpl, err) \\$/;"	d
IRQ_ERROR	abstract-machine/am/src/x86.h	38;"	d
IRQ_KBD	abstract-machine/am/src/x86.h	36;"	d
IRQ_SPURIOUS	abstract-machine/am/src/x86.h	39;"	d
IRQ_TIMER	abstract-machine/am/src/x86.h	35;"	d
IRQa	fceux-am/src/boards/09-034a.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/106.cpp	/^static uint8 reg[16], IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/116.cpp	/^static uint8 IRQCount, IRQLatch, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/117.cpp	/^static uint8 IRQa, IRQCount, IRQLatch;$/;"	v	file:
IRQa	fceux-am/src/boards/18.cpp	/^static uint8 IRQa, mirr;$/;"	v	file:
IRQa	fceux-am/src/boards/183.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/222.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/252.cpp	/^static int32 IRQa, IRQCount, IRQClock, IRQLatch;$/;"	v	file:
IRQa	fceux-am/src/boards/253.cpp	/^static int32 IRQa, IRQCount, IRQLatch, IRQClock;$/;"	v	file:
IRQa	fceux-am/src/boards/33.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/3d-block.cpp	/^static uint8 reg[4], IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/40.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/42.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/43.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/50.cpp	/^static uint32 IRQCount, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/65.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/67.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/69.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/90.cpp	/^static uint8 IRQa;           \/\/ $c002, $c003, and $c000$/;"	v	file:
IRQa	fceux-am/src/boards/91.cpp	/^static uint8 IRQCount, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/ax5705.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/bandai.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/cityfighter.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/ffe.cpp	/^static uint8 IRQa, mirr;$/;"	v	file:
IRQa	fceux-am/src/boards/ks7017.cpp	/^static int32 IRQa, IRQCount, IRQLatch;$/;"	v	file:
IRQa	fceux-am/src/boards/ks7032.cpp	/^static uint8 reg[8], cmd, IRQa = 0, isirqused = 0;$/;"	v	file:
IRQa	fceux-am/src/boards/lh53.cpp	/^static uint8 reg, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/mmc3.cpp	/^uint8 IRQCount, IRQLatch, IRQa;$/;"	v
IRQa	fceux-am/src/boards/mmc3.cpp	43;"	d	file:
IRQa	fceux-am/src/boards/mmc3.h	10;"	d
IRQa	fceux-am/src/boards/n106.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/onebus.cpp	/^static uint8 IRQCount, IRQa, IRQReload;$/;"	v	file:
IRQa	fceux-am/src/boards/sb-2000.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/sc-127.cpp	/^static uint16 IRQCount, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/tengen.cpp	/^static uint8 rmode, IRQmode, IRQCount, IRQa, IRQLatch;$/;"	v	file:
IRQa	fceux-am/src/boards/tf-1201.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 IRQLatch, IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/vrc3.cpp	/^static uint8 IRQa;$/;"	v	file:
IRQa	fceux-am/src/boards/vrc5.cpp	/^static uint8 IRQa, K4IRQ;$/;"	v	file:
IRQa	fceux-am/src/boards/vrc6.cpp	/^static uint8 IRQLatch, IRQa, IRQd;$/;"	v	file:
IRQa	fceux-am/src/boards/vrc7.cpp	/^static uint8 IRQLatch, IRQa, IRQd;$/;"	v	file:
IRQa	fceux-am/src/boards/vrc7p.cpp	/^static uint8 IRQLatch, IRQa, IRQd;$/;"	v	file:
IRQa	fceux-am/src/boards/yoko.cpp	/^static uint8 mode, bank, reg[11], low[4], dip, IRQa;$/;"	v	file:
IRQd	fceux-am/src/boards/vrc6.cpp	/^static uint8 IRQLatch, IRQa, IRQd;$/;"	v	file:
IRQd	fceux-am/src/boards/vrc7.cpp	/^static uint8 IRQLatch, IRQa, IRQd;$/;"	v	file:
IRQd	fceux-am/src/boards/vrc7p.cpp	/^static uint8 IRQLatch, IRQa, IRQd;$/;"	v	file:
IRQlow	fceux-am/src/x6502struct.h	/^  uint32 IRQlow;    \/* Simulated IRQ pin held low(or is it high?).$/;"	m	struct:__X6502
IRQm	fceux-am/src/boards/vrc3.cpp	/^static uint8 IRQm;	\/\/mode$/;"	v	file:
IRQmode	fceux-am/src/boards/tengen.cpp	/^static uint8 rmode, IRQmode, IRQCount, IRQa, IRQLatch;$/;"	v	file:
IRQx	fceux-am/src/boards/vrc3.cpp	/^static uint8 IRQx;	\/\/autoenable$/;"	v	file:
ISA	abstract-machine/Makefile	/^ISA        = $(word 1,$(ARCH_SPLIT))$/;"	m
ISA	nemu/Makefile	/^ISA ?= x86$/;"	m
ISA	nemu/tools/kvm-diff/Makefile	/^ISA ?= x86$/;"	m
ISA	nemu/tools/qemu-diff/Makefile	/^ISA ?= x86$/;"	m
ISA64	nemu/include/common.h	8;"	d
ISADecodeInfo	nemu/include/isa.h	/^typedef concat(__ISA__, _ISADecodeInfo) ISADecodeInfo;$/;"	t
ISAS	nemu/Makefile	/^ISAS = $(shell ls src\/isa\/)$/;"	m
ISAS	nemu/tools/qemu-diff/Makefile	/^ISAS = $(shell ls src\/isa\/)$/;"	m
ISA_QEMU_ARGS	nemu/tools/qemu-diff/include/isa/mips32.h	8;"	d
ISA_QEMU_ARGS	nemu/tools/qemu-diff/include/isa/riscv32.h	5;"	d
ISA_QEMU_ARGS	nemu/tools/qemu-diff/include/isa/riscv64.h	5;"	d
ISA_QEMU_ARGS	nemu/tools/qemu-diff/include/isa/x86.h	5;"	d
ISA_QEMU_BIN	nemu/tools/qemu-diff/include/isa/mips32.h	7;"	d
ISA_QEMU_BIN	nemu/tools/qemu-diff/include/isa/riscv32.h	4;"	d
ISA_QEMU_BIN	nemu/tools/qemu-diff/include/isa/riscv64.h	4;"	d
ISA_QEMU_BIN	nemu/tools/qemu-diff/include/isa/x86.h	4;"	d
I_FLAG	fceux-am/src/x6502.h	60;"	d
InFrame	fceux-am/src/drivers/sdl/sdl-throttle.cpp	/^static int InFrame;$/;"	v	file:
InitBlitToHigh	fceux-am/src/drivers/common/vidblit.cpp	/^int InitBlitToHigh(int b, uint32 rmask, uint32 gmask, uint32 bmask, int efx, int specfilt, int specfilteropt)$/;"	f
InitInputInterface	fceux-am/src/drivers/sdl/input.cpp	/^void InitInputInterface ()$/;"	f
InitSound	fceux-am/src/drivers/sdl/sdl-sound.cpp	/^InitSound()$/;"	f
InitVideo	fceux-am/src/drivers/sdl/sdl-video.cpp	/^InitVideo(FCEUGI *gi)$/;"	f
InitialRawDALatch	fceux-am/src/sound.cpp	/^uint8 InitialRawDALatch=0; \/\/ used only for lua$/;"	v
InitializeInput	fceux-am/src/input.cpp	/^void InitializeInput(void)$/;"	f
InputScanlineHook	fceux-am/src/input.cpp	/^void InputScanlineHook(uint8 *bg, uint8 *spr, uint32 linets, int final)$/;"	f
InputUserActiveFix	fceux-am/src/drivers/sdl/input.cpp	/^InputUserActiveFix ()$/;"	f
InstVol	fceux-am/src/boards/emu2413.h	/^	uint8 InstVol[6];$/;"	m	struct:__anon44
JOYPORT	fceux-am/src/input.h	/^	JOYPORT(int _w)$/;"	f	struct:JOYPORT
JOYPORT	fceux-am/src/input.h	/^extern struct JOYPORT$/;"	s
JOY_A	fceux-am/src/fceu.h	151;"	d
JOY_B	fceux-am/src/fceu.h	152;"	d
JOY_DOWN	fceux-am/src/fceu.h	156;"	d
JOY_LEFT	fceux-am/src/fceu.h	157;"	d
JOY_RIGHT	fceux-am/src/fceu.h	158;"	d
JOY_SELECT	fceux-am/src/fceu.h	153;"	d
JOY_START	fceux-am/src/fceu.h	154;"	d
JOY_UP	fceux-am/src/fceu.h	155;"	d
JR	fceux-am/src/x6502.cpp	94;"	d	file:
JSreturn	fceux-am/src/drivers/sdl/input.cpp	/^static uint32 JSreturn = 0;$/;"	v	file:
K4IRQ	fceux-am/src/boards/vrc5.cpp	/^static uint8 IRQa, K4IRQ;$/;"	v	file:
KBD_ADDR	abstract-machine/am/src/nemu/include/nemu.h	20;"	d
KBD_ADDR	abstract-machine/am/src/nemu/include/nemu.h	26;"	d
KEYDOWN_MASK	abstract-machine/am/src/native/native-input.c	5;"	d	file:
KEYDOWN_MASK	abstract-machine/am/src/nemu/ioe/input.c	4;"	d	file:
KEYDOWN_MASK	fceux-am/src/drivers/sdl/input.cpp	108;"	d	file:
KEYDOWN_MASK	nemu/src/device/keyboard.c	36;"	d	file:
KEY_QUEUE_LEN	abstract-machine/am/src/native/native-input.c	7;"	d	file:
KEY_QUEUE_LEN	nemu/src/device/keyboard.c	32;"	d	file:
KL	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
KLIB_H__	abstract-machine/klib/include/klib.h	2;"	d
KLIB_MACROS_H__	abstract-machine/klib/include/klib-macros.h	2;"	d
KR	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
KSEL	abstract-machine/am/src/x86.h	30;"	d
KeyboardCommands	fceux-am/src/drivers/sdl/input.cpp	/^static void KeyboardCommands ()$/;"	f	file:
Kill	fceux-am/src/sound.h	/^	   void (*Kill)(void);$/;"	m	struct:__anon35
KillBlitToHigh	fceux-am/src/drivers/common/vidblit.cpp	/^void KillBlitToHigh(void)$/;"	f
KillFCEUXonFrame	fceux-am/src/drivers/sdl/sdl.cpp	/^int KillFCEUXonFrame = 0;$/;"	v
KillSound	fceux-am/src/drivers/sdl/sdl-sound.cpp	/^KillSound(void)$/;"	f
KillVideo	fceux-am/src/drivers/sdl/sdl-video.cpp	/^KillVideo()$/;"	f
LCYCS	fceux-am/src/boards/252.cpp	87;"	d	file:
LCYCS	fceux-am/src/boards/253.cpp	111;"	d	file:
LCYCS	fceux-am/src/boards/vrc2and4.cpp	143;"	d	file:
LD	abstract-machine/Makefile	/^LD        = $(CROSS_COMPILE)ld$/;"	m
LD	nemu/Makefile	/^LD = gcc$/;"	m
LD	nemu/tools/kvm-diff/Makefile	/^LD = gcc$/;"	m
LD	nemu/tools/qemu-diff/Makefile	/^LD = gcc$/;"	m
LDA	fceux-am/src/x6502.cpp	112;"	d	file:
LDX	fceux-am/src/x6502.cpp	113;"	d	file:
LDY	fceux-am/src/x6502.cpp	114;"	d	file:
LD_AB	fceux-am/src/x6502.cpp	307;"	d	file:
LD_ABI	fceux-am/src/x6502.cpp	308;"	d	file:
LD_ABX	fceux-am/src/x6502.cpp	309;"	d	file:
LD_ABY	fceux-am/src/x6502.cpp	310;"	d	file:
LD_IM	fceux-am/src/x6502.cpp	303;"	d	file:
LD_IX	fceux-am/src/x6502.cpp	311;"	d	file:
LD_IY	fceux-am/src/x6502.cpp	312;"	d	file:
LD_LIBS	nemu/Makefile	/^LD_LIBS = -lSDL2 -lreadline -ldl$/;"	m
LD_ZP	fceux-am/src/x6502.cpp	304;"	d	file:
LD_ZPX	fceux-am/src/x6502.cpp	305;"	d	file:
LD_ZPY	fceux-am/src/x6502.cpp	306;"	d	file:
LE05Power	fceux-am/src/boards/le05.cpp	/^static void LE05Power(void) {$/;"	f	file:
LE05_Init	fceux-am/src/boards/le05.cpp	/^void LE05_Init(CartInfo *info) {$/;"	f
LENGTH	abstract-machine/klib/include/klib-macros.h	6;"	d
LEVEL	abstract-machine/am/src/x86/qemu/ioe.c	363;"	d	file:
LH10Power	fceux-am/src/boards/ks7037.cpp	/^static void LH10Power(void) {$/;"	f	file:
LH10_Init	fceux-am/src/boards/ks7037.cpp	/^void LH10_Init(CartInfo *info) {$/;"	f
LH32Close	fceux-am/src/boards/lh32.cpp	/^static void LH32Close(void) {$/;"	f	file:
LH32Power	fceux-am/src/boards/lh32.cpp	/^static void LH32Power(void) {$/;"	f	file:
LH32_Init	fceux-am/src/boards/lh32.cpp	/^void LH32_Init(CartInfo *info) {$/;"	f
LH53Close	fceux-am/src/boards/lh53.cpp	/^static void LH53Close(void) {$/;"	f	file:
LH53IRQ	fceux-am/src/boards/lh53.cpp	/^static void LH53IRQ(int a) {$/;"	f	file:
LH53Power	fceux-am/src/boards/lh53.cpp	/^static void LH53Power(void) {$/;"	f	file:
LH53_Init	fceux-am/src/boards/lh53.cpp	/^void LH53_Init(CartInfo *info) {$/;"	f
LIBS	abstract-machine/Makefile	/^LIBS     := $(sort $(LIBS) am klib) # lazy evaluation ("=") causes infinite recursions$/;"	m
LINKAGE	abstract-machine/Makefile	/^LINKAGE   = $(OBJS) \\$/;"	m
LINT0	abstract-machine/am/src/x86/qemu/ioe.c	372;"	d	file:
LINT1	abstract-machine/am/src/x86/qemu/ioe.c	373;"	d	file:
LOG_END	nemu/src/monitor/cpu-exec.c	17;"	d	file:
LOG_START	nemu/src/monitor/cpu-exec.c	15;"	d	file:
LOWBITS	fceux-am/src/boards/emu2413.c	143;"	d	file:
LSR	fceux-am/src/x6502.cpp	165;"	d	file:
LSRA	fceux-am/src/x6502.cpp	168;"	d	file:
LastSLine	fceux-am/src/fceu.h	/^	int LastSLine;$/;"	m	struct:__anon32
LastStrobe	fceux-am/src/input.cpp	/^static uint8 LastStrobe;$/;"	v	file:
Lasttime	fceux-am/src/drivers/sdl/sdl-throttle.cpp	/^static uint64 Lasttime, Nexttime;$/;"	v	file:
LatchClose	fceux-am/src/boards/addrlatch.cpp	/^static void LatchClose(void) {$/;"	f	file:
LatchClose	fceux-am/src/boards/datalatch.cpp	/^static void LatchClose(void) {$/;"	f	file:
LatchPower	fceux-am/src/boards/addrlatch.cpp	/^static void LatchPower(void) {$/;"	f	file:
LatchPower	fceux-am/src/boards/datalatch.cpp	/^static void LatchPower(void) {$/;"	f	file:
LatchReset	fceux-am/src/boards/addrlatch.cpp	/^static void LatchReset(void) {$/;"	f	file:
Latch_Init	fceux-am/src/boards/addrlatch.cpp	/^static void Latch_Init(CartInfo *info, void (*proc)(void), readfunc func, uint16 linit, uint16 adr0, uint16 adr1, uint8 wram) {$/;"	f	file:
Latch_Init	fceux-am/src/boards/datalatch.cpp	/^static void Latch_Init(CartInfo *info, void (*proc)(void), uint8 init, uint16 adr0, uint16 adr1, uint8 wram, uint8 busc) {$/;"	f	file:
Lcomplex	abstract-machine/klib/src/int64.c	/^typedef long double _Complex Lcomplex;$/;"	t	file:
Lcomplex	abstract-machine/klib/src/int64.c	/^typedef struct { long double real, imaginary; } Lcomplex;$/;"	t	typeref:struct:__anon30	file:
LengthCache	fceux-am/src/boards/n106.cpp	/^static uint32 LengthCache[8];$/;"	v	file:
LoadDMCPeriod	fceux-am/src/sound.cpp	/^static void LoadDMCPeriod(uint8 V)$/;"	f	file:
LoadGame	fceux-am/src/drivers/sdl/sdl.cpp	/^int LoadGame(const char *path)$/;"	f
LoadedRomFName	fceux-am/src/ines.cpp	/^char LoadedRomFName[2048]; \/\/mbg merge 7\/17\/06 added$/;"	v
Log	nemu/include/debug.h	8;"	d
LogAddress	fceux-am/src/ppu.cpp	/^volatile int rendercount, vromreadcount, undefinedvromcount, LogAddress = -1;$/;"	v
LowFreq	fceux-am/src/boards/emu2413.h	/^	uint8 LowFreq[6];$/;"	m	struct:__anon44
M101Sync	fceux-am/src/boards/datalatch.cpp	/^static void M101Sync(void) {$/;"	f	file:
M103Close	fceux-am/src/boards/103.cpp	/^static void M103Close(void) {$/;"	f	file:
M103Power	fceux-am/src/boards/103.cpp	/^static void M103Power(void) {$/;"	f	file:
M106Close	fceux-am/src/boards/106.cpp	/^static void M106Close(void) {$/;"	f	file:
M106CpuHook	fceux-am/src/boards/106.cpp	/^void M106CpuHook(int a) {$/;"	f
M106Power	fceux-am/src/boards/106.cpp	/^static void M106Power(void) {$/;"	f	file:
M106Reset	fceux-am/src/boards/106.cpp	/^static void M106Reset(void) {$/;"	f	file:
M107Sync	fceux-am/src/boards/datalatch.cpp	/^static void M107Sync(void) {$/;"	f	file:
M108Power	fceux-am/src/boards/108.cpp	/^static void M108Power(void) {$/;"	f	file:
M111Close	fceux-am/src/boards/cheapocabra.cpp	/^static void M111Close(void) {$/;"	f	file:
M111FlashIDEnter	fceux-am/src/boards/cheapocabra.cpp	/^void M111FlashIDEnter()$/;"	f
M111FlashIDExit	fceux-am/src/boards/cheapocabra.cpp	/^void M111FlashIDExit()$/;"	f
M111Power	fceux-am/src/boards/cheapocabra.cpp	/^static void M111Power(void) {$/;"	f	file:
M112Close	fceux-am/src/boards/112.cpp	/^static void M112Close(void) {$/;"	f	file:
M112Power	fceux-am/src/boards/112.cpp	/^static void M112Power(void) {$/;"	f	file:
M113Sync	fceux-am/src/boards/datalatch.cpp	/^static void M113Sync(void) {$/;"	f	file:
M114PWRAP	fceux-am/src/boards/mmc3.cpp	/^static void M114PWRAP(uint32 A, uint8 V) {$/;"	f	file:
M114Power	fceux-am/src/boards/mmc3.cpp	/^static void M114Power(void) {$/;"	f	file:
M114Reset	fceux-am/src/boards/mmc3.cpp	/^static void M114Reset(void) {$/;"	f	file:
M115CW	fceux-am/src/boards/mmc3.cpp	/^static void M115CW(uint32 A, uint8 V) {$/;"	f	file:
M115PW	fceux-am/src/boards/mmc3.cpp	/^static void M115PW(uint32 A, uint8 V) {$/;"	f	file:
M115Power	fceux-am/src/boards/mmc3.cpp	/^static void M115Power(void) {$/;"	f	file:
M117IRQHook	fceux-am/src/boards/117.cpp	/^static void M117IRQHook(void) {$/;"	f	file:
M117Power	fceux-am/src/boards/117.cpp	/^static void M117Power(void) {$/;"	f	file:
M11Sync	fceux-am/src/boards/datalatch.cpp	/^static void M11Sync(void) {$/;"	f	file:
M120Power	fceux-am/src/boards/120.cpp	/^static void M120Power(void) {$/;"	f	file:
M121CW	fceux-am/src/boards/121.cpp	/^static void M121CW(uint32 A, uint8 V) {$/;"	f	file:
M121PW	fceux-am/src/boards/121.cpp	/^static void M121PW(uint32 A, uint8 V) {$/;"	f	file:
M121Power	fceux-am/src/boards/121.cpp	/^static void M121Power(void) {$/;"	f	file:
M12CW	fceux-am/src/boards/mmc3.cpp	/^static void M12CW(uint32 A, uint8 V) {$/;"	f	file:
M12Power	fceux-am/src/boards/mmc3.cpp	/^static void M12Power(void) {$/;"	f	file:
M12Reset	fceux-am/src/boards/mmc3.cpp	/^static void M12Reset(void) {$/;"	f	file:
M134CW	fceux-am/src/boards/mmc3.cpp	/^static void M134CW(uint32 A, uint8 V) {$/;"	f	file:
M134PW	fceux-am/src/boards/mmc3.cpp	/^static void M134PW(uint32 A, uint8 V) {$/;"	f	file:
M134Power	fceux-am/src/boards/mmc3.cpp	/^static void M134Power(void) {$/;"	f	file:
M134Reset	fceux-am/src/boards/mmc3.cpp	/^static void M134Reset(void) {$/;"	f	file:
M151Power	fceux-am/src/boards/151.cpp	/^static void M151Power(void) {$/;"	f	file:
M152Sync	fceux-am/src/boards/datalatch.cpp	/^static void M152Sync() {$/;"	f	file:
M153Close	fceux-am/src/boards/bandai.cpp	/^static void M153Close(void) {$/;"	f	file:
M153Power	fceux-am/src/boards/bandai.cpp	/^static void M153Power(void) {$/;"	f	file:
M156Close	fceux-am/src/boards/156.cpp	/^static void M156Close(void) {$/;"	f	file:
M156Power	fceux-am/src/boards/156.cpp	/^static void M156Power(void) {$/;"	f	file:
M156Reset	fceux-am/src/boards/156.cpp	/^static void M156Reset(void) {$/;"	f	file:
M157Power	fceux-am/src/boards/bandai.cpp	/^static void M157Power(void) {$/;"	f	file:
M15Close	fceux-am/src/boards/15.cpp	/^static void M15Close(void) {$/;"	f	file:
M15Power	fceux-am/src/boards/15.cpp	/^static void M15Power(void) {$/;"	f	file:
M15Reset	fceux-am/src/boards/15.cpp	/^static void M15Reset(void) {$/;"	f	file:
M163HB	fceux-am/src/boards/164.cpp	/^static void M163HB(void) {$/;"	f	file:
M165CW	fceux-am/src/boards/mmc3.cpp	/^static void M165CW(uint32 A, uint8 V) {$/;"	f	file:
M165CWM	fceux-am/src/boards/mmc3.cpp	/^static void M165CWM(uint32 A, uint8 V) {$/;"	f	file:
M165PPU	fceux-am/src/boards/mmc3.cpp	/^static void M165PPU(uint32 A) {$/;"	f	file:
M165PPUFD	fceux-am/src/boards/mmc3.cpp	/^static void M165PPUFD(void) {$/;"	f	file:
M165PPUFE	fceux-am/src/boards/mmc3.cpp	/^static void M165PPUFE(void) {$/;"	f	file:
M165Power	fceux-am/src/boards/mmc3.cpp	/^static void M165Power(void) {$/;"	f	file:
M166Power	fceux-am/src/boards/subor.cpp	/^static void M166Power(void) {$/;"	f	file:
M168Close	fceux-am/src/boards/168.cpp	/^static void M168Close(void) {$/;"	f	file:
M168Power	fceux-am/src/boards/168.cpp	/^static void M168Power(void) {$/;"	f	file:
M170Power	fceux-am/src/boards/170.cpp	/^static void M170Power(void) {$/;"	f	file:
M175Power	fceux-am/src/boards/175.cpp	/^static void M175Power(void) {$/;"	f	file:
M176Close	fceux-am/src/boards/176.cpp	/^static void M176Close(void)$/;"	f	file:
M176Power	fceux-am/src/boards/176.cpp	/^static void M176Power(void)$/;"	f	file:
M177Close	fceux-am/src/boards/177.cpp	/^static void M177Close(void) {$/;"	f	file:
M177Power	fceux-am/src/boards/177.cpp	/^static void M177Power(void) {$/;"	f	file:
M178Close	fceux-am/src/boards/178.cpp	/^static void M178Close(void) {$/;"	f	file:
M178Power	fceux-am/src/boards/178.cpp	/^static void M178Power(void) {$/;"	f	file:
M178SndClk	fceux-am/src/boards/178.cpp	/^static void M178SndClk(int a) {$/;"	f	file:
M180Sync	fceux-am/src/boards/datalatch.cpp	/^static void M180Sync(void) {$/;"	f	file:
M183IRQCounter	fceux-am/src/boards/183.cpp	/^static void M183IRQCounter(void) {$/;"	f	file:
M183Power	fceux-am/src/boards/183.cpp	/^static void M183Power(void) {$/;"	f	file:
M184Sync	fceux-am/src/boards/datalatch.cpp	/^static void M184Sync(void) {$/;"	f	file:
M186Close	fceux-am/src/boards/186.cpp	/^static void M186Close(void) {$/;"	f	file:
M186Power	fceux-am/src/boards/186.cpp	/^static void M186Power(void) {$/;"	f	file:
M186Restore	fceux-am/src/boards/186.cpp	/^static void M186Restore(int version) {$/;"	f	file:
M187CW	fceux-am/src/boards/187.cpp	/^static void M187CW(uint32 A, uint8 V) {$/;"	f	file:
M187PW	fceux-am/src/boards/187.cpp	/^static void M187PW(uint32 A, uint8 V) {$/;"	f	file:
M187Power	fceux-am/src/boards/187.cpp	/^static void M187Power(void) {$/;"	f	file:
M189PW	fceux-am/src/boards/189.cpp	/^static void M189PW(uint32 A, uint8 V) {$/;"	f	file:
M189Power	fceux-am/src/boards/189.cpp	/^static void M189Power(void) {$/;"	f	file:
M18Close	fceux-am/src/boards/18.cpp	/^static void M18Close(void)$/;"	f	file:
M18IRQHook	fceux-am/src/boards/18.cpp	/^static void M18IRQHook(int a) {$/;"	f	file:
M18Power	fceux-am/src/boards/18.cpp	/^static void M18Power(void) {$/;"	f	file:
M191CW	fceux-am/src/boards/mmc3.cpp	/^static void M191CW(uint32 A, uint8 V) {$/;"	f	file:
M192CW	fceux-am/src/boards/mmc3.cpp	/^static void M192CW(uint32 A, uint8 V) {$/;"	f	file:
M193Power	fceux-am/src/boards/193.cpp	/^static void M193Power(void) {$/;"	f	file:
M193Reset	fceux-am/src/boards/193.cpp	/^static void M193Reset(void) {$/;"	f	file:
M194CW	fceux-am/src/boards/mmc3.cpp	/^static void M194CW(uint32 A, uint8 V) {$/;"	f	file:
M195CW	fceux-am/src/boards/mmc3.cpp	/^static void M195CW(uint32 A, uint8 V) {$/;"	f	file:
M195Power	fceux-am/src/boards/mmc3.cpp	/^static void M195Power(void) {$/;"	f	file:
M196PW	fceux-am/src/boards/mmc3.cpp	/^static void M196PW(uint32 A, uint8 V) {$/;"	f	file:
M197CW	fceux-am/src/boards/mmc3.cpp	/^static void M197CW(uint32 A, uint8 V) {$/;"	f	file:
M198PW	fceux-am/src/boards/mmc3.cpp	/^static void M198PW(uint32 A, uint8 V) {$/;"	f	file:
M199CW	fceux-am/src/boards/199.cpp	/^static void M199CW(uint32 A, uint8 V) {$/;"	f	file:
M199Close	fceux-am/src/boards/199.cpp	/^static void M199Close(void) {$/;"	f	file:
M199MW	fceux-am/src/boards/199.cpp	/^static void M199MW(uint8 V) {$/;"	f	file:
M199PW	fceux-am/src/boards/199.cpp	/^static void M199PW(uint32 A, uint8 V) {$/;"	f	file:
M199Power	fceux-am/src/boards/199.cpp	/^static void M199Power(void) {$/;"	f	file:
M19SC	fceux-am/src/boards/n106.cpp	/^static void M19SC(void) {$/;"	f	file:
M200Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M200Sync(void) {$/;"	f	file:
M201Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M201Sync(void) {$/;"	f	file:
M202Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M202Sync(void) {$/;"	f	file:
M203Sync	fceux-am/src/boards/datalatch.cpp	/^static void M203Sync(void) {$/;"	f	file:
M204Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M204Sync(void) {$/;"	f	file:
M205CW	fceux-am/src/boards/mmc3.cpp	/^static void M205CW(uint32 A, uint8 V) {$/;"	f	file:
M205PW	fceux-am/src/boards/mmc3.cpp	/^static void M205PW(uint32 A, uint8 V) {$/;"	f	file:
M205Power	fceux-am/src/boards/mmc3.cpp	/^static void M205Power(void) {$/;"	f	file:
M205Reset	fceux-am/src/boards/mmc3.cpp	/^static void M205Reset(void) {$/;"	f	file:
M206Power	fceux-am/src/boards/206.cpp	/^static void M206Power(void) {$/;"	f	file:
M207Power	fceux-am/src/boards/80.cpp	/^static void M207Power(void) {$/;"	f	file:
M208PW	fceux-am/src/boards/208.cpp	/^static void M208PW(uint32 A, uint8 V) {$/;"	f	file:
M208Power	fceux-am/src/boards/208.cpp	/^static void M208Power(void) {$/;"	f	file:
M212Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M212Sync(void) {$/;"	f	file:
M213Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M213Sync(void) {$/;"	f	file:
M214Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M214Sync(void) {$/;"	f	file:
M217Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M217Sync(void) {$/;"	f	file:
M222IRQ	fceux-am/src/boards/222.cpp	/^static void M222IRQ(void) {$/;"	f	file:
M222Power	fceux-am/src/boards/222.cpp	/^static void M222Power(void) {$/;"	f	file:
M225Power	fceux-am/src/boards/225.cpp	/^static void M225Power(void) {$/;"	f	file:
M225Reset	fceux-am/src/boards/225.cpp	/^static void M225Reset(void) {$/;"	f	file:
M226Power	fceux-am/src/boards/bmc42in1r.cpp	/^static void M226Power(void) {$/;"	f	file:
M227Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M227Sync(void) {$/;"	f	file:
M228Power	fceux-am/src/boards/228.cpp	/^static void M228Power(void) {$/;"	f	file:
M228Reset	fceux-am/src/boards/228.cpp	/^static void M228Reset(void) {$/;"	f	file:
M229Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M229Sync(void) {$/;"	f	file:
M230Power	fceux-am/src/boards/230.cpp	/^static void M230Power(void) {$/;"	f	file:
M230Reset	fceux-am/src/boards/230.cpp	/^static void M230Reset(void) {$/;"	f	file:
M231Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M231Sync(void) {$/;"	f	file:
M232Power	fceux-am/src/boards/232.cpp	/^static void M232Power(void) {$/;"	f	file:
M233Reset	fceux-am/src/boards/bmc42in1r.cpp	/^static void M233Reset(void) {$/;"	f	file:
M234Power	fceux-am/src/boards/234.cpp	/^static void M234Power(void) {$/;"	f	file:
M234Reset	fceux-am/src/boards/234.cpp	/^static void M234Reset(void) {$/;"	f	file:
M235Power	fceux-am/src/boards/235.cpp	/^static void M235Power(void) {$/;"	f	file:
M235Restore	fceux-am/src/boards/235.cpp	/^static void M235Restore(int version) {$/;"	f	file:
M240Sync	fceux-am/src/boards/datalatch.cpp	/^static void M240Sync(void) {$/;"	f	file:
M241Sync	fceux-am/src/boards/datalatch.cpp	/^static void M241Sync(void) {$/;"	f	file:
M242Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M242Sync(void) {$/;"	f	file:
M244Power	fceux-am/src/boards/244.cpp	/^static void M244Power(void) {$/;"	f	file:
M245CW	fceux-am/src/boards/mmc3.cpp	/^static void M245CW(uint32 A, uint8 V) {$/;"	f	file:
M245PW	fceux-am/src/boards/mmc3.cpp	/^static void M245PW(uint32 A, uint8 V) {$/;"	f	file:
M245Power	fceux-am/src/boards/mmc3.cpp	/^static void M245Power(void) {$/;"	f	file:
M246Close	fceux-am/src/boards/246.cpp	/^static void M246Close(void)$/;"	f	file:
M246Power	fceux-am/src/boards/246.cpp	/^static void M246Power(void) {$/;"	f	file:
M249CW	fceux-am/src/boards/mmc3.cpp	/^static void M249CW(uint32 A, uint8 V) {$/;"	f	file:
M249PW	fceux-am/src/boards/mmc3.cpp	/^static void M249PW(uint32 A, uint8 V) {$/;"	f	file:
M249Power	fceux-am/src/boards/mmc3.cpp	/^static void M249Power(void) {$/;"	f	file:
M250_Power	fceux-am/src/boards/mmc3.cpp	/^static void M250_Power(void) {$/;"	f	file:
M252Close	fceux-am/src/boards/252.cpp	/^static void M252Close(void) {$/;"	f	file:
M252IRQ	fceux-am/src/boards/252.cpp	/^static void M252IRQ(int a) {$/;"	f	file:
M252Power	fceux-am/src/boards/252.cpp	/^static void M252Power(void) {$/;"	f	file:
M253Close	fceux-am/src/boards/253.cpp	/^static void M253Close(void) {$/;"	f	file:
M253IRQ	fceux-am/src/boards/253.cpp	/^static void M253IRQ(int a) {$/;"	f	file:
M253Power	fceux-am/src/boards/253.cpp	/^static void M253Power(void) {$/;"	f	file:
M254_Power	fceux-am/src/boards/mmc3.cpp	/^static void M254_Power(void) {$/;"	f	file:
M28Close	fceux-am/src/boards/28.cpp	/^static void M28Close(void)$/;"	f	file:
M28Power	fceux-am/src/boards/28.cpp	/^static void M28Power(void)$/;"	f	file:
M28Reset	fceux-am/src/boards/28.cpp	/^static void M28Reset(void)$/;"	f	file:
M29Sync	fceux-am/src/boards/datalatch.cpp	/^static void M29Sync() {$/;"	f	file:
M31Power	fceux-am/src/boards/inlnsf.cpp	/^static void M31Power(void) {$/;"	f	file:
M32Close	fceux-am/src/boards/32.cpp	/^static void M32Close(void)$/;"	f	file:
M32Power	fceux-am/src/boards/32.cpp	/^static void M32Power(void) {$/;"	f	file:
M33Power	fceux-am/src/boards/33.cpp	/^static void M33Power(void) {$/;"	f	file:
M34Close	fceux-am/src/boards/34.cpp	/^static void M34Close(void) {$/;"	f	file:
M34Power	fceux-am/src/boards/34.cpp	/^static void M34Power(void) {$/;"	f	file:
M36Power	fceux-am/src/boards/36.cpp	/^static void M36Power(void) {$/;"	f	file:
M36Restore	fceux-am/src/boards/36.cpp	/^static void M36Restore(int version) {$/;"	f	file:
M37CW	fceux-am/src/boards/mmc3.cpp	/^static void M37CW(uint32 A, uint8 V) {$/;"	f	file:
M37PW	fceux-am/src/boards/mmc3.cpp	/^static void M37PW(uint32 A, uint8 V) {$/;"	f	file:
M37Power	fceux-am/src/boards/mmc3.cpp	/^static void M37Power(void) {$/;"	f	file:
M37Reset	fceux-am/src/boards/mmc3.cpp	/^static void M37Reset(void) {$/;"	f	file:
M38Sync	fceux-am/src/boards/datalatch.cpp	/^static void M38Sync(void) {$/;"	f	file:
M40IRQHook	fceux-am/src/boards/40.cpp	/^static void M40IRQHook(int a) {$/;"	f	file:
M40Power	fceux-am/src/boards/40.cpp	/^static void M40Power(void) {$/;"	f	file:
M40Reset	fceux-am/src/boards/40.cpp	/^static void M40Reset(void) {$/;"	f	file:
M41Power	fceux-am/src/boards/41.cpp	/^static void M41Power(void) {$/;"	f	file:
M42IRQHook	fceux-am/src/boards/42.cpp	/^static void M42IRQHook(int a) {$/;"	f	file:
M42Power	fceux-am/src/boards/42.cpp	/^static void M42Power(void) {$/;"	f	file:
M43IRQHook	fceux-am/src/boards/43.cpp	/^static void M43IRQHook(int a) {$/;"	f	file:
M43Power	fceux-am/src/boards/43.cpp	/^static void M43Power(void) {$/;"	f	file:
M43Reset	fceux-am/src/boards/43.cpp	/^static void M43Reset(void) {$/;"	f	file:
M44CW	fceux-am/src/boards/mmc3.cpp	/^static void M44CW(uint32 A, uint8 V) {$/;"	f	file:
M44PW	fceux-am/src/boards/mmc3.cpp	/^static void M44PW(uint32 A, uint8 V) {$/;"	f	file:
M44Power	fceux-am/src/boards/mmc3.cpp	/^static void M44Power(void) {$/;"	f	file:
M45CW	fceux-am/src/boards/mmc3.cpp	/^static void M45CW(uint32 A, uint8 V) {$/;"	f	file:
M45PW	fceux-am/src/boards/mmc3.cpp	/^static void M45PW(uint32 A, uint8 V) {$/;"	f	file:
M45Power	fceux-am/src/boards/mmc3.cpp	/^static void M45Power(void) {$/;"	f	file:
M45Reset	fceux-am/src/boards/mmc3.cpp	/^static void M45Reset(void) {$/;"	f	file:
M46Power	fceux-am/src/boards/46.cpp	/^static void M46Power(void) {$/;"	f	file:
M46Reset	fceux-am/src/boards/46.cpp	/^static void M46Reset(void) {$/;"	f	file:
M47CW	fceux-am/src/boards/mmc3.cpp	/^static void M47CW(uint32 A, uint8 V) {$/;"	f	file:
M47PW	fceux-am/src/boards/mmc3.cpp	/^static void M47PW(uint32 A, uint8 V) {$/;"	f	file:
M47Power	fceux-am/src/boards/mmc3.cpp	/^static void M47Power(void) {$/;"	f	file:
M48IRQ	fceux-am/src/boards/33.cpp	/^static void M48IRQ(void) {$/;"	f	file:
M48Power	fceux-am/src/boards/33.cpp	/^static void M48Power(void) {$/;"	f	file:
M49CW	fceux-am/src/boards/mmc3.cpp	/^static void M49CW(uint32 A, uint8 V) {$/;"	f	file:
M49PW	fceux-am/src/boards/mmc3.cpp	/^static void M49PW(uint32 A, uint8 V) {$/;"	f	file:
M49Power	fceux-am/src/boards/mmc3.cpp	/^static void M49Power(void) {$/;"	f	file:
M49Reset	fceux-am/src/boards/mmc3.cpp	/^static void M49Reset(void) {$/;"	f	file:
M4Power	fceux-am/src/boards/mmc3.cpp	/^static void M4Power(void) {$/;"	f	file:
M50IRQHook	fceux-am/src/boards/50.cpp	/^static void M50IRQHook(int a) {$/;"	f	file:
M50Power	fceux-am/src/boards/50.cpp	/^static void M50Power(void) {$/;"	f	file:
M50Reset	fceux-am/src/boards/50.cpp	/^static void M50Reset(void) {$/;"	f	file:
M51Power	fceux-am/src/boards/51.cpp	/^static void M51Power(void) {$/;"	f	file:
M51Reset	fceux-am/src/boards/51.cpp	/^static void M51Reset(void) {$/;"	f	file:
M52CW	fceux-am/src/boards/mmc3.cpp	/^static void M52CW(uint32 A, uint8 V) {$/;"	f	file:
M52PW	fceux-am/src/boards/mmc3.cpp	/^static void M52PW(uint32 A, uint8 V) {$/;"	f	file:
M52Power	fceux-am/src/boards/mmc3.cpp	/^static void M52Power(void) {$/;"	f	file:
M52Reset	fceux-am/src/boards/mmc3.cpp	/^static void M52Reset(void) {$/;"	f	file:
M57Power	fceux-am/src/boards/57.cpp	/^static void M57Power(void) {$/;"	f	file:
M57Reset	fceux-am/src/boards/57.cpp	/^static void M57Reset() {$/;"	f	file:
M59Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M59Sync(void) {$/;"	f	file:
M61Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M61Sync(void) {$/;"	f	file:
M62Power	fceux-am/src/boards/62.cpp	/^static void M62Power(void) {$/;"	f	file:
M62Reset	fceux-am/src/boards/62.cpp	/^static void M62Reset(void) {$/;"	f	file:
M64HBHook	fceux-am/src/boards/tengen.cpp	/^static void M64HBHook(void) {$/;"	f	file:
M64IRQHook	fceux-am/src/boards/tengen.cpp	/^static void M64IRQHook(int a) {$/;"	f	file:
M64Power	fceux-am/src/boards/tengen.cpp	/^static void M64Power(void) {$/;"	f	file:
M65IRQ	fceux-am/src/boards/65.cpp	/^void  M65IRQ(int a) {$/;"	f
M65Power	fceux-am/src/boards/65.cpp	/^static void M65Power(void) {$/;"	f	file:
M67IRQ	fceux-am/src/boards/67.cpp	/^void M67IRQ(int a) {$/;"	f
M67Power	fceux-am/src/boards/67.cpp	/^static void M67Power(void) {$/;"	f	file:
M68Close	fceux-am/src/boards/68.cpp	/^static void M68Close(void) {$/;"	f	file:
M68NTfix	fceux-am/src/boards/68.cpp	/^static void M68NTfix(void) {$/;"	f	file:
M68Power	fceux-am/src/boards/68.cpp	/^static void M68Power(void) {$/;"	f	file:
M69Close	fceux-am/src/boards/69.cpp	/^static void M69Close(void) {$/;"	f	file:
M69IRQHook	fceux-am/src/boards/69.cpp	/^static void M69IRQHook(int a) {$/;"	f	file:
M69Power	fceux-am/src/boards/69.cpp	/^static void M69Power(void) {$/;"	f	file:
M70Sync	fceux-am/src/boards/datalatch.cpp	/^static void M70Sync() {$/;"	f	file:
M71Power	fceux-am/src/boards/71.cpp	/^static void M71Power(void) {$/;"	f	file:
M72Power	fceux-am/src/boards/72.cpp	/^static void M72Power(void) {$/;"	f	file:
M73Close	fceux-am/src/boards/vrc3.cpp	/^static void M73Close(void)$/;"	f	file:
M73IRQHook	fceux-am/src/boards/vrc3.cpp	/^static void M73IRQHook(int a) {$/;"	f	file:
M73Power	fceux-am/src/boards/vrc3.cpp	/^static void M73Power(void) {$/;"	f	file:
M74CW	fceux-am/src/boards/mmc3.cpp	/^static void M74CW(uint32 A, uint8 V) {$/;"	f	file:
M75Power	fceux-am/src/boards/vrc1.cpp	/^static void M75Power(void) {$/;"	f	file:
M76CW	fceux-am/src/boards/mmc3.cpp	/^static void M76CW(uint32 A, uint8 V) {$/;"	f	file:
M77Close	fceux-am/src/boards/77.cpp	/^static void M77Close(void)$/;"	f	file:
M77Power	fceux-am/src/boards/77.cpp	/^static void M77Power(void) {$/;"	f	file:
M78Sync	fceux-am/src/boards/datalatch.cpp	/^static void M78Sync() {$/;"	f	file:
M79Power	fceux-am/src/boards/79.cpp	/^static void M79Power(void) {$/;"	f	file:
M80Power	fceux-am/src/boards/80.cpp	/^static void M80Power(void) {$/;"	f	file:
M82Close	fceux-am/src/boards/82.cpp	/^static void M82Close(void) {$/;"	f	file:
M82Power	fceux-am/src/boards/82.cpp	/^static void M82Power(void) {$/;"	f	file:
M83Close	fceux-am/src/boards/yoko.cpp	/^static void M83Close(void) {$/;"	f	file:
M83Power	fceux-am/src/boards/yoko.cpp	/^static void M83Power(void) {$/;"	f	file:
M83Reset	fceux-am/src/boards/yoko.cpp	/^static void M83Reset(void) {$/;"	f	file:
M83StateRestore	fceux-am/src/boards/yoko.cpp	/^static void M83StateRestore(int version) {$/;"	f	file:
M83Sync	fceux-am/src/boards/yoko.cpp	/^static void M83Sync(void) {$/;"	f	file:
M86Sync	fceux-am/src/boards/datalatch.cpp	/^static void M86Sync(void) {$/;"	f	file:
M87Sync	fceux-am/src/boards/datalatch.cpp	/^static void M87Sync(void) {$/;"	f	file:
M88Power	fceux-am/src/boards/88.cpp	/^static void M88Power(void) {$/;"	f	file:
M89Sync	fceux-am/src/boards/datalatch.cpp	/^static void M89Sync(void) {$/;"	f	file:
M8Sync	fceux-am/src/boards/datalatch.cpp	/^static void M8Sync() {$/;"	f	file:
M90PPU	fceux-am/src/boards/90.cpp	/^static void M90PPU(uint32 A)$/;"	f	file:
M90Power	fceux-am/src/boards/90.cpp	/^static void M90Power(void)$/;"	f	file:
M90Restore	fceux-am/src/boards/90.cpp	/^static void M90Restore(int version)$/;"	f	file:
M91IRQHook	fceux-am/src/boards/91.cpp	/^static void M91IRQHook(void) {$/;"	f	file:
M91Power	fceux-am/src/boards/91.cpp	/^static void M91Power(void) {$/;"	f	file:
M92Sync	fceux-am/src/boards/addrlatch.cpp	/^static void M92Sync(void) {$/;"	f	file:
M94Sync	fceux-am/src/boards/datalatch.cpp	/^static void M94Sync(void) {$/;"	f	file:
M95Power	fceux-am/src/boards/80.cpp	/^static void M95Power(void) {$/;"	f	file:
M96Hook	fceux-am/src/boards/96.cpp	/^static void M96Hook(uint32 A) {$/;"	f	file:
M96Power	fceux-am/src/boards/96.cpp	/^static void M96Power(void) {$/;"	f	file:
M97Sync	fceux-am/src/boards/datalatch.cpp	/^static void M97Sync(void) {$/;"	f	file:
M99Close	fceux-am/src/boards/99.cpp	/^static void M99Close(void)$/;"	f	file:
M99Power	fceux-am/src/boards/99.cpp	/^static void M99Power(void) {$/;"	f	file:
MAHJONG_NUM_BUTTONS	fceux-am/src/drivers/sdl/main.h	75;"	d
MAINARGS	abstract-machine/am/src/nemu/trm.c	9;"	d	file:
MAINARG_ADDR	abstract-machine/am/src/x86.h	96;"	d
MAKECMDGOALS	abstract-machine/Makefile	/^  MAKECMDGOALS  = image$/;"	m
MALEEPower	fceux-am/src/boards/malee.cpp	/^static void MALEEPower(void) {$/;"	f	file:
MALEE_Init	fceux-am/src/boards/malee.cpp	/^void MALEE_Init(CartInfo *info) {$/;"	f
MAP	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define MAP(c, f) c(f)$/;"	d
MAP	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define MAP(c, f) c(f)$/;"	d
MAP	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define MAP(c, f) c(f)$/;"	d
MAP	nemu/include/macro.h	13;"	d
MAP	nemu/src/device/keyboard.c	/^  MAP(_KEYS, _KEY_NAME)$/;"	e	enum:__anon50	file:
MASKED	abstract-machine/am/src/x86/qemu/ioe.c	375;"	d	file:
MAXBUTTCONFIG	fceux-am/src/drivers/sdl/input.h	4;"	d
MAX_CPU	abstract-machine/am/src/native/platform.c	9;"	d	file:
MAX_CPU	abstract-machine/am/src/x86.h	94;"	d
MAX_HANDLER	nemu/src/device/alarm.c	6;"	d	file:
MAX_INSTR_TO_PRINT	nemu/src/monitor/cpu-exec.c	12;"	d	file:
MAX_MOVIEFILENAME_LEN	fceux-am/src/file.h	4;"	d
MBS5Power	fceux-am/src/boards/bs-5.cpp	/^static void MBS5Power(void) {$/;"	f	file:
MBS5Reset	fceux-am/src/boards/bs-5.cpp	/^static void MBS5Reset(void) {$/;"	f	file:
MClose	fceux-am/src/boards/185.cpp	/^static void MClose(void) {$/;"	f	file:
MD5	fceux-am/src/cart.h	/^	uint8 MD5[16];$/;"	m	struct:__anon37
MD5	fceux-am/src/git.h	/^	MD5DATA MD5;$/;"	m	struct:FCEUGI
MD5DATA	fceux-am/src/utils/md5.h	/^typedef ValueArray<uint8,16> MD5DATA;$/;"	t
MEM_RET_CROSS_PAGE	nemu/include/isa.h	/^enum { MEM_RET_OK, MEM_RET_NEED_TRANSLATE, MEM_RET_FAIL, MEM_RET_CROSS_PAGE };$/;"	e	enum:__anon69
MEM_RET_FAIL	nemu/include/isa.h	/^enum { MEM_RET_OK, MEM_RET_NEED_TRANSLATE, MEM_RET_FAIL, MEM_RET_CROSS_PAGE };$/;"	e	enum:__anon69
MEM_RET_NEED_TRANSLATE	nemu/include/isa.h	/^enum { MEM_RET_OK, MEM_RET_NEED_TRANSLATE, MEM_RET_FAIL, MEM_RET_CROSS_PAGE };$/;"	e	enum:__anon69
MEM_RET_OK	nemu/include/isa.h	/^enum { MEM_RET_OK, MEM_RET_NEED_TRANSLATE, MEM_RET_FAIL, MEM_RET_CROSS_PAGE };$/;"	e	enum:__anon69
MEM_TYPE_IFETCH	nemu/include/isa.h	/^enum { MEM_TYPE_IFETCH, MEM_TYPE_READ, MEM_TYPE_WRITE };$/;"	e	enum:__anon68
MEM_TYPE_READ	nemu/include/isa.h	/^enum { MEM_TYPE_IFETCH, MEM_TYPE_READ, MEM_TYPE_WRITE };$/;"	e	enum:__anon68
MEM_TYPE_WRITE	nemu/include/isa.h	/^enum { MEM_TYPE_IFETCH, MEM_TYPE_READ, MEM_TYPE_WRITE };$/;"	e	enum:__anon68
MExMirrPPU	fceux-am/src/boards/80.cpp	/^static void MExMirrPPU(uint32 A) {$/;"	f	file:
MHROMSync	fceux-am/src/boards/datalatch.cpp	/^static void MHROMSync(void) {$/;"	f	file:
MHROM_Init	fceux-am/src/boards/datalatch.cpp	/^void MHROM_Init(CartInfo *info) {$/;"	f
MINDKIDSPower	fceux-am/src/boards/coolboy.cpp	/^static void MINDKIDSPower(void) {$/;"	f	file:
MINDKIDS_Init	fceux-am/src/boards/coolboy.cpp	/^void MINDKIDS_Init(CartInfo *info) {$/;"	f
MIPS32_H__	abstract-machine/am/src/mips32.h	2;"	d
MI_0	fceux-am/src/cart.h	96;"	d
MI_1	fceux-am/src/cart.h	97;"	d
MI_H	fceux-am/src/cart.h	94;"	d
MI_V	fceux-am/src/cart.h	95;"	d
MK	fceux-am/src/drivers/sdl/input.cpp	152;"	d	file:
MK2	fceux-am/src/drivers/sdl/input.cpp	153;"	d	file:
MKFLAGS	nemu/Makefile	/^MKFLAGS = ISA=$(ISA) SHARE=1 ENGINE=interpreter$/;"	m
MKK	fceux-am/src/drivers/sdl/keyscan.h	3;"	d
MKK_COUNT	fceux-am/src/drivers/sdl/keyscan.h	4;"	d
MKZ	fceux-am/src/drivers/sdl/input.cpp	154;"	d	file:
ML	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
MMAP_NONE	abstract-machine/am/include/am.h	11;"	d
MMAP_READ	abstract-machine/am/include/am.h	12;"	d
MMAP_WRITE	abstract-machine/am/include/am.h	13;"	d
MMC1CHR	fceux-am/src/boards/mmc1.cpp	/^static void MMC1CHR(void) {$/;"	f	file:
MMC1CHRHook4	fceux-am/src/boards/mmc1.cpp	/^static void (*MMC1CHRHook4)(uint32 A, uint8 V);$/;"	v	file:
MMC1CMReset	fceux-am/src/boards/mmc1.cpp	/^static void MMC1CMReset(void) {$/;"	f	file:
MMC1MIRROR	fceux-am/src/boards/mmc1.cpp	/^static void MMC1MIRROR(void) {$/;"	f	file:
MMC1PRG	fceux-am/src/boards/mmc1.cpp	/^static void MMC1PRG(void) {$/;"	f	file:
MMC1PRGHook16	fceux-am/src/boards/mmc1.cpp	/^static void (*MMC1PRGHook16)(uint32 A, uint8 V);$/;"	v	file:
MMC1_Restore	fceux-am/src/boards/mmc1.cpp	/^static void MMC1_Restore(int version) {$/;"	f	file:
MMC2and4Close	fceux-am/src/boards/mmc2and4.cpp	/^static void MMC2and4Close(void)$/;"	f	file:
MMC2and4PPUHook	fceux-am/src/boards/mmc2and4.cpp	/^static void MMC2and4PPUHook(uint32 A) {$/;"	f	file:
MMC2and4Power	fceux-am/src/boards/mmc2and4.cpp	/^static void MMC2and4Power(void) {$/;"	f	file:
MMC3RegReset	fceux-am/src/boards/mmc3.cpp	/^void MMC3RegReset(void) {$/;"	f
MMC3_CMDWrite	fceux-am/src/boards/mmc3.h	/^DECLFW(MMC3_CMDWrite);$/;"	v
MMC3_IRQWrite	fceux-am/src/boards/mmc3.h	/^DECLFW(MMC3_IRQWrite);$/;"	v
MMC3_StateRegs	fceux-am/src/boards/mmc3.cpp	/^static SFORMAT MMC3_StateRegs[] =$/;"	v	file:
MMC3_cmd	fceux-am/src/boards/mmc3.cpp	/^uint8 MMC3_cmd;$/;"	v
MMC3_hb	fceux-am/src/boards/mmc3.cpp	/^static void MMC3_hb(void) {$/;"	f	file:
MMC3_hb_KickMasterHack	fceux-am/src/boards/mmc3.cpp	/^static void MMC3_hb_KickMasterHack(void) {$/;"	f	file:
MMC3_hb_PALStarWarsHack	fceux-am/src/boards/mmc3.cpp	/^static void MMC3_hb_PALStarWarsHack(void) {$/;"	f	file:
MMC50x5130	fceux-am/src/ppu.cpp	/^uint8 MMC50x5130 = 0;$/;"	v
MMC5APU	fceux-am/src/boards/mmc5.cpp	/^} MMC5APU;$/;"	t	typeref:struct:__anon39	file:
MMC5BGVPage	fceux-am/src/cart.cpp	/^uint8 *MMC5BGVPage[8];$/;"	v
MMC5BGVRAMADR	fceux-am/src/boards/mmc5.cpp	/^uint8* MMC5BGVRAMADR(uint32 A)$/;"	f
MMC5BGVROM_BANK1	fceux-am/src/boards/mmc5.cpp	/^static INLINE void MMC5BGVROM_BANK1(uint32 A, uint32 V) {$/;"	f	file:
MMC5BGVROM_BANK2	fceux-am/src/boards/mmc5.cpp	/^static INLINE void MMC5BGVROM_BANK2(uint32 A, uint32 V) {$/;"	f	file:
MMC5BGVROM_BANK4	fceux-am/src/boards/mmc5.cpp	/^static INLINE void MMC5BGVROM_BANK4(uint32 A, uint32 V) {$/;"	f	file:
MMC5BGVROM_BANK8	fceux-am/src/boards/mmc5.cpp	/^static INLINE void MMC5BGVROM_BANK8(uint32 V) {$/;"	f	file:
MMC5CHRA	fceux-am/src/boards/mmc5.cpp	/^static void MMC5CHRA(void) {$/;"	f	file:
MMC5CHRB	fceux-am/src/boards/mmc5.cpp	/^static void MMC5CHRB(void) {$/;"	f	file:
MMC5CartList	fceux-am/src/boards/mmc5.cpp	/^cartdata MMC5CartList[] =$/;"	v
MMC5Hack	fceux-am/src/ppu.cpp	/^int MMC5Hack = 0;$/;"	v
MMC5HackCHRMode	fceux-am/src/ppu.cpp	/^uint8 MMC5HackCHRMode = 0;$/;"	v
MMC5HackExNTARAMPtr	fceux-am/src/ppu.cpp	/^uint8 *MMC5HackExNTARAMPtr = 0;$/;"	v
MMC5HackSPMode	fceux-am/src/ppu.cpp	/^uint8 MMC5HackSPMode = 0;$/;"	v
MMC5HackSPPage	fceux-am/src/ppu.cpp	/^uint8 MMC5HackSPPage = 0;$/;"	v
MMC5HackSPScroll	fceux-am/src/ppu.cpp	/^uint8 MMC5HackSPScroll = 0;$/;"	v
MMC5HackVROMMask	fceux-am/src/ppu.cpp	/^uint32 MMC5HackVROMMask = 0;$/;"	v
MMC5HackVROMPTR	fceux-am/src/ppu.cpp	/^uint8 *MMC5HackVROMPTR = 0;$/;"	v
MMC5HiSync	fceux-am/src/boards/mmc5.cpp	/^void MMC5HiSync(int32 ts) {$/;"	f
MMC5IRQR	fceux-am/src/boards/mmc5.cpp	/^static uint8 MMC5IRQR;$/;"	v	file:
MMC5LineCounter	fceux-am/src/boards/mmc5.cpp	/^static uint8 MMC5LineCounter;$/;"	v	file:
MMC5MemIn	fceux-am/src/boards/mmc5.cpp	/^static uint8 MMC5MemIn[5];$/;"	v	file:
MMC5PRG	fceux-am/src/boards/mmc5.cpp	/^static void MMC5PRG(void) {$/;"	f	file:
MMC5ROMWrProtect	fceux-am/src/boards/mmc5.cpp	/^static uint8 MMC5ROMWrProtect[4];$/;"	v	file:
MMC5RunSound	fceux-am/src/boards/mmc5.cpp	/^void MMC5RunSound(int Count) {$/;"	f
MMC5RunSoundHQ	fceux-am/src/boards/mmc5.cpp	/^void MMC5RunSoundHQ(void) {$/;"	f
MMC5SPRVPage	fceux-am/src/cart.cpp	/^uint8 *MMC5SPRVPage[8];$/;"	v
MMC5SPRVRAMADR	fceux-am/src/boards/mmc5.cpp	118;"	d	file:
MMC5SPRVRAMADR	fceux-am/src/ppu.cpp	401;"	d	file:
MMC5SPRVROM_BANK1	fceux-am/src/boards/mmc5.cpp	/^static INLINE void MMC5SPRVROM_BANK1(uint32 A, uint32 V) {$/;"	f	file:
MMC5SPRVROM_BANK2	fceux-am/src/boards/mmc5.cpp	/^static INLINE void MMC5SPRVROM_BANK2(uint32 A, uint32 V) {$/;"	f	file:
MMC5SPRVROM_BANK4	fceux-am/src/boards/mmc5.cpp	/^static INLINE void MMC5SPRVROM_BANK4(uint32 A, uint32 V) {$/;"	f	file:
MMC5SPRVROM_BANK8	fceux-am/src/boards/mmc5.cpp	/^static INLINE void MMC5SPRVROM_BANK8(uint32 V) {$/;"	f	file:
MMC5Sound	fceux-am/src/boards/mmc5.cpp	/^static MMC5APU MMC5Sound;$/;"	v	file:
MMC5Synco	fceux-am/src/boards/mmc5.cpp	/^void MMC5Synco(void) {$/;"	f
MMC5WRAM	fceux-am/src/boards/mmc5.cpp	/^static void MMC5WRAM(uint32 A, uint32 V) {$/;"	f	file:
MMC5WRAMIndex	fceux-am/src/boards/mmc5.cpp	/^static uint8 MMC5WRAMIndex[MMC5WRAMMAX]; \/\/configuration, not state$/;"	v	file:
MMC5WRAMMAX	fceux-am/src/boards/mmc5.cpp	/^const int MMC5WRAMMAX = 1<<7; \/\/ 7 bits in register interface (real MMC5 has only 4 pins, however)$/;"	v
MMC5WRAMsize	fceux-am/src/boards/mmc5.cpp	/^static uint8 MMC5WRAMsize; \/\/configuration, not state$/;"	v	file:
MMC5_NOCARTS	fceux-am/src/boards/mmc5.cpp	304;"	d	file:
MMC5_StateRegs	fceux-am/src/boards/mmc5.cpp	/^static SFORMAT MMC5_StateRegs[] = {$/;"	v	file:
MMC5_StateRestore	fceux-am/src/boards/mmc5.cpp	/^void MMC5_StateRestore(int version) {$/;"	f
MMC5_hb	fceux-am/src/boards/mmc5.cpp	/^void MMC5_hb(int scanline) {$/;"	f
MMC5fill	fceux-am/src/boards/mmc5.cpp	/^static uint8 *MMC5fill = NULL;$/;"	v	file:
MOD	fceux-am/src/boards/emu2413.c	154;"	d	file:
MPConf	abstract-machine/am/src/x86.h	/^} MPConf;$/;"	t	typeref:struct:__anon6
MPDesc	abstract-machine/am/src/x86.h	/^} MPDesc;$/;"	t	typeref:struct:__anon7
MPower	fceux-am/src/boards/185.cpp	/^static void MPower(void) {$/;"	f	file:
MRestore	fceux-am/src/boards/185.cpp	/^static void MRestore(int version) {$/;"	f	file:
MSG	abstract-machine/am/src/x86/qemu/cte.c	46;"	d	file:
MSHCW	fceux-am/src/boards/sheroes.cpp	/^static void MSHCW(uint32 A, uint8 V) {$/;"	f	file:
MSHClose	fceux-am/src/boards/sheroes.cpp	/^static void MSHClose(void) {$/;"	f	file:
MSHPower	fceux-am/src/boards/sheroes.cpp	/^static void MSHPower(void) {$/;"	f	file:
MSHReset	fceux-am/src/boards/sheroes.cpp	/^static void MSHReset(void) {$/;"	f	file:
MSync	fceux-am/src/boards/88.cpp	/^static void MSync(void) {$/;"	f	file:
M_PI	fceux-am/src/palette.cpp	32;"	d	file:
MakeFilters	fceux-am/src/filter.cpp	/^void MakeFilters(int32 rate)$/;"	f
MapIRQHook	fceux-am/src/x6502.cpp	/^void (*MapIRQHook)(int a);$/;"	v
Mapper101_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper101_Init(CartInfo *info) {$/;"	f
Mapper103_Init	fceux-am/src/boards/103.cpp	/^void Mapper103_Init(CartInfo *info) {$/;"	f
Mapper105_Init	fceux-am/src/boards/mmc1.cpp	/^void Mapper105_Init(CartInfo *info) {$/;"	f
Mapper106_Init	fceux-am/src/boards/106.cpp	/^void Mapper106_Init(CartInfo *info) {$/;"	f
Mapper107_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper107_Init(CartInfo *info) {$/;"	f
Mapper108_Init	fceux-am/src/boards/108.cpp	/^void Mapper108_Init(CartInfo *info) {$/;"	f
Mapper10_Init	fceux-am/src/boards/mmc2and4.cpp	/^void Mapper10_Init(CartInfo *info) {$/;"	f
Mapper111_Init	fceux-am/src/boards/cheapocabra.cpp	/^void Mapper111_Init(CartInfo *info) {$/;"	f
Mapper112_Init	fceux-am/src/boards/112.cpp	/^void Mapper112_Init(CartInfo *info) {$/;"	f
Mapper113_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper113_Init(CartInfo *info) {$/;"	f
Mapper114_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper114_Init(CartInfo *info) {$/;"	f
Mapper115_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper115_Init(CartInfo *info) {$/;"	f
Mapper117_Init	fceux-am/src/boards/117.cpp	/^void Mapper117_Init(CartInfo *info) {$/;"	f
Mapper119_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper119_Init(CartInfo *info) {$/;"	f
Mapper11_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper11_Init(CartInfo *info) {$/;"	f
Mapper120_Init	fceux-am/src/boards/120.cpp	/^void Mapper120_Init(CartInfo *info) {$/;"	f
Mapper121_Init	fceux-am/src/boards/121.cpp	/^void Mapper121_Init(CartInfo *info) {$/;"	f
Mapper12_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper12_Init(CartInfo *info) {$/;"	f
Mapper134_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper134_Init(CartInfo *info) {$/;"	f
Mapper140_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper140_Init(CartInfo *info) {$/;"	f
Mapper144_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper144_Init(CartInfo *info) {$/;"	f
Mapper151_Init	fceux-am/src/boards/151.cpp	/^void Mapper151_Init(CartInfo *info) {$/;"	f
Mapper152_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper152_Init(CartInfo *info) {$/;"	f
Mapper153_Init	fceux-am/src/boards/bandai.cpp	/^void Mapper153_Init(CartInfo *info) {$/;"	f
Mapper154_Init	fceux-am/src/boards/88.cpp	/^void Mapper154_Init(CartInfo *info) {$/;"	f
Mapper155_Init	fceux-am/src/boards/mmc1.cpp	/^void Mapper155_Init(CartInfo *info) {$/;"	f
Mapper156_Init	fceux-am/src/boards/156.cpp	/^void Mapper156_Init(CartInfo *info) {$/;"	f
Mapper157_Init	fceux-am/src/boards/bandai.cpp	/^void Mapper157_Init(CartInfo *info) {$/;"	f
Mapper159_Init	fceux-am/src/boards/bandai.cpp	/^void Mapper159_Init(CartInfo *info) {$/;"	f
Mapper15_Init	fceux-am/src/boards/15.cpp	/^void Mapper15_Init(CartInfo *info) {$/;"	f
Mapper163_Init	fceux-am/src/boards/164.cpp	/^void Mapper163_Init(CartInfo *info) {$/;"	f
Mapper164_Init	fceux-am/src/boards/164.cpp	/^void Mapper164_Init(CartInfo *info) {$/;"	f
Mapper165_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper165_Init(CartInfo *info) {$/;"	f
Mapper166_Init	fceux-am/src/boards/subor.cpp	/^void Mapper166_Init(CartInfo *info) {$/;"	f
Mapper167_Init	fceux-am/src/boards/subor.cpp	/^void Mapper167_Init(CartInfo *info) {$/;"	f
Mapper168_Init	fceux-am/src/boards/168.cpp	/^void Mapper168_Init(CartInfo *info) {$/;"	f
Mapper16_Init	fceux-am/src/boards/bandai.cpp	/^void Mapper16_Init(CartInfo *info) {$/;"	f
Mapper170_Init	fceux-am/src/boards/170.cpp	/^void Mapper170_Init(CartInfo *info) {$/;"	f
Mapper171_Init	fceux-am/src/boards/mmc1.cpp	/^void Mapper171_Init(CartInfo *info) {$/;"	f
Mapper172_Init	fceux-am/src/boards/01-222.cpp	/^void Mapper172_Init(CartInfo *info) {$/;"	f
Mapper173_Init	fceux-am/src/boards/01-222.cpp	/^void Mapper173_Init(CartInfo *info) {$/;"	f
Mapper175_Init	fceux-am/src/boards/175.cpp	/^void Mapper175_Init(CartInfo *info) {$/;"	f
Mapper176_Init	fceux-am/src/boards/176.cpp	/^void Mapper176_Init(CartInfo *info)$/;"	f
Mapper177_Init	fceux-am/src/boards/177.cpp	/^void Mapper177_Init(CartInfo *info) {$/;"	f
Mapper178_Init	fceux-am/src/boards/178.cpp	/^void Mapper178_Init(CartInfo *info) {$/;"	f
Mapper17_Init	fceux-am/src/boards/ffe.cpp	/^void Mapper17_Init(CartInfo *info) {$/;"	f
Mapper180_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper180_Init(CartInfo *info) {$/;"	f
Mapper181_Init	fceux-am/src/boards/185.cpp	/^void Mapper181_Init(CartInfo *info) {$/;"	f
Mapper183_Init	fceux-am/src/boards/183.cpp	/^void Mapper183_Init(CartInfo *info) {$/;"	f
Mapper184_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper184_Init(CartInfo *info) {$/;"	f
Mapper185_Init	fceux-am/src/boards/185.cpp	/^void Mapper185_Init(CartInfo *info) {$/;"	f
Mapper186_Init	fceux-am/src/boards/186.cpp	/^void Mapper186_Init(CartInfo *info) {$/;"	f
Mapper187_Init	fceux-am/src/boards/187.cpp	/^void Mapper187_Init(CartInfo *info) {$/;"	f
Mapper188_Init	fceux-am/src/boards/karaoke.cpp	/^void Mapper188_Init(CartInfo *info) {$/;"	f
Mapper189_Init	fceux-am/src/boards/189.cpp	/^void Mapper189_Init(CartInfo *info) {$/;"	f
Mapper18_Init	fceux-am/src/boards/18.cpp	/^void Mapper18_Init(CartInfo *info) {$/;"	f
Mapper190_Close	fceux-am/src/boards/190.cpp	/^static void Mapper190_Close(void) {$/;"	f	file:
Mapper190_Init	fceux-am/src/boards/190.cpp	/^void Mapper190_Init(CartInfo *info) {$/;"	f
Mapper190_Power	fceux-am/src/boards/190.cpp	/^static void Mapper190_Power(void) {$/;"	f	file:
Mapper190_Restore	fceux-am/src/boards/190.cpp	/^static void Mapper190_Restore(int) {$/;"	f	file:
Mapper190_Sync	fceux-am/src/boards/190.cpp	/^static void Mapper190_Sync(void) {$/;"	f	file:
Mapper191_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper191_Init(CartInfo *info) {$/;"	f
Mapper192_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper192_Init(CartInfo *info) {$/;"	f
Mapper193_Init	fceux-am/src/boards/193.cpp	/^void Mapper193_Init(CartInfo *info) {$/;"	f
Mapper194_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper194_Init(CartInfo *info) {$/;"	f
Mapper195_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper195_Init(CartInfo *info) {$/;"	f
Mapper196Power	fceux-am/src/boards/mmc3.cpp	/^static void Mapper196Power(void) {$/;"	f	file:
Mapper196_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper196_Init(CartInfo *info) {$/;"	f
Mapper197_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper197_Init(CartInfo *info) {$/;"	f
Mapper198_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper198_Init(CartInfo *info) {$/;"	f
Mapper199_Init	fceux-am/src/boards/199.cpp	/^void Mapper199_Init(CartInfo *info) {$/;"	f
Mapper19_ESI	fceux-am/src/boards/n106.cpp	/^void Mapper19_ESI(void) {$/;"	f
Mapper19_Init	fceux-am/src/boards/n106.cpp	/^void Mapper19_Init(CartInfo *info) {$/;"	f
Mapper19_StateRestore	fceux-am/src/boards/n106.cpp	/^static void Mapper19_StateRestore(int version) {$/;"	f	file:
Mapper1_Init	fceux-am/src/boards/mmc1.cpp	/^void Mapper1_Init(CartInfo *info) {$/;"	f
Mapper200_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper200_Init(CartInfo *info) {$/;"	f
Mapper201_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper201_Init(CartInfo *info) {$/;"	f
Mapper202_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper202_Init(CartInfo *info) {$/;"	f
Mapper203_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper203_Init(CartInfo *info) {$/;"	f
Mapper204_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper204_Init(CartInfo *info) {$/;"	f
Mapper205_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper205_Init(CartInfo *info) {$/;"	f
Mapper206_Init	fceux-am/src/boards/206.cpp	/^void Mapper206_Init(CartInfo *info) {$/;"	f
Mapper207_Init	fceux-am/src/boards/80.cpp	/^void Mapper207_Init(CartInfo *info) {$/;"	f
Mapper208_Init	fceux-am/src/boards/208.cpp	/^void Mapper208_Init(CartInfo *info) {$/;"	f
Mapper209_Init	fceux-am/src/boards/90.cpp	/^void Mapper209_Init(CartInfo *info)$/;"	f
Mapper210_Init	fceux-am/src/boards/n106.cpp	/^void Mapper210_Init(CartInfo *info) {$/;"	f
Mapper210_StateRestore	fceux-am/src/boards/n106.cpp	/^static void Mapper210_StateRestore(int version) {$/;"	f	file:
Mapper211_Init	fceux-am/src/boards/90.cpp	/^void Mapper211_Init(CartInfo *info)$/;"	f
Mapper212_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper212_Init(CartInfo *info) {$/;"	f
Mapper213_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper213_Init(CartInfo *info) {$/;"	f
Mapper214_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper214_Init(CartInfo *info) {$/;"	f
Mapper216_Init	fceux-am/src/boards/bonza.cpp	/^void Mapper216_Init(CartInfo *info) {$/;"	f
Mapper217_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper217_Init(CartInfo *info) {$/;"	f
Mapper21_Init	fceux-am/src/boards/vrc2and4.cpp	/^void Mapper21_Init(CartInfo *info) {$/;"	f
Mapper222_Init	fceux-am/src/boards/222.cpp	/^void Mapper222_Init(CartInfo *info) {$/;"	f
Mapper225_Init	fceux-am/src/boards/225.cpp	/^void Mapper225_Init(CartInfo *info) {$/;"	f
Mapper226_Init	fceux-am/src/boards/bmc42in1r.cpp	/^void Mapper226_Init(CartInfo *info) {$/;"	f
Mapper227_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper227_Init(CartInfo *info) {$/;"	f
Mapper228_Init	fceux-am/src/boards/228.cpp	/^void Mapper228_Init(CartInfo *info) {$/;"	f
Mapper229_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper229_Init(CartInfo *info) {$/;"	f
Mapper22_Init	fceux-am/src/boards/vrc2and4.cpp	/^void Mapper22_Init(CartInfo *info) {$/;"	f
Mapper230_Init	fceux-am/src/boards/230.cpp	/^void Mapper230_Init(CartInfo *info) {$/;"	f
Mapper231_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper231_Init(CartInfo *info) {$/;"	f
Mapper232_Init	fceux-am/src/boards/232.cpp	/^void Mapper232_Init(CartInfo *info) {$/;"	f
Mapper233_Init	fceux-am/src/boards/bmc42in1r.cpp	/^void Mapper233_Init(CartInfo *info) {$/;"	f
Mapper234_Init	fceux-am/src/boards/234.cpp	/^void Mapper234_Init(CartInfo *info) {$/;"	f
Mapper235_Init	fceux-am/src/boards/235.cpp	/^void Mapper235_Init(CartInfo *info) {$/;"	f
Mapper23_Init	fceux-am/src/boards/vrc2and4.cpp	/^void Mapper23_Init(CartInfo *info) {$/;"	f
Mapper240_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper240_Init(CartInfo *info) {$/;"	f
Mapper241_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper241_Init(CartInfo *info) {$/;"	f
Mapper242_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper242_Init(CartInfo *info) {$/;"	f
Mapper244_Init	fceux-am/src/boards/244.cpp	/^void Mapper244_Init(CartInfo *info) {$/;"	f
Mapper245_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper245_Init(CartInfo *info) {$/;"	f
Mapper246_Init	fceux-am/src/boards/246.cpp	/^void Mapper246_Init(CartInfo *info) {$/;"	f
Mapper249_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper249_Init(CartInfo *info) {$/;"	f
Mapper24_Init	fceux-am/src/boards/vrc6.cpp	/^void Mapper24_Init(CartInfo *info) {$/;"	f
Mapper250_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper250_Init(CartInfo *info) {$/;"	f
Mapper252_Init	fceux-am/src/boards/252.cpp	/^void Mapper252_Init(CartInfo *info) {$/;"	f
Mapper253_Init	fceux-am/src/boards/253.cpp	/^void Mapper253_Init(CartInfo *info) {$/;"	f
Mapper254_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper254_Init(CartInfo *info) {$/;"	f
Mapper25_Init	fceux-am/src/boards/vrc2and4.cpp	/^void Mapper25_Init(CartInfo *info) {$/;"	f
Mapper26_Init	fceux-am/src/boards/vrc6.cpp	/^void Mapper26_Init(CartInfo *info) {$/;"	f
Mapper28_Init	fceux-am/src/boards/28.cpp	/^void Mapper28_Init(CartInfo* info)$/;"	f
Mapper29_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper29_Init(CartInfo *info) {$/;"	f
Mapper31_Init	fceux-am/src/boards/inlnsf.cpp	/^void Mapper31_Init(CartInfo *info) {$/;"	f
Mapper32_Init	fceux-am/src/boards/32.cpp	/^void Mapper32_Init(CartInfo *info) {$/;"	f
Mapper33_Init	fceux-am/src/boards/33.cpp	/^void Mapper33_Init(CartInfo *info) {$/;"	f
Mapper34_Init	fceux-am/src/boards/34.cpp	/^void Mapper34_Init(CartInfo *info) {$/;"	f
Mapper36_Init	fceux-am/src/boards/36.cpp	/^void Mapper36_Init(CartInfo *info) {$/;"	f
Mapper37_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper37_Init(CartInfo *info) {$/;"	f
Mapper38_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper38_Init(CartInfo *info) {$/;"	f
Mapper40_Init	fceux-am/src/boards/40.cpp	/^void Mapper40_Init(CartInfo *info) {$/;"	f
Mapper41_Init	fceux-am/src/boards/41.cpp	/^void Mapper41_Init(CartInfo *info) {$/;"	f
Mapper42_Init	fceux-am/src/boards/42.cpp	/^void Mapper42_Init(CartInfo *info) {$/;"	f
Mapper43_Init	fceux-am/src/boards/43.cpp	/^void Mapper43_Init(CartInfo *info) {$/;"	f
Mapper44_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper44_Init(CartInfo *info) {$/;"	f
Mapper45_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper45_Init(CartInfo *info) {$/;"	f
Mapper46_Init	fceux-am/src/boards/46.cpp	/^void Mapper46_Init(CartInfo *info) {$/;"	f
Mapper47_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper47_Init(CartInfo *info) {$/;"	f
Mapper48_Init	fceux-am/src/boards/33.cpp	/^void Mapper48_Init(CartInfo *info) {$/;"	f
Mapper49_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper49_Init(CartInfo *info) {$/;"	f
Mapper4_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper4_Init(CartInfo *info) {$/;"	f
Mapper50_Init	fceux-am/src/boards/50.cpp	/^void Mapper50_Init(CartInfo *info) {$/;"	f
Mapper51_Init	fceux-am/src/boards/51.cpp	/^void Mapper51_Init(CartInfo *info) {$/;"	f
Mapper52_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper52_Init(CartInfo *info) {$/;"	f
Mapper57_Init	fceux-am/src/boards/57.cpp	/^void Mapper57_Init(CartInfo *info) {$/;"	f
Mapper59_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper59_Init(CartInfo *info) {$/;"	f
Mapper5_ESI	fceux-am/src/boards/mmc5.cpp	/^void Mapper5_ESI(void) {$/;"	f
Mapper5_Init	fceux-am/src/boards/mmc5.cpp	/^void Mapper5_Init(CartInfo *info) {$/;"	f
Mapper61_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper61_Init(CartInfo *info) {$/;"	f
Mapper62_Init	fceux-am/src/boards/62.cpp	/^void Mapper62_Init(CartInfo *info) {$/;"	f
Mapper64_Init	fceux-am/src/boards/tengen.cpp	/^void Mapper64_Init(CartInfo *info) {$/;"	f
Mapper65_Init	fceux-am/src/boards/65.cpp	/^void Mapper65_Init(CartInfo *info) {$/;"	f
Mapper67_Init	fceux-am/src/boards/67.cpp	/^void Mapper67_Init(CartInfo *info) {$/;"	f
Mapper68_Init	fceux-am/src/boards/68.cpp	/^void Mapper68_Init(CartInfo *info) {$/;"	f
Mapper69_ESI	fceux-am/src/boards/69.cpp	/^void Mapper69_ESI(void) {$/;"	f
Mapper69_Init	fceux-am/src/boards/69.cpp	/^void Mapper69_Init(CartInfo *info) {$/;"	f
Mapper6_Init	fceux-am/src/boards/ffe.cpp	/^void Mapper6_Init(CartInfo *info) {$/;"	f
Mapper70_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper70_Init(CartInfo *info) {$/;"	f
Mapper71_Init	fceux-am/src/boards/71.cpp	/^void Mapper71_Init(CartInfo *info) {$/;"	f
Mapper72_Init	fceux-am/src/boards/72.cpp	/^void Mapper72_Init(CartInfo *info) {$/;"	f
Mapper73_Init	fceux-am/src/boards/vrc3.cpp	/^void Mapper73_Init(CartInfo *info) {$/;"	f
Mapper74_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper74_Init(CartInfo *info) {$/;"	f
Mapper75_Init	fceux-am/src/boards/vrc1.cpp	/^void Mapper75_Init(CartInfo *info) {$/;"	f
Mapper76_Init	fceux-am/src/boards/mmc3.cpp	/^void Mapper76_Init(CartInfo *info) {$/;"	f
Mapper77_Init	fceux-am/src/boards/77.cpp	/^void Mapper77_Init(CartInfo *info) {$/;"	f
Mapper78_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper78_Init(CartInfo *info) {$/;"	f
Mapper79_Init	fceux-am/src/boards/79.cpp	/^void Mapper79_Init(CartInfo *info) {$/;"	f
Mapper80_Init	fceux-am/src/boards/80.cpp	/^void Mapper80_Init(CartInfo *info) {$/;"	f
Mapper82_Init	fceux-am/src/boards/82.cpp	/^void Mapper82_Init(CartInfo *info) {$/;"	f
Mapper83_Init	fceux-am/src/boards/yoko.cpp	/^void Mapper83_Init(CartInfo *info) {$/;"	f
Mapper85_Init	fceux-am/src/boards/vrc7.cpp	/^void Mapper85_Init(CartInfo *info) {$/;"	f
Mapper86_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper86_Init(CartInfo *info) {$/;"	f
Mapper87_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper87_Init(CartInfo *info) {$/;"	f
Mapper88_Init	fceux-am/src/boards/88.cpp	/^void Mapper88_Init(CartInfo *info) {$/;"	f
Mapper89_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper89_Init(CartInfo *info) {$/;"	f
Mapper8_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper8_Init(CartInfo *info) {$/;"	f
Mapper90_Init	fceux-am/src/boards/90.cpp	/^void Mapper90_Init(CartInfo *info)$/;"	f
Mapper91_Init	fceux-am/src/boards/91.cpp	/^void Mapper91_Init(CartInfo *info) {$/;"	f
Mapper92_Init	fceux-am/src/boards/addrlatch.cpp	/^void Mapper92_Init(CartInfo *info) {$/;"	f
Mapper94_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper94_Init(CartInfo *info) {$/;"	f
Mapper95_Init	fceux-am/src/boards/80.cpp	/^void Mapper95_Init(CartInfo *info) {$/;"	f
Mapper96_Init	fceux-am/src/boards/96.cpp	/^void Mapper96_Init(CartInfo *info) {$/;"	f
Mapper97_Init	fceux-am/src/boards/datalatch.cpp	/^void Mapper97_Init(CartInfo *info) {$/;"	f
Mapper99_Init	fceux-am/src/boards/99.cpp	/^void Mapper99_Init(CartInfo *info) {$/;"	f
Mapper9_Init	fceux-am/src/boards/mmc2and4.cpp	/^void Mapper9_Init(CartInfo *info) {$/;"	f
MapperNo	fceux-am/src/ines.cpp	/^static int MapperNo = 0;$/;"	v	file:
MasterRomInfo	fceux-am/src/ines.cpp	/^const TMasterRomInfo* MasterRomInfo;$/;"	v
Min	fceux-am/src/boards/emu2413.c	/^INLINE static int32 Min(int32 i, int32 j) {$/;"	f	file:
Mirror	fceux-am/src/boards/28.cpp	/^void Mirror(uint8 value)$/;"	f
Mirroring	fceux-am/src/ines.cpp	/^uint8 Mirroring = 0;$/;"	v
ModR_M	nemu/src/isa/x86/decode.c	/^} ModR_M;$/;"	t	typeref:union:__anon55	file:
Mode	fceux-am/src/sound.h	/^	uint8 Mode;	\/* Fixed volume(1), and loop(2) *\/$/;"	m	struct:__anon36
ModernDeemphColorMap	fceux-am/src/drivers/common/vidblit.cpp	/^u32 ModernDeemphColorMap(u8* src, u8* srcbuf, int xscale, int yscale)$/;"	f
MouseData	fceux-am/src/boards/178.cpp	/^static uint32 MouseData[3], click, lastclick;$/;"	v	file:
N106_Power	fceux-am/src/boards/n106.cpp	/^static void N106_Power(void) {$/;"	f	file:
N106_StateRegs	fceux-am/src/boards/n106.cpp	/^static SFORMAT N106_StateRegs[] = {$/;"	v	file:
NAME	abstract-machine/am/Makefile	/^NAME     := am$/;"	m
NAME	abstract-machine/klib/Makefile	/^NAME = klib$/;"	m
NAME	fceux-am/Makefile	/^NAME = fceux$/;"	m
NAME	nemu/Makefile	/^NAME = nemu$/;"	m
NCOEFFS	fceux-am/src/fcoeffs.h	33;"	d
NEMUState	nemu/include/monitor/monitor.h	/^} NEMUState;$/;"	t	typeref:struct:__anon96
NEMU_ABORT	nemu/include/monitor/monitor.h	/^enum { NEMU_STOP, NEMU_RUNNING, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon95
NEMU_END	nemu/include/monitor/monitor.h	/^enum { NEMU_STOP, NEMU_RUNNING, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon95
NEMU_EXEC	nemu/Makefile	/^NEMU_EXEC := $(BINARY) $(ARGS) $(IMG)$/;"	m
NEMU_H__	abstract-machine/am/src/nemu/include/nemu.h	2;"	d
NEMU_PADDR_SPACE	abstract-machine/am/src/nemu/include/nemu.h	38;"	d
NEMU_QUIT	nemu/include/monitor/monitor.h	/^enum { NEMU_STOP, NEMU_RUNNING, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon95
NEMU_RUNNING	nemu/include/monitor/monitor.h	/^enum { NEMU_STOP, NEMU_RUNNING, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon95
NEMU_STOP	nemu/include/monitor/monitor.h	/^enum { NEMU_STOP, NEMU_RUNNING, NEMU_END, NEMU_ABORT, NEMU_QUIT };$/;"	e	enum:__anon95
NO	nemu/src/monitor/debug/watchpoint.h	/^  int NO;$/;"	m	struct:watchpoint
NOERR	abstract-machine/am/src/x86/qemu/trap32.S	/^#define NOERR     push $0$/;"	d
NOERR	abstract-machine/am/src/x86/qemu/trap64.S	/^#define NOERR     push $0$/;"	d
NOFFSET	fceux-am/src/drivers/sdl/sdl-video.cpp	44;"	d	file:
NOINLINE	abstract-machine/klib/src/int64.c	32;"	d	file:
NOINLINE	abstract-machine/klib/src/int64.c	37;"	d	file:
NONBRAMSIZE	fceux-am/src/boards/mmc1.cpp	/^static uint32 NONBRAMSIZE; \/\/ size of non-battery-backed portion of WRAM$/;"	v	file:
NORETURN	abstract-machine/klib/src/int64.c	33;"	d	file:
NORETURN	abstract-machine/klib/src/int64.c	38;"	d	file:
NROMPower	fceux-am/src/boards/datalatch.cpp	/^static void NROMPower(void) {$/;"	f	file:
NROM_Init	fceux-am/src/boards/datalatch.cpp	/^void NROM_Init(CartInfo *info) {$/;"	f
NR_CMD	nemu/src/monitor/debug/ui.c	55;"	d	file:
NR_FRAMESKIP	fceux-am/src/config.h	23;"	d
NR_FRAMESKIP	fceux-am/src/config.h	26;"	d
NR_FRAMESKIP	fceux-am/src/config.h	29;"	d
NR_IRQ	abstract-machine/am/src/nemu/isa/x86/cte.c	5;"	d	file:
NR_IRQ	abstract-machine/am/src/x86/qemu/x86-qemu.h	13;"	d
NR_MAP	nemu/src/device/io/mmio.c	3;"	d	file:
NR_MAP	nemu/src/device/io/port-io.c	5;"	d	file:
NR_REGEX	nemu/src/monitor/debug/expr.c	29;"	d	file:
NR_SEG	abstract-machine/am/src/x86/qemu/x86-qemu.h	6;"	d
NR_WP	nemu/src/monitor/debug/watchpoint.c	4;"	d	file:
NSFAY_Init	fceux-am/src/boards/69.cpp	/^void NSFAY_Init(void) {$/;"	f
NSFMMC5_Close	fceux-am/src/boards/mmc5.cpp	/^void NSFMMC5_Close(void) {$/;"	f
NSFMMC5_Init	fceux-am/src/boards/mmc5.cpp	/^void NSFMMC5_Init(void) {$/;"	f
NSFN106_Init	fceux-am/src/boards/n106.cpp	/^void NSFN106_Init(void) {$/;"	f
NSFVRC6_Init	fceux-am/src/boards/vrc6.cpp	/^void NSFVRC6_Init(void) {$/;"	f
NSFVRC7_Init	fceux-am/src/boards/vrc7.cpp	/^void NSFVRC7_Init(void) {$/;"	f
NTAMirroring	fceux-am/src/boards/mmc5.cpp	/^static uint8 CHRMode, NTAMirroring, NTFill, ATFill;$/;"	v	file:
NTAPage	fceux-am/src/boards/n106.cpp	/^static uint8 NTAPage[4];$/;"	v	file:
NTARAM	fceux-am/src/ppu.cpp	/^uint8 NTARAM[0x800], PALRAM[0x20], SPRAM[0x100], SPRBUF[0x100];$/;"	v
NTFill	fceux-am/src/boards/mmc5.cpp	/^static uint8 CHRMode, NTAMirroring, NTFill, ATFill;$/;"	v	file:
NTRefreshAddr	fceux-am/src/ppu.cpp	/^uint32 TempAddr = 0, RefreshAddr = 0, DummyRead = 0, NTRefreshAddr = 0;$/;"	v
NTSCDMCTable	fceux-am/src/sound.cpp	/^static const uint32 NTSCDMCTable[0x10]=$/;"	v	file:
NTSC_CPU	fceux-am/src/x6502.h	66;"	d
NUM_INPUT_DEVICES	fceux-am/src/drivers/sdl/main.h	46;"	d
NWCCHRHook	fceux-am/src/boards/mmc1.cpp	/^static void NWCCHRHook(uint32 A, uint8 V) {$/;"	f	file:
NWCDIP	fceux-am/src/boards/mmc1.cpp	220;"	d	file:
NWCIRQCount	fceux-am/src/boards/mmc1.cpp	/^static uint32 NWCIRQCount;$/;"	v	file:
NWCIRQHook	fceux-am/src/boards/mmc1.cpp	/^static void NWCIRQHook(int a) {$/;"	f	file:
NWCPRGHook	fceux-am/src/boards/mmc1.cpp	/^static void NWCPRGHook(uint32 A, uint8 V) {$/;"	f	file:
NWCPower	fceux-am/src/boards/mmc1.cpp	/^static void NWCPower(void) {$/;"	f	file:
NWCRec	fceux-am/src/boards/mmc1.cpp	/^static uint8 NWCRec;$/;"	v	file:
NWIDTH	fceux-am/src/drivers/sdl/sdl-video.cpp	43;"	d	file:
N_FLAG	fceux-am/src/x6502.h	55;"	d
NamcoIRQHook	fceux-am/src/boards/n106.cpp	/^static void NamcoIRQHook(int a) {$/;"	f	file:
NamcoSound	fceux-am/src/boards/n106.cpp	/^static void NamcoSound(int Count) {$/;"	f	file:
NamcoSoundHack	fceux-am/src/boards/n106.cpp	/^static void NamcoSoundHack(void) {$/;"	f	file:
NeoFill	fceux-am/src/sound.h	/^           void (*NeoFill)(int32 *Wave, int Count);$/;"	m	struct:__anon35
NeoFilterSound	fceux-am/src/filter.cpp	/^int32 NeoFilterSound(int32 *in, int32 *out, uint32 inlen, int32 *leftover)$/;"	f
NetworkPlay	fceux-am/src/fceu.h	/^	int NetworkPlay;$/;"	m	struct:__anon32
Nexttime	fceux-am/src/drivers/sdl/sdl-throttle.cpp	/^static uint64 Lasttime, Nexttime;$/;"	v	file:
NoWaiting	fceux-am/src/drivers/sdl/input.cpp	/^int NoWaiting = 1;$/;"	v
NoiseFreqTableNTSC	fceux-am/src/sound.cpp	/^extern const uint32 NoiseFreqTableNTSC[0x10] =$/;"	v
NoiseFreqTablePAL	fceux-am/src/sound.cpp	/^extern const uint32 NoiseFreqTablePAL[0x10] =$/;"	v
NoiseVolume	fceux-am/src/fceu.h	/^	int NoiseVolume;$/;"	m	struct:__anon32
NovelReset	fceux-am/src/boards/novel.cpp	/^static void NovelReset(void) {$/;"	f	file:
NovelRestore	fceux-am/src/boards/novel.cpp	/^static void NovelRestore(int version) {$/;"	f	file:
Novel_Init	fceux-am/src/boards/novel.cpp	/^void Novel_Init(CartInfo *info) {$/;"	f
NumC	fceux-am/src/drivers/sdl/input.h	/^	uint32 NumC;$/;"	m	struct:__anon48
OBJCOPY	abstract-machine/Makefile	/^OBJCOPY   = $(CROSS_COMPILE)objcopy$/;"	m
OBJDUMP	abstract-machine/Makefile	/^OBJDUMP   = $(CROSS_COMPILE)objdump$/;"	m
OBJS	abstract-machine/Makefile	/^OBJS      = $(addprefix $(DST_DIR)\/, $(addsuffix .o, $(basename $(SRCS))))$/;"	m
OBJS	nemu/Makefile	/^OBJS = $(SRCS:src\/%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJS	nemu/tools/kvm-diff/Makefile	/^OBJS = $(SRCS:src\/%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJS	nemu/tools/qemu-diff/Makefile	/^OBJS = $(SRCS:src\/%.c=$(OBJ_DIR)\/%.o)$/;"	m
OBJ_DIR	nemu/Makefile	/^OBJ_DIR ?= $(BUILD_DIR)\/obj-$(ISA)-$(ENGINE)$(SO)$/;"	m
OBJ_DIR	nemu/tools/kvm-diff/Makefile	/^OBJ_DIR ?= $(BUILD_DIR)\/obj-$(ISA)$/;"	m
OBJ_DIR	nemu/tools/qemu-diff/Makefile	/^OBJ_DIR ?= $(BUILD_DIR)\/obj-$(ISA)$/;"	m
OFFSET_CAUSE	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define OFFSET_CAUSE  (34 * 4)$/;"	d
OFFSET_CAUSE	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define OFFSET_CAUSE  (32 * 4)$/;"	d
OFFSET_CAUSE	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define OFFSET_CAUSE  (32 * 8)$/;"	d
OFFSET_EPC	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define OFFSET_EPC    (36 * 4)$/;"	d
OFFSET_EPC	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define OFFSET_EPC    (34 * 4)$/;"	d
OFFSET_EPC	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define OFFSET_EPC    (34 * 8)$/;"	d
OFFSET_HI	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define OFFSET_HI     (33 * 4)$/;"	d
OFFSET_LO	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define OFFSET_LO     (32 * 4)$/;"	d
OFFSET_SP	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define OFFSET_SP     (29 * 4)$/;"	d
OFFSET_SP	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define OFFSET_SP     ( 2 * 4)$/;"	d
OFFSET_SP	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define OFFSET_SP     ( 2 * 8)$/;"	d
OFFSET_STATUS	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define OFFSET_STATUS (35 * 4)$/;"	d
OFFSET_STATUS	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define OFFSET_STATUS (33 * 4)$/;"	d
OFFSET_STATUS	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define OFFSET_STATUS (33 * 8)$/;"	d
OPLL	fceux-am/src/boards/emu2413.h	/^} OPLL;$/;"	t	typeref:struct:__anon44
OPLL_MASK_CH	fceux-am/src/boards/emu2413.h	59;"	d
OPLL_PATCH	fceux-am/src/boards/emu2413.h	/^} OPLL_PATCH;$/;"	t	typeref:struct:__anon42
OPLL_SLOT	fceux-am/src/boards/emu2413.h	/^} OPLL_SLOT;$/;"	t	typeref:struct:__anon43
OPLL_SLOT_reset	fceux-am/src/boards/emu2413.c	/^static void OPLL_SLOT_reset(OPLL_SLOT * slot, int type) {$/;"	f	file:
OPLL_VRC7_TONE	fceux-am/src/boards/emu2413.h	/^enum { OPLL_VRC7_TONE=0 };$/;"	e	enum:__anon41
OPLL_delete	fceux-am/src/boards/emu2413.c	/^void OPLL_delete(OPLL * opll) {$/;"	f
OPLL_fillbuf	fceux-am/src/boards/emu2413.c	/^void OPLL_fillbuf(OPLL* opll, int32 *buf, int32 len, int shift) {$/;"	f
OPLL_forceRefresh	fceux-am/src/boards/emu2413.c	/^void OPLL_forceRefresh(OPLL * opll) {$/;"	f
OPLL_new	fceux-am/src/boards/emu2413.c	/^OPLL *OPLL_new(uint32 clk, uint32 rate) {$/;"	f
OPLL_reset	fceux-am/src/boards/emu2413.c	/^void OPLL_reset(OPLL * opll) {$/;"	f
OPLL_setMask	fceux-am/src/boards/emu2413.c	/^uint32 OPLL_setMask(OPLL * opll, uint32 mask) {$/;"	f
OPLL_set_quality	fceux-am/src/boards/emu2413.c	/^void OPLL_set_quality(OPLL * opll, uint32 q) {$/;"	f
OPLL_set_rate	fceux-am/src/boards/emu2413.c	/^void OPLL_set_rate(OPLL * opll, uint32 r) {$/;"	f
OPLL_toggleMask	fceux-am/src/boards/emu2413.c	/^uint32 OPLL_toggleMask(OPLL * opll, uint32 mask) {$/;"	f
OPLL_writeIO	fceux-am/src/boards/emu2413.c	/^void OPLL_writeIO(OPLL * opll, uint32 adr, uint32 val) {$/;"	f
OPLL_writeReg	fceux-am/src/boards/emu2413.c	/^void OPLL_writeReg(OPLL * opll, uint32 reg, uint32 data) {$/;"	f
OP_STR_SIZE	nemu/include/cpu/decode.h	6;"	d
OP_TYPE_IMM	nemu/include/cpu/decode.h	/^enum { OP_TYPE_REG, OP_TYPE_MEM, OP_TYPE_IMM };$/;"	e	enum:__anon64
OP_TYPE_MEM	nemu/include/cpu/decode.h	/^enum { OP_TYPE_REG, OP_TYPE_MEM, OP_TYPE_IMM };$/;"	e	enum:__anon64
OP_TYPE_REG	nemu/include/cpu/decode.h	/^enum { OP_TYPE_REG, OP_TYPE_MEM, OP_TYPE_IMM };$/;"	e	enum:__anon64
ORA	fceux-am/src/x6502.cpp	120;"	d	file:
Operand	nemu/include/cpu/decode.h	/^} Operand;$/;"	t	typeref:struct:__anon65
P	fceux-am/src/utils/md5.cpp	63;"	d	file:
P	fceux-am/src/x6502struct.h	/^        uint8 A,X,Y,S,P,mooPI;$/;"	m	struct:__X6502
PAGE_MASK	nemu/include/memory/vaddr.h	62;"	d
PAGE_SIZE	nemu/include/memory/vaddr.h	61;"	d
PAL	fceux-am/src/fceu.cpp	/^uint8 PAL = 0;$/;"	v
PAL	fceux-am/src/fceu.h	/^	int PAL;$/;"	m	struct:__anon32
PAL	fceux-am/src/ppu.cpp	1017;"	d	file:
PALDMCTable	fceux-am/src/sound.cpp	/^static const uint32 PALDMCTable[0x10]=$/;"	v	file:
PALRAM	fceux-am/src/ppu.cpp	/^uint8 NTARAM[0x800], PALRAM[0x20], SPRAM[0x100], SPRBUF[0x100];$/;"	v
PAL_CPU	fceux-am/src/x6502.h	67;"	d
PALcache	fceux-am/src/ppu.cpp	/^static uint16 PALcache[256];$/;"	v	file:
PALcache_outdate	fceux-am/src/ppu.cpp	/^static int PALcache_outdate = 0;$/;"	v	file:
PATH_MAX	fceux-am/src/types.h	54;"	d
PC	fceux-am/src/x6502struct.h	/^  uint16 PC;        \/* I'll change this to uint32 later... *\/$/;"	m	struct:__X6502
PCINT	abstract-machine/am/src/x86/qemu/ioe.c	371;"	d	file:
PCMVolume	fceux-am/src/fceu.h	/^	int PCMVolume;$/;"	m	struct:__anon32
PDPT_ADDR	abstract-machine/am/src/x86/qemu/x86-qemu.h	4;"	d
PDX	abstract-machine/am/src/mips32.h	21;"	d
PDXSHFT	abstract-machine/am/src/mips32.h	19;"	d
PEC586Hack	fceux-am/src/ppu.cpp	/^int PEC586Hack = 0;$/;"	v
PERF_CONFIG	fceux-am/src/config.h	15;"	d
PERF_CONFIG	fceux-am/src/config.h	17;"	d
PERF_CONFIG	fceux-am/src/config.h	19;"	d
PERF_HIGH	fceux-am/src/config.h	12;"	d
PERF_LOW	fceux-am/src/config.h	10;"	d
PERF_MIDDLE	fceux-am/src/config.h	11;"	d
PERIODIC	abstract-machine/am/src/x86/qemu/ioe.c	370;"	d	file:
PERIODIC_SAVE_INTERVAL	fceux-am/src/drivers/sdl/sdl.h	10;"	d
PGSIZE	abstract-machine/am/src/nemu/include/nemu.h	45;"	d
PG_ALIGN	nemu/include/memory/vaddr.h	63;"	d
PG_ALIGN	nemu/src/device/io/map.c	/^static uint8_t io_space[IO_SPACE_MAX] PG_ALIGN = {};$/;"	v	file:
PG_ALIGN	nemu/src/memory/paddr.c	/^static uint8_t pmem[PMEM_SIZE] PG_ALIGN = {};$/;"	v	file:
PG_BITS	fceux-am/src/boards/emu2413.c	73;"	d	file:
PG_WIDTH	fceux-am/src/boards/emu2413.c	74;"	d	file:
PI	fceux-am/src/boards/emu2413.h	20;"	d
PLATFORM	abstract-machine/Makefile	/^PLATFORM   = $(word 2,$(ARCH_SPLIT))$/;"	m
PM	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
PMEM_BASE	nemu/include/isa.h	11;"	d
PMEM_END	abstract-machine/am/src/nemu/include/nemu.h	37;"	d
PMEM_SIZE	abstract-machine/am/src/native/platform.c	12;"	d	file:
PMEM_SIZE	abstract-machine/am/src/nemu/include/nemu.h	36;"	d
PMEM_SIZE	nemu/include/memory/paddr.h	6;"	d
PMEM_START	abstract-machine/am/src/native/platform.c	11;"	d	file:
PML4_ADDR	abstract-machine/am/src/x86/qemu/x86-qemu.h	3;"	d
PM_AMP	fceux-am/src/boards/emu2413.c	128;"	d	file:
PM_AMP_BITS	fceux-am/src/boards/emu2413.c	127;"	d	file:
PM_DEPTH	fceux-am/src/boards/emu2413.c	132;"	d	file:
PM_DP_BITS	fceux-am/src/boards/emu2413.c	119;"	d	file:
PM_DP_WIDTH	fceux-am/src/boards/emu2413.c	120;"	d	file:
PM_PG_BITS	fceux-am/src/boards/emu2413.c	117;"	d	file:
PM_PG_WIDTH	fceux-am/src/boards/emu2413.c	118;"	d	file:
PM_SPEED	fceux-am/src/boards/emu2413.c	131;"	d	file:
POP	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define POP(n)  lw $n, (n * 4)($sp);$/;"	d
POP	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define POP(n)  lw concat(x, n), (n * 4)(sp);$/;"	d
POP	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define POP(n)  ld concat(x, n), (n * 8)(sp);$/;"	d
POP	fceux-am/src/x6502.cpp	85;"	d	file:
PORT_IO_SPACE_MAX	nemu/src/device/io/port-io.c	3;"	d	file:
POWERPAD_NUM_BUTTONS	fceux-am/src/drivers/sdl/main.h	57;"	d
POWERPAD_NUM_DEVICES	fceux-am/src/drivers/sdl/main.h	56;"	d
PPU	fceux-am/src/ppu.cpp	/^uint8 PPU[4];$/;"	v
PPUCHRBus	fceux-am/src/boards/et-4320.cpp	/^static uint8 PPUCHRBus;$/;"	v	file:
PPUCHRBus	fceux-am/src/boards/mmc3.cpp	/^static uint8 PPUCHRBus;$/;"	v	file:
PPUCHRRAM	fceux-am/src/ppu.cpp	/^uint8 PPUCHRRAM = 0;$/;"	v
PPUGenLatch	fceux-am/src/ppu.cpp	/^uint8 VRAMBuffer = 0, PPUGenLatch = 0;$/;"	v
PPUNTARAM	fceux-am/src/ppu.cpp	/^uint8 PPUNTARAM = 0;$/;"	v
PPUON	fceux-am/src/boards/mmc5.cpp	29;"	d	file:
PPUON	fceux-am/src/ppu.cpp	47;"	d	file:
PPUPHASE	fceux-am/src/ppu.h	/^enum PPUPHASE {$/;"	g
PPUPHASE_BG	fceux-am/src/ppu.h	/^	PPUPHASE_VBL, PPUPHASE_BG, PPUPHASE_OBJ$/;"	e	enum:PPUPHASE
PPUPHASE_OBJ	fceux-am/src/ppu.h	/^	PPUPHASE_VBL, PPUPHASE_BG, PPUPHASE_OBJ$/;"	e	enum:PPUPHASE
PPUPHASE_VBL	fceux-am/src/ppu.h	/^	PPUPHASE_VBL, PPUPHASE_BG, PPUPHASE_OBJ$/;"	e	enum:PPUPHASE
PPUREGS	fceux-am/src/ppu.cpp	/^struct PPUREGS {$/;"	s	file:
PPUSPL	fceux-am/src/ppu.cpp	/^uint8 PPUSPL;$/;"	v
PPUSTATUS	fceux-am/src/ppu.cpp	/^struct PPUSTATUS {$/;"	s	file:
PPU_MASTER	fceux-am/src/ppu.cpp	/^int (*PPU_MASTER)(int skip) = FCEUPPU_Loop;$/;"	v
PPU_ResetHooks	fceux-am/src/ppu.cpp	/^void PPU_ResetHooks() {$/;"	f
PPU_hook	fceux-am/src/ppu.cpp	/^void (*PPU_hook)(uint32 A);$/;"	v
PPU_status	fceux-am/src/ppu.cpp	53;"	d	file:
PRG	fceux-am/src/boards/n106.cpp	/^static uint8 PRG[3];$/;"	v	file:
PRGBanks	fceux-am/src/boards/mmc5.cpp	/^static uint8 PRGBanks[4];$/;"	v	file:
PRGIsRAM	fceux-am/src/cart.cpp	/^static uint8 PRGIsRAM[32];  \/* This page is\/is not PRG RAM. *\/$/;"	v	file:
PRGmask16	fceux-am/src/cart.cpp	/^uint32 PRGmask16[32];$/;"	v
PRGmask2	fceux-am/src/cart.cpp	/^uint32 PRGmask2[32];$/;"	v
PRGmask32	fceux-am/src/cart.cpp	/^uint32 PRGmask32[32];$/;"	v
PRGmask4	fceux-am/src/cart.cpp	/^uint32 PRGmask4[32];$/;"	v
PRGmask8	fceux-am/src/cart.cpp	/^uint32 PRGmask8[32];$/;"	v
PRGptr	fceux-am/src/cart.cpp	/^uint8 *PRGptr[32];$/;"	v
PRGram	fceux-am/src/cart.cpp	/^uint8 PRGram[32];$/;"	v
PRGsize	fceux-am/src/cart.cpp	/^uint32 PRGsize[32];$/;"	v
PS	fceux-am/src/types.h	102;"	d
PS	fceux-am/src/types.h	107;"	d
PS	fceux-am/src/types.h	112;"	d
PS	fceux-am/src/types.h	97;"	d
PSG	fceux-am/src/sound.cpp	/^uint8 PSG[0x10];			\/\/ $4000-$400F \/ Channels 1-4$/;"	v
PSS	fceux-am/src/types.h	101;"	d
PSS	fceux-am/src/types.h	106;"	d
PSS	fceux-am/src/types.h	111;"	d
PSS	fceux-am/src/types.h	96;"	d
PSS_STYLE	fceux-am/src/types.h	88;"	d
PSync	fceux-am/src/boards/onebus.cpp	/^static void PSync(void) {$/;"	f	file:
PTE	abstract-machine/am/src/nemu/include/nemu.h	/^typedef uintptr_t PTE;$/;"	t
PTE_D	abstract-machine/am/src/mips32.h	15;"	d
PTE_P	abstract-machine/am/src/x86.h	24;"	d
PTE_PS	abstract-machine/am/src/x86.h	27;"	d
PTE_R	abstract-machine/am/src/riscv32.h	15;"	d
PTE_R	abstract-machine/am/src/riscv64.h	15;"	d
PTE_U	abstract-machine/am/src/riscv32.h	18;"	d
PTE_U	abstract-machine/am/src/riscv64.h	18;"	d
PTE_U	abstract-machine/am/src/x86.h	26;"	d
PTE_V	abstract-machine/am/src/mips32.h	14;"	d
PTE_V	abstract-machine/am/src/riscv32.h	14;"	d
PTE_V	abstract-machine/am/src/riscv64.h	14;"	d
PTE_W	abstract-machine/am/src/riscv32.h	16;"	d
PTE_W	abstract-machine/am/src/riscv64.h	16;"	d
PTE_W	abstract-machine/am/src/x86.h	25;"	d
PTE_X	abstract-machine/am/src/riscv32.h	17;"	d
PTE_X	abstract-machine/am/src/riscv64.h	17;"	d
PTX	abstract-machine/am/src/mips32.h	22;"	d
PTXSHFT	abstract-machine/am/src/mips32.h	18;"	d
PUSH	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define PUSH(n) sw $n, (n * 4)($sp);$/;"	d
PUSH	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define PUSH(n) sw concat(x, n), (n * 4)(sp);$/;"	d
PUSH	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define PUSH(n) sd concat(x, n), (n * 8)(sp);$/;"	d
PUSH	fceux-am/src/x6502.cpp	78;"	d	file:
PUT_UINT32	fceux-am/src/utils/md5.cpp	22;"	d	file:
Page	fceux-am/src/cart.cpp	/^uint8 *Page[32], *VPage[8];$/;"	v
PageMap	abstract-machine/am/src/native/vme.c	/^typedef struct PageMap {$/;"	s	file:
PageMap	abstract-machine/am/src/native/vme.c	/^} PageMap;$/;"	t	typeref:struct:PageMap	file:
PaletteAdjustPixel	fceux-am/src/ppu.cpp	/^static inline int PaletteAdjustPixel(int pixel) {$/;"	f	file:
ParseGIInput	fceux-am/src/drivers/sdl/input.cpp	/^ParseGIInput (FCEUGI * gi)$/;"	f
Pause	fceux-am/src/boards/3d-block.cpp	42;"	d	file:
PlayIndex	fceux-am/src/boards/n106.cpp	/^static uint32 PlayIndex[8];$/;"	v	file:
Pline	fceux-am/src/ppu.cpp	/^static uint8 *Pline, *Plinef;$/;"	v	file:
Plinef	fceux-am/src/ppu.cpp	/^static uint8 *Pline, *Plinef;$/;"	v	file:
Power	fceux-am/src/boards/164.cpp	/^static void Power(void) {$/;"	f	file:
Power	fceux-am/src/boards/bonza.cpp	/^static void Power(void) {$/;"	f	file:
Power	fceux-am/src/boards/karaoke.cpp	/^static void Power(void) {$/;"	f	file:
Power	fceux-am/src/cart.h	/^	void (*Power)(void);$/;"	m	struct:__anon37
Power2	fceux-am/src/boards/164.cpp	/^static void Power2(void) {$/;"	f	file:
Power3	fceux-am/src/boards/164.cpp	/^static void Power3(void) {$/;"	f	file:
PowerNES	fceux-am/src/fceu.cpp	/^void PowerNES(void) {$/;"	f
PrepDPCM	fceux-am/src/sound.cpp	/^static void PrepDPCM()$/;"	f	file:
QTAIHack	fceux-am/src/ppu.cpp	/^int QTAIHack = 0;$/;"	v
QTAINTRAM	fceux-am/src/ppu.cpp	/^uint8 QTAINTRAM[2048];$/;"	v
QTAiClose	fceux-am/src/boards/vrc5.cpp	/^static void QTAiClose(void) {$/;"	f	file:
QTAiPower	fceux-am/src/boards/vrc5.cpp	/^static void QTAiPower(void) {$/;"	f	file:
QTAi_Init	fceux-am/src/boards/vrc5.cpp	/^void QTAi_Init(CartInfo *info) {$/;"	f
QUIZKING_NUM_BUTTONS	fceux-am/src/drivers/sdl/main.h	63;"	d
R	abstract-machine/am/src/x86/qemu/ioe.c	/^static inline uint8_t R(uint32_t p) { return p >> 16; }$/;"	f	file:
RAM	fceux-am/src/fceu.cpp	/^uint8 RAM[0x800];$/;"	v
RAM_size	fceux-am/src/ines.h	/^	uint8 RAM_size;              \/\/ 10$/;"	m	struct:iNES_HEADER
RANGE	abstract-machine/klib/include/klib-macros.h	7;"	d
RChange	fceux-am/src/sound.h	/^	   void (*RChange)(void);$/;"	m	struct:__anon35
RDoNoise	fceux-am/src/sound.cpp	/^static void RDoNoise(void)$/;"	f	file:
RDoPCM	fceux-am/src/sound.cpp	/^void RDoPCM(void)$/;"	f
RDoSQ	fceux-am/src/sound.cpp	/^static INLINE void RDoSQ(int x)		\/\/Int x decides if this is Square Wave 1 or 2$/;"	f	file:
RDoSQ1	fceux-am/src/sound.cpp	/^static void RDoSQ1(void)$/;"	f	file:
RDoSQ2	fceux-am/src/sound.cpp	/^static void RDoSQ2(void)$/;"	f	file:
RDoSQLQ	fceux-am/src/sound.cpp	/^static void RDoSQLQ(void)$/;"	f	file:
RDoTriangle	fceux-am/src/sound.cpp	/^static void RDoTriangle(void)$/;"	f	file:
RDoTriangleNoisePCMLQ	fceux-am/src/sound.cpp	/^static void RDoTriangleNoisePCMLQ(void)$/;"	f	file:
READ	fceux-am/src/file.h	/^		READ, WRITE, READWRITE$/;"	e	enum:FCEUFILE::__anon34
READELF	abstract-machine/Makefile	/^READELF   = $(CROSS_COMPILE)readelf$/;"	m
READPAL	fceux-am/src/ppu.cpp	55;"	d	file:
READPAL_MOTHEROFALL	fceux-am/src/ppu.cpp	/^uint8 READPAL_MOTHEROFALL(uint32 A)$/;"	f
READUPAL	fceux-am/src/ppu.cpp	56;"	d	file:
READWRITE	fceux-am/src/file.h	/^		READ, WRITE, READWRITE$/;"	e	enum:FCEUFILE::__anon34
REGS	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^#define REGS(f) \\$/;"	d
REGS	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define REGS(f) \\$/;"	d
REGS	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define REGS(f) \\$/;"	d
REG_ID	abstract-machine/am/src/x86/qemu/ioe.c	381;"	d	file:
REG_TABLE	abstract-machine/am/src/x86/qemu/ioe.c	383;"	d	file:
REG_VER	abstract-machine/am/src/x86/qemu/ioe.c	382;"	d	file:
RELEASE	fceux-am/src/boards/emu2413.c	/^{ SETTLE, ATTACK, DECAY, SUSHOLD, SUSTINE, RELEASE, FINISH };$/;"	e	enum:__anon40	file:
RELOP_EQ	nemu/include/rtl/rtl.h	/^  RELOP_EQ    = 0 | 0 | 2 | 0,$/;"	e	enum:__anon63
RELOP_FALSE	nemu/include/rtl/rtl.h	/^  RELOP_FALSE = 0 | 0 | 0 | 0,$/;"	e	enum:__anon63
RELOP_GE	nemu/include/rtl/rtl.h	/^  RELOP_GE    = 0 | 4 | 0 | 1,$/;"	e	enum:__anon63
RELOP_GEU	nemu/include/rtl/rtl.h	/^  RELOP_GEU   = 8 | 0 | 0 | 1,$/;"	e	enum:__anon63
RELOP_GT	nemu/include/rtl/rtl.h	/^  RELOP_GT    = 0 | 4 | 2 | 1,$/;"	e	enum:__anon63
RELOP_GTU	nemu/include/rtl/rtl.h	/^  RELOP_GTU   = 8 | 0 | 2 | 1,$/;"	e	enum:__anon63
RELOP_LE	nemu/include/rtl/rtl.h	/^  RELOP_LE    = 0 | 4 | 2 | 0,$/;"	e	enum:__anon63
RELOP_LEU	nemu/include/rtl/rtl.h	/^  RELOP_LEU   = 8 | 0 | 2 | 0,$/;"	e	enum:__anon63
RELOP_LT	nemu/include/rtl/rtl.h	/^  RELOP_LT    = 0 | 4 | 0 | 0,$/;"	e	enum:__anon63
RELOP_LTU	nemu/include/rtl/rtl.h	/^  RELOP_LTU   = 8 | 0 | 0 | 0,$/;"	e	enum:__anon63
RELOP_NE	nemu/include/rtl/rtl.h	/^  RELOP_NE    = 0 | 0 | 2 | 1,$/;"	e	enum:__anon63
RELOP_TRUE	nemu/include/rtl/rtl.h	/^  RELOP_TRUE  = 0 | 0 | 0 | 1,$/;"	e	enum:__anon63
RENDER_LOG	fceux-am/src/ppu.cpp	504;"	d	file:
RENDER_LOGP	fceux-am/src/ppu.cpp	522;"	d	file:
RFLAGS_AC	nemu/tools/kvm-diff/src/kvm.c	16;"	d	file:
RFLAGS_AF	nemu/tools/kvm-diff/src/kvm.c	19;"	d	file:
RFLAGS_FIX_MASK	nemu/tools/kvm-diff/src/kvm.c	20;"	d	file:
RFLAGS_ID	nemu/tools/kvm-diff/src/kvm.c	15;"	d	file:
RFLAGS_RF	nemu/tools/kvm-diff/src/kvm.c	17;"	d	file:
RFLAGS_TF	nemu/tools/kvm-diff/src/kvm.c	18;"	d	file:
RGB_TO_YIQ	fceux-am/src/palette.cpp	56;"	d	file:
RGS	nemu/Makefile	/^override ARGS ?= --log=$(BUILD_DIR)\/nemu-log.txt$/;"	m
RISCV32_H__	abstract-machine/am/src/riscv32.h	2;"	d
RISCV64_H__	abstract-machine/am/src/riscv64.h	2;"	d
RMW_A	fceux-am/src/x6502.cpp	293;"	d	file:
RMW_AB	fceux-am/src/x6502.cpp	294;"	d	file:
RMW_ABI	fceux-am/src/x6502.cpp	295;"	d	file:
RMW_ABX	fceux-am/src/x6502.cpp	296;"	d	file:
RMW_ABY	fceux-am/src/x6502.cpp	297;"	d	file:
RMW_IX	fceux-am/src/x6502.cpp	298;"	d	file:
RMW_IY	fceux-am/src/x6502.cpp	299;"	d	file:
RMW_ZP	fceux-am/src/x6502.cpp	300;"	d	file:
RMW_ZPX	fceux-am/src/x6502.cpp	301;"	d	file:
ROL	fceux-am/src/x6502.cpp	170;"	d	file:
ROM	fceux-am/src/ines.cpp	/^uint8 *ROM = NULL;$/;"	v
ROMS	fceux-am/Makefile	/^ROMS      = $(shell ls $(ROM_PATH)\/rom\/*.nes)$/;"	m
ROM_PATH	fceux-am/Makefile	/^ROM_PATH  = .\/nes$/;"	m
ROM_SRC	fceux-am/Makefile	/^ROM_SRC   = $(addprefix $(ROM_PATH)\/gen\/, $(addsuffix .c, $(notdir $(basename $(ROMS)))))$/;"	m
ROM_size	fceux-am/src/ines.cpp	/^uint32 ROM_size = 0;$/;"	v
ROM_size	fceux-am/src/ines.h	/^	uint8 ROM_size;              \/\/ 4$/;"	m	struct:iNES_HEADER
ROM_type	fceux-am/src/ines.h	/^	uint8 ROM_type;              \/\/ 6$/;"	m	struct:iNES_HEADER
ROM_type2	fceux-am/src/ines.h	/^	uint8 ROM_type2;             \/\/ 7$/;"	m	struct:iNES_HEADER
ROM_type3	fceux-am/src/ines.h	/^	uint8 ROM_type3;             \/\/ 8$/;"	m	struct:iNES_HEADER
ROR	fceux-am/src/x6502.cpp	178;"	d	file:
ROUNDDOWN	abstract-machine/klib/include/klib-macros.h	5;"	d
ROUNDUP	abstract-machine/klib/include/klib-macros.h	4;"	d
RR	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
RTC_ADDR	abstract-machine/am/src/nemu/include/nemu.h	21;"	d
RTC_ADDR	abstract-machine/am/src/nemu/include/nemu.h	27;"	d
RTC_MMIO	nemu/src/device/timer.c	7;"	d	file:
RTC_PORT	nemu/src/device/timer.c	6;"	d	file:
RWWrap	fceux-am/src/fceu.cpp	/^static int RWWrap = 0;$/;"	v	file:
R_AH	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AL, R_CL, R_DL, R_BL, R_AH, R_CH, R_DH, R_BH };$/;"	e	enum:__anon54
R_AL	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AL, R_CL, R_DL, R_BL, R_AH, R_CH, R_DH, R_BH };$/;"	e	enum:__anon54
R_AX	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AX, R_CX, R_DX, R_BX, R_SP, R_BP, R_SI, R_DI };$/;"	e	enum:__anon53
R_BH	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AL, R_CL, R_DL, R_BL, R_AH, R_CH, R_DH, R_BH };$/;"	e	enum:__anon54
R_BL	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AL, R_CL, R_DL, R_BL, R_AH, R_CH, R_DH, R_BH };$/;"	e	enum:__anon54
R_BP	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AX, R_CX, R_DX, R_BX, R_SP, R_BP, R_SI, R_DI };$/;"	e	enum:__anon53
R_BX	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AX, R_CX, R_DX, R_BX, R_SP, R_BP, R_SI, R_DI };$/;"	e	enum:__anon53
R_CH	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AL, R_CL, R_DL, R_BL, R_AH, R_CH, R_DH, R_BH };$/;"	e	enum:__anon54
R_CL	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AL, R_CL, R_DL, R_BL, R_AH, R_CH, R_DH, R_BH };$/;"	e	enum:__anon54
R_CX	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AX, R_CX, R_DX, R_BX, R_SP, R_BP, R_SI, R_DI };$/;"	e	enum:__anon53
R_DH	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AL, R_CL, R_DL, R_BL, R_AH, R_CH, R_DH, R_BH };$/;"	e	enum:__anon54
R_DI	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AX, R_CX, R_DX, R_BX, R_SP, R_BP, R_SI, R_DI };$/;"	e	enum:__anon53
R_DL	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AL, R_CL, R_DL, R_BL, R_AH, R_CH, R_DH, R_BH };$/;"	e	enum:__anon54
R_DX	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AX, R_CX, R_DX, R_BX, R_SP, R_BP, R_SI, R_DI };$/;"	e	enum:__anon53
R_EAX	nemu/src/isa/x86/local-include/reg.h	/^enum { R_EAX, R_ECX, R_EDX, R_EBX, R_ESP, R_EBP, R_ESI, R_EDI };$/;"	e	enum:__anon52
R_EBP	nemu/src/isa/x86/local-include/reg.h	/^enum { R_EAX, R_ECX, R_EDX, R_EBX, R_ESP, R_EBP, R_ESI, R_EDI };$/;"	e	enum:__anon52
R_EBX	nemu/src/isa/x86/local-include/reg.h	/^enum { R_EAX, R_ECX, R_EDX, R_EBX, R_ESP, R_EBP, R_ESI, R_EDI };$/;"	e	enum:__anon52
R_ECX	nemu/src/isa/x86/local-include/reg.h	/^enum { R_EAX, R_ECX, R_EDX, R_EBX, R_ESP, R_EBP, R_ESI, R_EDI };$/;"	e	enum:__anon52
R_EDI	nemu/src/isa/x86/local-include/reg.h	/^enum { R_EAX, R_ECX, R_EDX, R_EBX, R_ESP, R_EBP, R_ESI, R_EDI };$/;"	e	enum:__anon52
R_EDX	nemu/src/isa/x86/local-include/reg.h	/^enum { R_EAX, R_ECX, R_EDX, R_EBX, R_ESP, R_EBP, R_ESI, R_EDI };$/;"	e	enum:__anon52
R_ESI	nemu/src/isa/x86/local-include/reg.h	/^enum { R_EAX, R_ECX, R_EDX, R_EBX, R_ESP, R_EBP, R_ESI, R_EDI };$/;"	e	enum:__anon52
R_ESP	nemu/src/isa/x86/local-include/reg.h	/^enum { R_EAX, R_ECX, R_EDX, R_EBX, R_ESP, R_EBP, R_ESI, R_EDI };$/;"	e	enum:__anon52
R_M	nemu/src/isa/x86/decode.c	/^    uint8_t R_M		:3;$/;"	m	struct:__anon55::__anon56	file:
R_OK	fceux-am/src/types.h	51;"	d
R_SI	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AX, R_CX, R_DX, R_BX, R_SP, R_BP, R_SI, R_DI };$/;"	e	enum:__anon53
R_SP	nemu/src/isa/x86/local-include/reg.h	/^enum { R_AX, R_CX, R_DX, R_BX, R_SP, R_BP, R_SI, R_DI };$/;"	e	enum:__anon53
RawDALatch	fceux-am/src/sound.cpp	/^uint8 RawDALatch=0;			\/\/ $4011 \/ 7-bit DAC \/ 0xxxxxxx$/;"	v
RawReg4016	fceux-am/src/input.cpp	/^uint8 RawReg4016 = 0; \/\/ Joystick strobe (W)$/;"	v
RdMem	fceux-am/src/x6502.cpp	/^static INLINE uint8 RdMem(unsigned int A)$/;"	f	file:
RdRAM	fceux-am/src/x6502.cpp	/^static INLINE uint8 RdRAM(unsigned int A)$/;"	f	file:
Read	fceux-am/src/input.h	/^	uint8 Read(int w) { if(_Read) return _Read(w); else return 0; }$/;"	f	struct:INPUTC
Read	fceux-am/src/input.h	/^	uint8 Read(int w, uint8 ret) { if(_Read) return _Read(w,ret); else return ret; }$/;"	f	struct:INPUTCFC
Read	fceux-am/src/ppu.cpp	/^		INLINE void Read() {$/;"	f	struct:BGData::Record
ReadGP	fceux-am/src/input.cpp	/^static uint8 ReadGP(int w)$/;"	f	file:
Record	fceux-am/src/ppu.cpp	/^	struct Record {$/;"	s	struct:BGData	file:
RectDuties	fceux-am/src/sound.cpp	/^static const int RectDuties[4]={1,2,4,6};$/;"	v	file:
RectDutyCount	fceux-am/src/sound.cpp	/^static int32 RectDutyCount[2];$/;"	v	file:
RefreshAddr	fceux-am/src/ppu.cpp	/^uint32 TempAddr = 0, RefreshAddr = 0, DummyRead = 0, NTRefreshAddr = 0;$/;"	v
RefreshAddr	fceux-am/src/ppu.cpp	1099;"	d	file:
RefreshAddr	fceux-am/src/ppu.cpp	1153;"	d	file:
RefreshAddrT	fceux-am/src/ppu.cpp	/^static uint16 TempAddrT, RefreshAddrT;$/;"	v	file:
RefreshLine	fceux-am/src/ppu.cpp	/^static void RefreshLine(int lastpixel) {$/;"	f	file:
RefreshSprites	fceux-am/src/ppu.cpp	/^static void RefreshSprites(void) {$/;"	f	file:
RefreshThrottleFPS	fceux-am/src/drivers/sdl/sdl-throttle.cpp	/^RefreshThrottleFPS()$/;"	f
Reset	fceux-am/src/cart.h	/^	void (*Reset)(void);$/;"	m	struct:__anon37
ResetCartMapping	fceux-am/src/cart.cpp	/^void ResetCartMapping(void) {$/;"	f
ResetGameLoaded	fceux-am/src/fceu.cpp	/^void ResetGameLoaded(void) {$/;"	f
ResetNES	fceux-am/src/fceu.cpp	/^void ResetNES(void) {$/;"	f
ResetRL	fceux-am/src/ppu.cpp	/^static void ResetRL(uint8 *target) {$/;"	f	file:
Restore	fceux-am/src/boards/dream.cpp	/^static void Restore(int version) {$/;"	f	file:
S	fceux-am/src/utils/md5.cpp	61;"	d	file:
S	fceux-am/src/x6502struct.h	/^        uint8 A,X,Y,S,P,mooPI;$/;"	m	struct:__X6502
S2E	fceux-am/src/boards/emu2413.c	700;"	d	file:
S74LS374MSync	fceux-am/src/boards/sachen.cpp	/^static void S74LS374MSync(uint8 mirr) {$/;"	f	file:
S74LS374NAPower	fceux-am/src/boards/sachen.cpp	/^static void S74LS374NAPower(void) {$/;"	f	file:
S74LS374NASynco	fceux-am/src/boards/sachen.cpp	/^static void S74LS374NASynco(void) {$/;"	f	file:
S74LS374NA_Init	fceux-am/src/boards/sachen.cpp	/^void S74LS374NA_Init(CartInfo *info) {$/;"	f
S74LS374NPower	fceux-am/src/boards/sachen.cpp	/^static void S74LS374NPower(void) {$/;"	f	file:
S74LS374NReset	fceux-am/src/boards/sachen.cpp	/^static void S74LS374NReset(void) {$/;"	f	file:
S74LS374NRestore	fceux-am/src/boards/sachen.cpp	/^static void S74LS374NRestore(int version) {$/;"	f	file:
S74LS374NSynco	fceux-am/src/boards/sachen.cpp	/^static void S74LS374NSynco(void) {$/;"	f	file:
S74LS374N_Init	fceux-am/src/boards/sachen.cpp	/^void S74LS374N_Init(CartInfo *info) {$/;"	f
S8259A_Init	fceux-am/src/boards/sachen.cpp	/^void S8259A_Init(CartInfo *info) { \/\/ Kevin's Horton 141 mapper$/;"	f
S8259B_Init	fceux-am/src/boards/sachen.cpp	/^void S8259B_Init(CartInfo *info) { \/\/ Kevin's Horton 138 mapper$/;"	f
S8259C_Init	fceux-am/src/boards/sachen.cpp	/^void S8259C_Init(CartInfo *info) { \/\/ Kevin's Horton 139 mapper$/;"	f
S8259D_Init	fceux-am/src/boards/sachen.cpp	/^void S8259D_Init(CartInfo *info) { \/\/ Kevin's Horton 137 mapper$/;"	f
S8259Reset	fceux-am/src/boards/sachen.cpp	/^static void S8259Reset(void) {$/;"	f	file:
S8259Restore	fceux-am/src/boards/sachen.cpp	/^static void S8259Restore(int version) {$/;"	f	file:
S8259Synco	fceux-am/src/boards/sachen.cpp	/^static void S8259Synco(void) {$/;"	f	file:
SA0036_Init	fceux-am/src/boards/sachen.cpp	/^void SA0036_Init(CartInfo *info) {$/;"	f
SA0037_Init	fceux-am/src/boards/sachen.cpp	/^void SA0037_Init(CartInfo *info) {$/;"	f
SA009Synco	fceux-am/src/boards/sachen.cpp	/^static void SA009Synco() {$/;"	f	file:
SA009_Init	fceux-am/src/boards/sachen.cpp	/^void SA009_Init(CartInfo *info) {$/;"	f
SA0161MSynco	fceux-am/src/boards/sachen.cpp	/^static void SA0161MSynco() {$/;"	f	file:
SA0161M_Init	fceux-am/src/boards/sachen.cpp	/^void SA0161M_Init(CartInfo *info) {$/;"	f
SA72007Synco	fceux-am/src/boards/sachen.cpp	/^static void SA72007Synco() {$/;"	f	file:
SA72007_Init	fceux-am/src/boards/sachen.cpp	/^void SA72007_Init(CartInfo *info) {$/;"	f
SA72008Synco	fceux-am/src/boards/sachen.cpp	/^static void SA72008Synco() {$/;"	f	file:
SA72008_Init	fceux-am/src/boards/sachen.cpp	/^void SA72008_Init(CartInfo *info) {$/;"	f
SA9602BPW	fceux-am/src/boards/sa-9602b.cpp	/^static void SA9602BPW(uint32 A, uint8 V) {$/;"	f	file:
SA9602BPower	fceux-am/src/boards/sa-9602b.cpp	/^static void SA9602BPower(void) {$/;"	f	file:
SA9602B_Init	fceux-am/src/boards/sa-9602b.cpp	/^void SA9602B_Init(CartInfo *info) {$/;"	f
SADPower	fceux-am/src/boards/sachen.cpp	/^static void SADPower(void) {$/;"	f	file:
SAPower	fceux-am/src/boards/sachen.cpp	/^static void SAPower(void) {$/;"	f	file:
SAROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SAROM_Init(CartInfo *info) {$/;"	f
SARestore	fceux-am/src/boards/sachen.cpp	/^static void SARestore(int version) {$/;"	f	file:
SBC	fceux-am/src/x6502.cpp	131;"	d	file:
SBROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SBROM_Init(CartInfo *info) {$/;"	f
SBUF_SIZE_MAX	abstract-machine/am/src/native/native-audio.c	4;"	d	file:
SCM_REV_STR	fceux-am/src/version.h	29;"	d
SCM_REV_STR	fceux-am/src/version.h	31;"	d
SCREEN_H	nemu/src/device/vga.c	10;"	d	file:
SCREEN_H	nemu/src/device/vga.c	13;"	d	file:
SCREEN_SIZE	nemu/src/device/vga.c	15;"	d	file:
SCREEN_W	nemu/src/device/vga.c	12;"	d	file:
SCREEN_W	nemu/src/device/vga.c	9;"	d	file:
SCROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SCROM_Init(CartInfo *info) {$/;"	f
SDL_FCEU_HOTKEY_EVENT	fceux-am/src/drivers/sdl/input.h	30;"	d
SDL_KEYMAP	nemu/src/device/keyboard.c	27;"	d	file:
SECTSIZE	abstract-machine/am/src/x86/qemu/boot/main.c	5;"	d	file:
SEEK_CUR	fceux-am/src/emufile.h	/^enum {SEEK_SET, SEEK_CUR, SEEK_END};$/;"	e	enum:__anon38
SEEK_END	fceux-am/src/emufile.h	/^enum {SEEK_SET, SEEK_CUR, SEEK_END};$/;"	e	enum:__anon38
SEEK_SET	fceux-am/src/emufile.h	/^enum {SEEK_SET, SEEK_CUR, SEEK_END};$/;"	e	enum:__anon38
SEG16	abstract-machine/am/src/x86.h	193;"	d
SEG32	abstract-machine/am/src/x86.h	198;"	d
SEG64	abstract-machine/am/src/x86.h	203;"	d
SEGTSS64	abstract-machine/am/src/x86.h	206;"	d
SEG_ASM	abstract-machine/am/src/x86/qemu/boot/start.S	/^#define SEG_ASM(type, base, lim)                          \\$/;"	d
SEG_KCODE	abstract-machine/am/src/nemu/isa/x86/cte.c	6;"	d	file:
SEG_KCODE	abstract-machine/am/src/x86/qemu/x86-qemu.h	7;"	d
SEG_KDATA	abstract-machine/am/src/nemu/isa/x86/cte.c	7;"	d	file:
SEG_KDATA	abstract-machine/am/src/x86/qemu/x86-qemu.h	8;"	d
SEG_NULLASM	abstract-machine/am/src/x86/qemu/boot/start.S	/^#define SEG_NULLASM   \\$/;"	d
SEG_TSS	abstract-machine/am/src/x86/qemu/x86-qemu.h	11;"	d
SEG_UCODE	abstract-machine/am/src/x86/qemu/x86-qemu.h	9;"	d
SEG_UDATA	abstract-machine/am/src/x86/qemu/x86-qemu.h	10;"	d
SERIAL_MMIO	nemu/src/device/serial.c	7;"	d	file:
SERIAL_PORT	abstract-machine/am/src/nemu/include/nemu.h	19;"	d
SERIAL_PORT	abstract-machine/am/src/nemu/include/nemu.h	25;"	d
SERIAL_PORT	nemu/src/device/serial.c	6;"	d	file:
SEROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SEROM_Init(CartInfo *info) {$/;"	f
SETTLE	fceux-am/src/boards/emu2413.c	/^{ SETTLE, ATTACK, DECAY, SUSHOLD, SUSTINE, RELEASE, FINISH };$/;"	e	enum:__anon40	file:
SEXT	nemu/include/macro.h	17;"	d
SFORMAT	fceux-am/src/state.h	/^struct SFORMAT$/;"	s
SFROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SFROM_Init(CartInfo *info) {$/;"	f
SGROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SGROM_Init(CartInfo *info) {$/;"	f
SHOW_SCREEN	nemu/src/device/vga.c	5;"	d	file:
SHROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SHROM_Init(CartInfo *info) {$/;"	f
SIB	nemu/src/isa/x86/decode.c	/^} SIB;$/;"	t	typeref:union:__anon58	file:
SIFC_4PLAYER	fceux-am/src/git.h	/^	SIFC_4PLAYER	= 3,$/;"	e	enum:ESIFC
SIFC_ARKANOID	fceux-am/src/git.h	/^	SIFC_ARKANOID	= 1,$/;"	e	enum:ESIFC
SIFC_BWORLD	fceux-am/src/git.h	/^	SIFC_BWORLD		= 13,$/;"	e	enum:ESIFC
SIFC_COUNT	fceux-am/src/git.h	/^	SIFC_COUNT = SIFC_TOPRIDER$/;"	e	enum:ESIFC
SIFC_FKB	fceux-am/src/git.h	/^	SIFC_FKB		= 4,$/;"	e	enum:ESIFC
SIFC_FTRAINERA	fceux-am/src/git.h	/^	SIFC_FTRAINERA	= 10,$/;"	e	enum:ESIFC
SIFC_FTRAINERB	fceux-am/src/git.h	/^	SIFC_FTRAINERB	= 11,$/;"	e	enum:ESIFC
SIFC_HYPERSHOT	fceux-am/src/git.h	/^	SIFC_HYPERSHOT	= 7,$/;"	e	enum:ESIFC
SIFC_MAHJONG	fceux-am/src/git.h	/^	SIFC_MAHJONG	= 8,$/;"	e	enum:ESIFC
SIFC_NONE	fceux-am/src/git.h	/^	SIFC_NONE		= 0,$/;"	e	enum:ESIFC
SIFC_OEKAKIDS	fceux-am/src/git.h	/^	SIFC_OEKAKIDS	= 12,$/;"	e	enum:ESIFC
SIFC_PEC586KB	fceux-am/src/git.h	/^	SIFC_PEC586KB	= 6,$/;"	e	enum:ESIFC
SIFC_QUIZKING	fceux-am/src/git.h	/^	SIFC_QUIZKING	= 9,$/;"	e	enum:ESIFC
SIFC_SHADOW	fceux-am/src/git.h	/^	SIFC_SHADOW		= 2,$/;"	e	enum:ESIFC
SIFC_SUBORKB	fceux-am/src/git.h	/^	SIFC_SUBORKB	= 5,$/;"	e	enum:ESIFC
SIFC_TOPRIDER	fceux-am/src/git.h	/^	SIFC_TOPRIDER	= 14,$/;"	e	enum:ESIFC
SIFC_UNSET	fceux-am/src/git.h	/^	SIFC_UNSET		= -1,$/;"	e	enum:ESIFC
SIRQStat	fceux-am/src/sound.cpp	/^static uint8 SIRQStat=0;$/;"	v	file:
SIS_DATACH	fceux-am/src/git.h	/^	SIS_DATACH		= 1,$/;"	e	enum:ESIS
SIS_NONE	fceux-am/src/git.h	/^	SIS_NONE		= 0,$/;"	e	enum:ESIS
SIS_NSF	fceux-am/src/git.h	/^	SIS_NSF			= 4,$/;"	e	enum:ESIS
SIS_NWC	fceux-am/src/git.h	/^	SIS_NWC			= 2,$/;"	e	enum:ESIS
SIS_VSUNISYSTEM	fceux-am/src/git.h	/^	SIS_VSUNISYSTEM	= 3,$/;"	e	enum:ESIS
SI_ARKANOID	fceux-am/src/git.h	/^	SI_ARKANOID		= 5,$/;"	e	enum:ESI
SI_COUNT	fceux-am/src/git.h	/^	SI_COUNT = SI_SNES_MOUSE$/;"	e	enum:ESI
SI_GAMEPAD	fceux-am/src/git.h	/^	SI_GAMEPAD		= 1,$/;"	e	enum:ESI
SI_MOUSE	fceux-am/src/git.h	/^	SI_MOUSE		= 6,$/;"	e	enum:ESI
SI_NONE	fceux-am/src/git.h	/^	SI_NONE			= 0,$/;"	e	enum:ESI
SI_POWERPADA	fceux-am/src/git.h	/^	SI_POWERPADA	= 3,$/;"	e	enum:ESI
SI_POWERPADB	fceux-am/src/git.h	/^	SI_POWERPADB	= 4,$/;"	e	enum:ESI
SI_SNES	fceux-am/src/git.h	/^	SI_SNES			= 7,$/;"	e	enum:ESI
SI_SNES_MOUSE	fceux-am/src/git.h	/^	SI_SNES_MOUSE	= 8,$/;"	e	enum:ESI
SI_UNSET	fceux-am/src/git.h	/^	SI_UNSET		= -1,$/;"	e	enum:ESI
SI_ZAPPER	fceux-am/src/git.h	/^	SI_ZAPPER		= 2,$/;"	e	enum:ESI
SKROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SKROM_Init(CartInfo *info) {$/;"	f
SL	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
SL1ROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SL1ROM_Init(CartInfo *info) {$/;"	f
SL2EG	fceux-am/src/boards/emu2413.c	103;"	d	file:
SL2ROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SL2ROM_Init(CartInfo *info) {$/;"	f
SLHook	fceux-am/src/input.h	/^	void SLHook(int w, uint8 *bg, uint8 *spr, uint32 linets, int final) { if(_SLHook) _SLHook(w,bg,spr,linets,final); }$/;"	f	struct:INPUTC
SLHook	fceux-am/src/input.h	/^	void SLHook(uint8 *bg, uint8 *spr, uint32 linets, int final) { if(_SLHook) _SLHook(bg,spr,linets,final); }$/;"	f	struct:INPUTCFC
SLOT_AMP_BITS	fceux-am/src/boards/emu2413.c	110;"	d	file:
SLROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SLROM_Init(CartInfo *info) {$/;"	f
SLWrap	fceux-am/src/boards/90.cpp	/^static void SLWrap(void)$/;"	f	file:
SL_BITS	fceux-am/src/boards/emu2413.c	98;"	d	file:
SL_MUTE	fceux-am/src/boards/emu2413.c	99;"	d	file:
SL_STEP	fceux-am/src/boards/emu2413.c	97;"	d	file:
SNROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SNROM_Init(CartInfo *info) {$/;"	f
SO	nemu/Makefile	/^SO = -so$/;"	m
SOROM_Init	fceux-am/src/boards/mmc1.cpp	/^void SOROM_Init(CartInfo *info) {$/;"	f
SOUNDTS	fceux-am/src/sound.h	56;"	d
SOUND_CONFIG	fceux-am/src/config.h	24;"	d
SOUND_CONFIG	fceux-am/src/config.h	27;"	d
SOUND_CONFIG	fceux-am/src/config.h	30;"	d
SOUND_HQ	fceux-am/src/config.h	8;"	d
SOUND_LQ	fceux-am/src/config.h	7;"	d
SOUND_NONE	fceux-am/src/config.h	6;"	d
SO_CFLAGS	nemu/Makefile	/^SO_CFLAGS = -fPIC -D_SHARE=1$/;"	m
SO_LDLAGS	nemu/Makefile	/^SO_LDLAGS = -shared -fPIC$/;"	m
SPR	fceux-am/src/ppu.cpp	/^} SPR;$/;"	t	typeref:struct:__anon45	file:
SPRAM	fceux-am/src/ppu.cpp	/^uint8 NTARAM[0x800], PALRAM[0x20], SPRAM[0x100], SPRBUF[0x100];$/;"	v
SPRB	fceux-am/src/ppu.cpp	/^} SPRB;$/;"	t	typeref:struct:__anon46	file:
SPRBUF	fceux-am/src/ppu.cpp	/^uint8 NTARAM[0x800], PALRAM[0x20], SPRAM[0x100], SPRBUF[0x100];$/;"	v
SPRITE_READ	fceux-am/src/ppu.cpp	/^struct SPRITE_READ {$/;"	s	file:
SP_BACK	fceux-am/src/ppu.cpp	1303;"	d	file:
SQ2C44100NTSC	fceux-am/src/fcoeffs.h	/^static const int32 SQ2C44100NTSC[SQ2NCOEFFS\/2]=$/;"	v
SQ2C44100PAL	fceux-am/src/fcoeffs.h	/^static const int32 SQ2C44100PAL[SQ2NCOEFFS\/2]=$/;"	v
SQ2C48000NTSC	fceux-am/src/fcoeffs.h	/^static const int32 SQ2C48000NTSC[SQ2NCOEFFS\/2]=$/;"	v
SQ2C48000PAL	fceux-am/src/fcoeffs.h	/^static const int32 SQ2C48000PAL[SQ2NCOEFFS\/2]=$/;"	v
SQ2C96000NTSC	fceux-am/src/fcoeffs.h	/^static const int32 SQ2C96000NTSC[SQ2NCOEFFS\/2]=$/;"	v
SQ2C96000PAL	fceux-am/src/fcoeffs.h	/^static const int32 SQ2C96000PAL[SQ2NCOEFFS\/2]=$/;"	v
SQ2NCOEFFS	fceux-am/src/fcoeffs.h	1;"	d
SQReload	fceux-am/src/sound.cpp	/^static void SQReload(int x, uint8 V)$/;"	f	file:
SRCS	abstract-machine/am/Makefile	/^SRCS      = $(addprefix src\/, $(AM_SRCS))$/;"	m
SRCS	abstract-machine/am/src/x86/qemu/boot/Makefile	/^SRCS := start.S main.c$/;"	m
SRCS	abstract-machine/klib/Makefile	/^SRCS = $(shell find src\/ -name "*.c")$/;"	m
SRCS	fceux-am/Makefile	/^SRCS      = $(FCEUX_SRC) $(ROM_SRC)$/;"	m
SRCS	nemu/Makefile	/^SRCS = $(shell find src\/ -name "*.c" | grep -v "isa\\|engine")$/;"	m
SRCS	nemu/tools/kvm-diff/Makefile	/^SRCS = $(shell find src\/ -name "*.c")$/;"	m
SRCS	nemu/tools/qemu-diff/Makefile	/^SRCS = $(shell find src\/ -name "*.c" | grep -v "isa")$/;"	m
SSSNROMClose	fceux-am/src/boards/famicombox.cpp	/^static void SSSNROMClose(void) {$/;"	f	file:
SSSNROMIRQHook	fceux-am/src/boards/famicombox.cpp	/^static void SSSNROMIRQHook(void) {$/;"	f	file:
SSSNROMPower	fceux-am/src/boards/famicombox.cpp	/^static void SSSNROMPower(void) {$/;"	f	file:
SSSNROMReset	fceux-am/src/boards/famicombox.cpp	/^static void SSSNROMReset(void) {$/;"	f	file:
SSSNROM_Init	fceux-am/src/boards/famicombox.cpp	/^void SSSNROM_Init(CartInfo *info) {$/;"	f
SSUNROMSync	fceux-am/src/boards/datalatch.cpp	/^static void SSUNROMSync(void) {$/;"	f	file:
SStateRegs	fceux-am/src/boards/69.cpp	/^static SFORMAT SStateRegs[] =$/;"	v	file:
SStateRegs	fceux-am/src/boards/vrc6.cpp	/^static SFORMAT SStateRegs[] =$/;"	v	file:
STARTUP	abstract-machine/am/src/x86/qemu/ioe.c	359;"	d	file:
STATE_IDLE	nemu/tools/kvm-diff/src/kvm.c	/^  STATE_IDLE,      \/\/ if encounter an int instruction, then set watchpoint$/;"	e	enum:__anon105	file:
STATE_INT_INSTR	nemu/tools/kvm-diff/src/kvm.c	/^  STATE_INT_INSTR, \/\/ if hit the watchpoint, then delete the watchpoint$/;"	e	enum:__anon105	file:
STATE_IRET_INSTR	nemu/tools/kvm-diff/src/kvm.c	/^  STATE_IRET_INSTR,\/\/ if hit the watchpoint, then delete the watchpoint$/;"	e	enum:__anon105	file:
STA_R	abstract-machine/am/src/x86.h	8;"	d
STA_W	abstract-machine/am/src/x86.h	7;"	d
STA_X	abstract-machine/am/src/x86.h	6;"	d
STREAM_BUF	nemu/src/device/audio.c	10;"	d	file:
STREAM_BUF_MAX_SIZE	nemu/src/device/audio.c	11;"	d	file:
STRINGIFY	abstract-machine/klib/include/klib-macros.h	10;"	d
STS_IG	abstract-machine/am/src/x86.h	12;"	d
STS_T32A	abstract-machine/am/src/x86.h	11;"	d
STS_TG	abstract-machine/am/src/x86.h	13;"	d
STUID	Makefile	/^	STUID=$(STUID) STUNAME=$(STUNAME) bash -c "$$(curl -s http:\/\/jyywiki.cn\/static\/submit.sh)"$/;"	m
ST_AB	fceux-am/src/x6502.cpp	317;"	d	file:
ST_ABI	fceux-am/src/x6502.cpp	318;"	d	file:
ST_ABX	fceux-am/src/x6502.cpp	319;"	d	file:
ST_ABY	fceux-am/src/x6502.cpp	320;"	d	file:
ST_IX	fceux-am/src/x6502.cpp	321;"	d	file:
ST_IY	fceux-am/src/x6502.cpp	322;"	d	file:
ST_ZP	fceux-am/src/x6502.cpp	314;"	d	file:
ST_ZPX	fceux-am/src/x6502.cpp	315;"	d	file:
ST_ZPY	fceux-am/src/x6502.cpp	316;"	d	file:
SUNSOFT_UNROM_Init	fceux-am/src/boards/datalatch.cpp	/^void SUNSOFT_UNROM_Init(CartInfo *info) {$/;"	f
SUSHOLD	fceux-am/src/boards/emu2413.c	/^{ SETTLE, ATTACK, DECAY, SUSHOLD, SUSTINE, RELEASE, FINISH };$/;"	e	enum:__anon40	file:
SUSTINE	fceux-am/src/boards/emu2413.c	/^{ SETTLE, ATTACK, DECAY, SUSHOLD, SUSTINE, RELEASE, FINISH };$/;"	e	enum:__anon40	file:
SVR	abstract-machine/am/src/x86/qemu/ioe.c	354;"	d	file:
SWRAM	fceux-am/src/boards/186.cpp	/^static uint8 SWRAM[3072];$/;"	v	file:
SYNC_ADDR	abstract-machine/am/src/nemu/ioe/gpu.c	4;"	d	file:
SYSCALL_INSTR_LEN	abstract-machine/am/src/native/cte.c	8;"	d	file:
SaveGame	fceux-am/src/cart.h	/^	uint8 *SaveGame[4];		\/\/ Pointers to memory to save\/load.$/;"	m	struct:__anon37
SaveGameLen	fceux-am/src/cart.h	/^	uint32 SaveGameLen[4];	\/\/ How much memory to save\/load.$/;"	m	struct:__anon37
ScreenON	fceux-am/src/boards/mmc5.cpp	28;"	d	file:
ScreenON	fceux-am/src/ppu.cpp	46;"	d	file:
SegDesc	abstract-machine/am/src/x86.h	/^} SegDesc;$/;"	t	typeref:struct:__anon1
SensorDelay	fceux-am/src/boards/178.cpp	/^static int32 SensorDelay;$/;"	v	file:
SetInput	fceux-am/src/ines.cpp	/^static void SetInput(void) {$/;"	f	file:
SetInputStuff	fceux-am/src/input.cpp	/^static void SetInputStuff(int port)$/;"	f	file:
SetInputStuffFC	fceux-am/src/input.cpp	/^static void SetInputStuffFC()$/;"	f	file:
SetNESDeemph_OldHacky	fceux-am/src/palette.cpp	/^void SetNESDeemph_OldHacky(uint8 d, int force)$/;"	f
SetNESSoundMap	fceux-am/src/sound.cpp	/^void SetNESSoundMap(void)$/;"	f
SetPaletteBlitToHigh	fceux-am/src/drivers/common/vidblit.cpp	/^void SetPaletteBlitToHigh(uint8 *src)$/;"	f
SetReadHandler	fceux-am/src/fceu.cpp	/^void SetReadHandler(int32 start, int32 end, readfunc func) {$/;"	f
SetSoundVariables	fceux-am/src/sound.cpp	/^void SetSoundVariables(void)$/;"	f
SetWriteHandler	fceux-am/src/fceu.cpp	/^void SetWriteHandler(int32 start, int32 end, writefunc func) {$/;"	f
SetupCartCHRMapping	fceux-am/src/cart.cpp	/^void SetupCartCHRMapping(int chip, uint8 *p, uint32 size, int ram) {$/;"	f
SetupCartMirroring	fceux-am/src/cart.cpp	/^void SetupCartMirroring(int m, int hard, uint8 *extra) {$/;"	f
SetupCartPRGMapping	fceux-am/src/cart.cpp	/^void SetupCartPRGMapping(int chip, uint8 *p, uint32 size, int ram) {$/;"	f
SexyFilter	fceux-am/src/filter.cpp	/^void SexyFilter(int32 *in, int32 *out, int32 count)$/;"	f
SexyFilter2	fceux-am/src/filter.cpp	/^void SexyFilter2(int32 *in, int32 count)$/;"	f
ShowFPS	fceux-am/src/video.cpp	/^void ShowFPS(void)$/;"	f
Show_FPS	fceux-am/src/video.cpp	/^bool Show_FPS = false;$/;"	v
SilenceSound	fceux-am/src/drivers/sdl/sdl-sound.cpp	/^SilenceSound(int n)$/;"	f
SndRate	fceux-am/src/fceu.h	/^	uint32 SndRate;$/;"	m	struct:__anon32
SoundVolume	fceux-am/src/fceu.h	/^	int SoundVolume;		\/\/Master volume$/;"	m	struct:__anon32
SpAdrHI	fceux-am/src/ppu.cpp	42;"	d	file:
Speed	fceux-am/src/sound.h	/^	uint8 Speed;$/;"	m	struct:__anon36
SpeedThrottle	fceux-am/src/drivers/sdl/sdl-throttle.cpp	/^SpeedThrottle()$/;"	f
Sprite16	fceux-am/src/boards/mmc5.cpp	30;"	d	file:
Sprite16	fceux-am/src/ppu.cpp	40;"	d	file:
SpriteBlurp	fceux-am/src/ppu.cpp	/^static uint8 numsprites, SpriteBlurp;$/;"	v	file:
SpriteDMA	fceux-am/src/ppu.cpp	/^uint8 SpriteDMA = 0; \/\/ $4014 \/ Writing $xx copies 256 bytes by reading from $xx00-$xxFF and writing to $2004 (OAM data)$/;"	v
SpriteLeft8	fceux-am/src/ppu.cpp	50;"	d	file:
SpriteON	fceux-am/src/boards/mmc5.cpp	27;"	d	file:
SpriteON	fceux-am/src/ppu.cpp	45;"	d	file:
Square1Volume	fceux-am/src/fceu.h	/^	int Square1Volume;$/;"	m	struct:__anon32
Square2Volume	fceux-am/src/fceu.h	/^	int Square2Volume;$/;"	m	struct:__anon32
StateRegs	fceux-am/src/boards/01-222.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/09-034a.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/103.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/106.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/108.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/112.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/116.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/117.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/120.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/12in1.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/15.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/151.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/156.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/164.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/168.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/170.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/175.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/176.cpp	/^static SFORMAT StateRegs[]=$/;"	v	file:
StateRegs	fceux-am/src/boards/177.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/178.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/18.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/183.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/185.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/186.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/193.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/206.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/222.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/225.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/228.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/230.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/232.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/234.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/235.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/244.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/246.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/252.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/253.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/28.cpp	/^static SFORMAT StateRegs[]=$/;"	v	file:
StateRegs	fceux-am/src/boards/32.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/33.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/34.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/36.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/3d-block.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/40.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/41.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/42.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/43.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/46.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/50.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/51.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/57.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/62.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/65.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/67.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/68.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/69.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/71.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/72.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/77.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/79.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/80013-B.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/8157.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/82.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/88.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/91.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/96.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/99.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ac-08.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ax5705.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/bandai.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/bb.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/bmc13in1jy110.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/bmc42in1r.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/bmc64in1nr.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/bmc70in1.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/bonza.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/bs-5.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/cheapocabra.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/cityfighter.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/dance2000.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/edu2000.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/eh8813a.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/famicombox.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ffe.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ghostbusters63in1.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/gs-2004.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/gs-2013.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/hp898f.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/inlnsf.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7010.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7012.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7013.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7016.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7017.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7030.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7031.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7032.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7037.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/ks7057.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/le05.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/lh32.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/lh53.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/mihunche.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/mmc2and4.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/n625092.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/onebus.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/pec-586.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/sb-2000.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/sc-127.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/sl1632.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/subor.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/supervision.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/t-262.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/tengen.cpp	/^static SFORMAT StateRegs[] = {$/;"	v	file:
StateRegs	fceux-am/src/boards/tf-1201.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/vrc1.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/vrc2and4.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/vrc3.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/vrc5.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/vrc6.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/vrc7.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/vrc7p.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs	fceux-am/src/boards/yoko.cpp	/^static SFORMAT StateRegs[] =$/;"	v	file:
StateRegs207	fceux-am/src/boards/80.cpp	/^static SFORMAT StateRegs207[] =$/;"	v	file:
StateRegs80	fceux-am/src/boards/80.cpp	/^static SFORMAT StateRegs80[] =$/;"	v	file:
StateRegs95	fceux-am/src/boards/80.cpp	/^static SFORMAT StateRegs95[] =$/;"	v	file:
StateRestore	fceux-am/src/boards/01-222.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/09-034a.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/103.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/106.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/108.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/112.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/116.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/117.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/120.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/12in1.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/15.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/151.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/156.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/164.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/168.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/170.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/175.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/176.cpp	/^static void StateRestore(int version)$/;"	f	file:
StateRestore	fceux-am/src/boards/177.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/178.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/18.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/183.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/193.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/206.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/222.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/225.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/228.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/230.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/232.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/234.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/244.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/246.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/252.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/253.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/28.cpp	/^static void StateRestore(int version)$/;"	f	file:
StateRestore	fceux-am/src/boards/32.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/33.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/34.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/3d-block.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/40.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/41.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/42.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/43.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/46.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/50.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/51.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/57.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/62.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/65.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/67.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/68.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/69.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/71.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/72.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/77.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/79.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/80.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/80013-B.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/82.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/88.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/91.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/96.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/99.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ac-08.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/addrlatch.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ax5705.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/bandai.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/bb.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/bmc13in1jy110.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/bmc42in1r.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/bmc64in1nr.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/bmc70in1.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/bonza.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/bs-5.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/cheapocabra.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/cityfighter.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/dance2000.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/datalatch.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/eh8813a.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/famicombox.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ffe.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ghostbusters63in1.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/gs-2004.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/gs-2013.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/hp898f.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/inlnsf.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/karaoke.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ks7010.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ks7012.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ks7013.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ks7016.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ks7017.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ks7030.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ks7031.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ks7032.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/ks7037.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/lh32.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/lh53.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/mihunche.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/mmc2and4.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/n625092.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/onebus.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/pec-586.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/sb-2000.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/sc-127.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/sl1632.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/subor.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/tengen.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/tf-1201.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/unrom512.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/vrc1.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/vrc2and4.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/vrc3.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/vrc5.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/vrc6.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/vrc7.cpp	/^static void StateRestore(int version) {$/;"	f	file:
StateRestore	fceux-am/src/boards/vrc7p.cpp	/^static void StateRestore(int version) {$/;"	f	file:
Strobe	fceux-am/src/input.h	/^	void Strobe() { if(_Strobe) _Strobe(); }$/;"	f	struct:INPUTCFC
Strobe	fceux-am/src/input.h	/^	void Strobe(int w) { if(_Strobe) _Strobe(w); }$/;"	f	struct:INPUTC
StrobeGP	fceux-am/src/input.cpp	/^static void StrobeGP(int w)$/;"	f	file:
Super24CW	fceux-am/src/boards/super24.cpp	/^static void Super24CW(uint32 A, uint8 V) {$/;"	f	file:
Super24Close	fceux-am/src/boards/super24.cpp	/^static void Super24Close(void) {$/;"	f	file:
Super24PW	fceux-am/src/boards/super24.cpp	/^static void Super24PW(uint32 A, uint8 V) {$/;"	f	file:
Super24Power	fceux-am/src/boards/super24.cpp	/^static void Super24Power(void) {$/;"	f	file:
Super24Reset	fceux-am/src/boards/super24.cpp	/^static void Super24Reset(void) {$/;"	f	file:
Super24_Init	fceux-am/src/boards/super24.cpp	/^void Super24_Init(CartInfo *info) {$/;"	f
SuperPower	fceux-am/src/boards/supervision.cpp	/^static void SuperPower(void) {$/;"	f	file:
SuperReset	fceux-am/src/boards/supervision.cpp	/^static void SuperReset(void) {$/;"	f	file:
SuperRestore	fceux-am/src/boards/supervision.cpp	/^static void SuperRestore(int version) {$/;"	f	file:
Supervision16_Init	fceux-am/src/boards/supervision.cpp	/^void Supervision16_Init(CartInfo *info) {$/;"	f
SweepCount	fceux-am/src/sound.cpp	/^static uint8 SweepCount[2];$/;"	v	file:
SweepReload	fceux-am/src/sound.cpp	/^static uint8 SweepReload[2];$/;"	v	file:
Sync	fceux-am/src/boards/01-222.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/09-034a.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/103.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/106.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/108.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/112.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/116.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/117.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/120.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/121.cpp	/^static void Sync() {$/;"	f	file:
Sync	fceux-am/src/boards/12in1.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/15.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/151.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/156.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/164.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/168.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/170.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/175.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/176.cpp	/^static void Sync(void)$/;"	f	file:
Sync	fceux-am/src/boards/177.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/178.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/18.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/185.cpp	/^static void (*Sync)(void);$/;"	v	file:
Sync	fceux-am/src/boards/186.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/193.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/206.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/222.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/225.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/228.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/230.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/232.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/234.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/235.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/244.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/246.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/252.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/253.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/28.cpp	/^static void Sync()$/;"	f	file:
Sync	fceux-am/src/boards/32.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/33.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/34.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/36.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/3d-block.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/40.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/41.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/42.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/43.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/46.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/50.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/51.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/57.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/62.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/65.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/67.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/68.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/69.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/71.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/72.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/77.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/79.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/80.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/80013-B.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/8157.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/82.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/88.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/91.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/96.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/99.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ac-08.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ax5705.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/bandai.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/bb.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/bmc13in1jy110.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/bmc42in1r.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/bmc64in1nr.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/bmc70in1.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/bonza.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/bs-5.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/cheapocabra.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/cityfighter.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/dance2000.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/dream.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/edu2000.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/eh8813a.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/famicombox.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ffe.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ghostbusters63in1.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/gs-2004.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/gs-2013.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/hp898f.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/inlnsf.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/karaoke.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ks7010.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ks7012.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ks7013.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ks7016.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ks7017.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ks7030.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ks7031.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ks7032.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/ks7057.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/le05.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/lh32.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/lh53.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/mihunche.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/mmc2and4.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/n625092.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/onebus.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/pec-586.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/sb-2000.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/sc-127.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/sl1632.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/subor.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/supervision.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/t-262.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/tengen.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/vrc1.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/vrc2and4.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/vrc3.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/vrc5.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/vrc6.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/vrc7.cpp	/^static void Sync(void) {$/;"	f	file:
Sync	fceux-am/src/boards/vrc7p.cpp	/^static void Sync(void) {$/;"	f	file:
Sync181	fceux-am/src/boards/185.cpp	/^static void Sync181(void) {$/;"	f	file:
Sync185	fceux-am/src/boards/185.cpp	/^static void Sync185(void) {$/;"	f	file:
Sync3	fceux-am/src/boards/164.cpp	/^static void Sync3(void) {$/;"	f	file:
SyncCHR	fceux-am/src/boards/116.cpp	/^static void SyncCHR(void) {$/;"	f	file:
SyncChr	fceux-am/src/boards/183.cpp	/^static void SyncChr(void) {$/;"	f	file:
SyncChr	fceux-am/src/boards/tf-1201.cpp	/^static void SyncChr(void) {$/;"	f	file:
SyncHQ	fceux-am/src/boards/n106.cpp	/^static void SyncHQ(int32 ts) {$/;"	f	file:
SyncKS7037	fceux-am/src/boards/ks7037.cpp	/^static void SyncKS7037(void) {$/;"	f	file:
SyncLH10	fceux-am/src/boards/ks7037.cpp	/^static void SyncLH10(void) {$/;"	f	file:
SyncMIR	fceux-am/src/boards/116.cpp	/^static void SyncMIR(void) {$/;"	f	file:
SyncMirr	fceux-am/src/boards/183.cpp	/^static void SyncMirr(void) {$/;"	f	file:
SyncMirror	fceux-am/src/boards/28.cpp	/^void SyncMirror()$/;"	f
SyncMirror	fceux-am/src/boards/n106.cpp	/^static void SyncMirror()$/;"	f	file:
SyncPRG	fceux-am/src/boards/116.cpp	/^static void SyncPRG(void) {$/;"	f	file:
SyncPRG	fceux-am/src/boards/n106.cpp	/^static void SyncPRG(void) {$/;"	f	file:
SyncPrg	fceux-am/src/boards/183.cpp	/^static void SyncPrg(void) {$/;"	f	file:
SyncPrg	fceux-am/src/boards/tf-1201.cpp	/^static void SyncPrg(void) {$/;"	f	file:
TBROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TBROM_Init(CartInfo *info) {$/;"	f
TCA01Power	fceux-am/src/boards/sachen.cpp	/^static void TCA01Power(void) {$/;"	f	file:
TCA01_Init	fceux-am/src/boards/sachen.cpp	/^void TCA01_Init(CartInfo *info) {$/;"	f
TCCR	abstract-machine/am/src/x86/qemu/ioe.c	377;"	d	file:
TCU01Power	fceux-am/src/boards/sachen.cpp	/^static void TCU01Power(void) {$/;"	f	file:
TCU01Restore	fceux-am/src/boards/sachen.cpp	/^static void TCU01Restore(int version) {$/;"	f	file:
TCU01Synco	fceux-am/src/boards/sachen.cpp	/^static void TCU01Synco() {$/;"	f	file:
TCU01_Init	fceux-am/src/boards/sachen.cpp	/^void TCU01_Init(CartInfo *info) {$/;"	f
TCU02Power	fceux-am/src/boards/sachen.cpp	/^static void TCU02Power(void) {$/;"	f	file:
TCU02Restore	fceux-am/src/boards/sachen.cpp	/^static void TCU02Restore(int version) {$/;"	f	file:
TCU02Synco	fceux-am/src/boards/sachen.cpp	/^static void TCU02Synco() {$/;"	f	file:
TCU02_Init	fceux-am/src/boards/sachen.cpp	/^void TCU02_Init(CartInfo *info) {$/;"	f
TDCR	abstract-machine/am/src/x86/qemu/ioe.c	378;"	d	file:
TEROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TEROM_Init(CartInfo *info) {$/;"	f
TFROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TFROM_Init(CartInfo *info) {$/;"	f
TGROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TGROM_Init(CartInfo *info) {$/;"	f
TICR	abstract-machine/am/src/x86/qemu/ioe.c	376;"	d	file:
TIMER	abstract-machine/am/src/x86/qemu/ioe.c	368;"	d	file:
TIMER_HZ	abstract-machine/am/src/native/cte.c	4;"	d	file:
TIMER_HZ	nemu/src/device/alarm.c	5;"	d	file:
TKROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TKROM_Init(CartInfo *info) {$/;"	f
TKSMIR	fceux-am/src/boards/et-4320.cpp	/^static uint8 TKSMIR[8];$/;"	v	file:
TKSMIR	fceux-am/src/boards/mmc3.cpp	/^static uint8 TKSMIR[8];$/;"	v	file:
TKSPPU	fceux-am/src/boards/et-4320.cpp	/^static void TKSPPU(uint32 A) {$/;"	f	file:
TKSPPU	fceux-am/src/boards/mmc3.cpp	/^static void TKSPPU(uint32 A) {$/;"	f	file:
TKSROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TKSROM_Init(CartInfo *info) {$/;"	f
TKSWRAP	fceux-am/src/boards/mmc3.cpp	/^static void TKSWRAP(uint32 A, uint8 V) {$/;"	f	file:
TK_EQ	nemu/src/monitor/debug/expr.c	/^  TK_NOTYPE = 256, TK_EQ,$/;"	e	enum:__anon61	file:
TK_NOTYPE	nemu/src/monitor/debug/expr.c	/^  TK_NOTYPE = 256, TK_EQ,$/;"	e	enum:__anon61	file:
TL	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
TL2EG	fceux-am/src/boards/emu2413.c	102;"	d	file:
TLROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TLROM_Init(CartInfo *info) {$/;"	f
TLSROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TLSROM_Init(CartInfo *info) {$/;"	f
TL_BITS	fceux-am/src/boards/emu2413.c	93;"	d	file:
TL_MUTE	fceux-am/src/boards/emu2413.c	94;"	d	file:
TL_STEP	fceux-am/src/boards/emu2413.c	92;"	d	file:
TMasterRomInfo	fceux-am/src/ines.h	/^struct TMasterRomInfo$/;"	s
TODO	nemu/include/debug.h	29;"	d
TOFIXNUM	fceux-am/src/ppu.cpp	1134;"	d	file:
TOINDEX	fceux-am/src/boards/n106.cpp	242;"	d	file:
TOPRIDER_NUM_BUTTONS	fceux-am/src/drivers/sdl/main.h	81;"	d
TOSTRING	abstract-machine/klib/include/klib-macros.h	11;"	d
TPR	abstract-machine/am/src/x86/qemu/ioe.c	352;"	d	file:
TQROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TQROM_Init(CartInfo *info) {$/;"	f
TQWRAP	fceux-am/src/boards/mmc3.cpp	/^static void TQWRAP(uint32 A, uint8 V) {$/;"	f	file:
TRAP_PAGE_START	abstract-machine/am/src/native/platform.c	10;"	d	file:
TSROM_Init	fceux-am/src/boards/mmc3.cpp	/^void TSROM_Init(CartInfo *info) {$/;"	f
TSS32	abstract-machine/am/src/x86.h	/^} __attribute__((packed)) TSS32;$/;"	t	typeref:struct:__anon4
TSS64	abstract-machine/am/src/x86.h	/^} __attribute__((packed)) TSS64;$/;"	t	typeref:struct:__anon5
TV_system	fceux-am/src/ines.h	/^	uint8 TV_system;             \/\/ 12$/;"	m	struct:iNES_HEADER
T_IRQ0	abstract-machine/am/src/x86.h	34;"	d
Tek_StateRegs	fceux-am/src/boards/90.cpp	/^static SFORMAT Tek_StateRegs[] = {$/;"	v	file:
TempAddr	fceux-am/src/ppu.cpp	/^uint32 TempAddr = 0, RefreshAddr = 0, DummyRead = 0, NTRefreshAddr = 0;$/;"	v
TempAddrT	fceux-am/src/ppu.cpp	/^static uint16 TempAddrT, RefreshAddrT;$/;"	v	file:
TestCommandState	fceux-am/src/driver.h	/^typedef int TestCommandState(int cmd);$/;"	t
Token	nemu/src/monitor/debug/expr.c	/^} Token;$/;"	t	typeref:struct:token	file:
TotalScanlines	fceux-am/src/fceu.h	/^	int TotalScanlines() { return LastSLine - FirstSLine + 1; }$/;"	f	struct:__anon32
TransformerChar	fceux-am/src/boards/transformer.cpp	/^static int TransformerCycleCount, TransformerChar = 0;$/;"	v	file:
TransformerClose	fceux-am/src/boards/transformer.cpp	/^static void TransformerClose(void) {$/;"	f	file:
TransformerCycleCount	fceux-am/src/boards/transformer.cpp	/^static int TransformerCycleCount, TransformerChar = 0;$/;"	v	file:
TransformerIRQHook	fceux-am/src/boards/transformer.cpp	/^static void TransformerIRQHook(int a) {$/;"	f	file:
TransformerKeys	fceux-am/src/boards/transformer.cpp	/^static unsigned int *TransformerKeys, oldkeys[256];$/;"	v	file:
TransformerPower	fceux-am/src/boards/transformer.cpp	/^static void TransformerPower(void) {$/;"	f	file:
Transformer_Init	fceux-am/src/boards/transformer.cpp	/^void Transformer_Init(CartInfo *info) {$/;"	f
TriCount	fceux-am/src/sound.cpp	/^\/*static*\/ uint8 TriCount=0;$/;"	v
TriMode	fceux-am/src/sound.cpp	/^static uint8 TriMode=0;$/;"	v	file:
TriangleVolume	fceux-am/src/fceu.h	/^	int TriangleVolume;$/;"	m	struct:__anon32
TriggerNMI	fceux-am/src/x6502.cpp	/^void TriggerNMI(void)$/;"	f
TriggerNMI2	fceux-am/src/x6502.cpp	/^void TriggerNMI2(void)$/;"	f
UNIFchrrama	fceux-am/src/unused.cpp	/^uint8 *UNIFchrrama = 0;$/;"	v
UNL158BPW	fceux-am/src/boards/158B.cpp	/^static void UNL158BPW(uint32 A, uint8 V) {$/;"	f	file:
UNL158BPower	fceux-am/src/boards/158B.cpp	/^static void UNL158BPower(void) {$/;"	f	file:
UNL158B_Init	fceux-am/src/boards/158B.cpp	/^void UNL158B_Init(CartInfo *info) {$/;"	f
UNL2000Hook	fceux-am/src/boards/dance2000.cpp	/^static void UNL2000Hook(uint32 A) {$/;"	f	file:
UNL22211Power	fceux-am/src/boards/01-222.cpp	/^static void UNL22211Power(void) {$/;"	f	file:
UNL22211_Init	fceux-am/src/boards/01-222.cpp	/^void UNL22211_Init(CartInfo *info) {$/;"	f
UNL3DBlockIRQHook	fceux-am/src/boards/3d-block.cpp	/^static void UNL3DBlockIRQHook(int a) {$/;"	f	file:
UNL3DBlockPower	fceux-am/src/boards/3d-block.cpp	/^static void UNL3DBlockPower(void) {$/;"	f	file:
UNL3DBlockReset	fceux-am/src/boards/3d-block.cpp	/^static void UNL3DBlockReset(void) {$/;"	f	file:
UNL3DBlock_Init	fceux-am/src/boards/3d-block.cpp	/^void UNL3DBlock_Init(CartInfo *info) {$/;"	f
UNL43272Reset	fceux-am/src/boards/addrlatch.cpp	/^static void UNL43272Reset(void) {$/;"	f	file:
UNL43272Sync	fceux-am/src/boards/addrlatch.cpp	/^static void UNL43272Sync(void) {$/;"	f	file:
UNL43272_Init	fceux-am/src/boards/addrlatch.cpp	/^void UNL43272_Init(CartInfo *info) {$/;"	f
UNL6035052Power	fceux-am/src/boards/603-5052.cpp	/^static void UNL6035052Power(void) {$/;"	f	file:
UNL6035052_Init	fceux-am/src/boards/603-5052.cpp	/^void UNL6035052_Init(CartInfo *info) {$/;"	f
UNL7017IRQ	fceux-am/src/boards/ks7017.cpp	/^static void UNL7017IRQ(int a) {$/;"	f	file:
UNL8157Power	fceux-am/src/boards/8157.cpp	/^static void UNL8157Power(void) {$/;"	f	file:
UNL8157Reset	fceux-am/src/boards/8157.cpp	/^static void UNL8157Reset(void) {$/;"	f	file:
UNL8157Restore	fceux-am/src/boards/8157.cpp	/^static void UNL8157Restore(int version) {$/;"	f	file:
UNL8157_Init	fceux-am/src/boards/8157.cpp	/^void UNL8157_Init(CartInfo *info) {$/;"	f
UNL8237ACW	fceux-am/src/boards/8237.cpp	/^static void UNL8237ACW(uint32 A, uint8 V) {$/;"	f	file:
UNL8237APW	fceux-am/src/boards/8237.cpp	/^static void UNL8237APW(uint32 A, uint8 V) {$/;"	f	file:
UNL8237A_Init	fceux-am/src/boards/8237.cpp	/^void UNL8237A_Init(CartInfo *info) {$/;"	f
UNL8237CW	fceux-am/src/boards/8237.cpp	/^static void UNL8237CW(uint32 A, uint8 V) {$/;"	f	file:
UNL8237PW	fceux-am/src/boards/8237.cpp	/^static void UNL8237PW(uint32 A, uint8 V) {$/;"	f	file:
UNL8237Power	fceux-am/src/boards/8237.cpp	/^static void UNL8237Power(void) {$/;"	f	file:
UNL8237_Init	fceux-am/src/boards/8237.cpp	/^void UNL8237_Init(CartInfo *info) {$/;"	f
UNLA9746Power	fceux-am/src/boards/a9746.cpp	/^static void UNLA9746Power(void) {$/;"	f	file:
UNLA9746_Init	fceux-am/src/boards/a9746.cpp	/^void UNLA9746_Init(CartInfo *info) {$/;"	f
UNLAX5705Power	fceux-am/src/boards/ax5705.cpp	/^static void UNLAX5705Power(void) {$/;"	f	file:
UNLAX5705_Init	fceux-am/src/boards/ax5705.cpp	/^void UNLAX5705_Init(CartInfo *info) {$/;"	f
UNLBBPower	fceux-am/src/boards/bb.cpp	/^static void UNLBBPower(void) {$/;"	f	file:
UNLBB_Init	fceux-am/src/boards/bb.cpp	/^void UNLBB_Init(CartInfo *info) {$/;"	f
UNLBMW8544CW	fceux-am/src/boards/BMW8544.cpp	/^static void UNLBMW8544CW(uint32 A, uint8 V) {$/;"	f	file:
UNLBMW8544PW	fceux-am/src/boards/BMW8544.cpp	/^static void UNLBMW8544PW(uint32 A, uint8 V) {$/;"	f	file:
UNLBMW8544Power	fceux-am/src/boards/BMW8544.cpp	/^static void UNLBMW8544Power(void) {$/;"	f	file:
UNLBMW8544_Init	fceux-am/src/boards/BMW8544.cpp	/^void UNLBMW8544_Init(CartInfo *info) {$/;"	f
UNLCC21Power	fceux-am/src/boards/mihunche.cpp	/^static void UNLCC21Power(void) {$/;"	f	file:
UNLCC21_Init	fceux-am/src/boards/mihunche.cpp	/^void UNLCC21_Init(CartInfo *info) {$/;"	f
UNLCITYFIGHTIRQ	fceux-am/src/boards/cityfighter.cpp	/^static void UNLCITYFIGHTIRQ(int a) {$/;"	f	file:
UNLCITYFIGHTPower	fceux-am/src/boards/cityfighter.cpp	/^static void UNLCITYFIGHTPower(void) {$/;"	f	file:
UNLCITYFIGHT_Init	fceux-am/src/boards/cityfighter.cpp	/^void UNLCITYFIGHT_Init(CartInfo *info) {$/;"	f
UNLD2000Close	fceux-am/src/boards/dance2000.cpp	/^static void UNLD2000Close(void) {$/;"	f	file:
UNLD2000Power	fceux-am/src/boards/dance2000.cpp	/^static void UNLD2000Power(void) {$/;"	f	file:
UNLD2000_Init	fceux-am/src/boards/dance2000.cpp	/^void UNLD2000_Init(CartInfo *info) {$/;"	f
UNLEDU2000Close	fceux-am/src/boards/edu2000.cpp	/^static void UNLEDU2000Close(void) {$/;"	f	file:
UNLEDU2000Power	fceux-am/src/boards/edu2000.cpp	/^static void UNLEDU2000Power(void) {$/;"	f	file:
UNLEDU2000Restore	fceux-am/src/boards/edu2000.cpp	/^static void UNLEDU2000Restore(int version) {$/;"	f	file:
UNLEDU2000_Init	fceux-am/src/boards/edu2000.cpp	/^void UNLEDU2000_Init(CartInfo *info) {$/;"	f
UNLEH8813A_Init	fceux-am/src/boards/eh8813a.cpp	/^void UNLEH8813A_Init(CartInfo *info) {$/;"	f
UNLFS304_Init	fceux-am/src/boards/164.cpp	/^void UNLFS304_Init(CartInfo *info) {$/;"	f
UNLH2288_Init	fceux-am/src/boards/h2288.cpp	/^void UNLH2288_Init(CartInfo *info) {$/;"	f
UNLKOF97Power	fceux-am/src/boards/kof97.cpp	/^static void UNLKOF97Power(void) {$/;"	f	file:
UNLKOF97_Init	fceux-am/src/boards/kof97.cpp	/^void UNLKOF97_Init(CartInfo *info) {$/;"	f
UNLKS7010Power	fceux-am/src/boards/ks7010.cpp	/^static void UNLKS7010Power(void) {$/;"	f	file:
UNLKS7010Reset	fceux-am/src/boards/ks7010.cpp	/^static void UNLKS7010Reset(void) {$/;"	f	file:
UNLKS7010_Init	fceux-am/src/boards/ks7010.cpp	/^void UNLKS7010_Init(CartInfo *info) {$/;"	f
UNLKS7012Close	fceux-am/src/boards/ks7012.cpp	/^static void UNLKS7012Close(void) {$/;"	f	file:
UNLKS7012Power	fceux-am/src/boards/ks7012.cpp	/^static void UNLKS7012Power(void) {$/;"	f	file:
UNLKS7012Reset	fceux-am/src/boards/ks7012.cpp	/^static void UNLKS7012Reset(void) {$/;"	f	file:
UNLKS7012_Init	fceux-am/src/boards/ks7012.cpp	/^void UNLKS7012_Init(CartInfo *info) {$/;"	f
UNLKS7013BPower	fceux-am/src/boards/ks7013.cpp	/^static void UNLKS7013BPower(void) {$/;"	f	file:
UNLKS7013BReset	fceux-am/src/boards/ks7013.cpp	/^static void UNLKS7013BReset(void) {$/;"	f	file:
UNLKS7013B_Init	fceux-am/src/boards/ks7013.cpp	/^void UNLKS7013B_Init(CartInfo *info) {$/;"	f
UNLKS7016Power	fceux-am/src/boards/ks7016.cpp	/^static void UNLKS7016Power(void) {$/;"	f	file:
UNLKS7016_Init	fceux-am/src/boards/ks7016.cpp	/^void UNLKS7016_Init(CartInfo *info) {$/;"	f
UNLKS7017Close	fceux-am/src/boards/ks7017.cpp	/^static void UNLKS7017Close(void) {$/;"	f	file:
UNLKS7017Power	fceux-am/src/boards/ks7017.cpp	/^static void UNLKS7017Power(void) {$/;"	f	file:
UNLKS7017_Init	fceux-am/src/boards/ks7017.cpp	/^void UNLKS7017_Init(CartInfo *info) {$/;"	f
UNLKS7030Close	fceux-am/src/boards/ks7030.cpp	/^static void UNLKS7030Close(void) {$/;"	f	file:
UNLKS7030Power	fceux-am/src/boards/ks7030.cpp	/^static void UNLKS7030Power(void) {$/;"	f	file:
UNLKS7030_Init	fceux-am/src/boards/ks7030.cpp	/^void UNLKS7030_Init(CartInfo *info) {$/;"	f
UNLKS7031Power	fceux-am/src/boards/ks7031.cpp	/^static void UNLKS7031Power(void) {$/;"	f	file:
UNLKS7031_Init	fceux-am/src/boards/ks7031.cpp	/^void UNLKS7031_Init(CartInfo *info) {$/;"	f
UNLKS7032Power	fceux-am/src/boards/ks7032.cpp	/^static void UNLKS7032Power(void) {$/;"	f	file:
UNLKS7032_Init	fceux-am/src/boards/ks7032.cpp	/^void UNLKS7032_Init(CartInfo *info) {$/;"	f
UNLKS7037Power	fceux-am/src/boards/ks7037.cpp	/^static void UNLKS7037Power(void) {$/;"	f	file:
UNLKS7037_Init	fceux-am/src/boards/ks7037.cpp	/^void UNLKS7037_Init(CartInfo *info) {$/;"	f
UNLKS7057Power	fceux-am/src/boards/ks7057.cpp	/^static void UNLKS7057Power(void) {$/;"	f	file:
UNLKS7057Reset	fceux-am/src/boards/ks7057.cpp	/^static void UNLKS7057Reset(void) {$/;"	f	file:
UNLKS7057_Init	fceux-am/src/boards/ks7057.cpp	/^void UNLKS7057_Init(CartInfo *info) {$/;"	f
UNLMaliSBCW	fceux-am/src/boards/mmc3.cpp	/^static void UNLMaliSBCW(uint32 A, uint8 V) {$/;"	f	file:
UNLMaliSBPW	fceux-am/src/boards/mmc3.cpp	/^static void UNLMaliSBPW(uint32 A, uint8 V) {$/;"	f	file:
UNLMaliSBPower	fceux-am/src/boards/mmc3.cpp	/^static void UNLMaliSBPower(void) {$/;"	f	file:
UNLMaliSB_Init	fceux-am/src/boards/mmc3.cpp	/^void UNLMaliSB_Init(CartInfo *info) {$/;"	f
UNLN625092Power	fceux-am/src/boards/n625092.cpp	/^static void UNLN625092Power(void) {$/;"	f	file:
UNLN625092Reset	fceux-am/src/boards/n625092.cpp	/^static void UNLN625092Reset(void) {$/;"	f	file:
UNLN625092_Init	fceux-am/src/boards/n625092.cpp	/^void UNLN625092_Init(CartInfo *info) {$/;"	f
UNLOneBusCpuHook	fceux-am/src/boards/onebus.cpp	/^static void UNLOneBusCpuHook(int a) {$/;"	f	file:
UNLOneBusIRQHook	fceux-am/src/boards/onebus.cpp	/^static void UNLOneBusIRQHook(void) {$/;"	f	file:
UNLOneBusPower	fceux-am/src/boards/onebus.cpp	/^static void UNLOneBusPower(void) {$/;"	f	file:
UNLOneBusReset	fceux-am/src/boards/onebus.cpp	/^static void UNLOneBusReset(void) {$/;"	f	file:
UNLOneBus_Init	fceux-am/src/boards/onebus.cpp	/^void UNLOneBus_Init(CartInfo *info) {$/;"	f
UNLPEC586Close	fceux-am/src/boards/pec-586.cpp	/^static void UNLPEC586Close(void) {$/;"	f	file:
UNLPEC586Init	fceux-am/src/boards/pec-586.cpp	/^void UNLPEC586Init(CartInfo *info) {$/;"	f
UNLPEC586Power	fceux-am/src/boards/pec-586.cpp	/^static void UNLPEC586Power(void) {$/;"	f	file:
UNLRT01Power	fceux-am/src/boards/rt-01.cpp	/^static void UNLRT01Power(void) {$/;"	f	file:
UNLRT01_Init	fceux-am/src/boards/rt-01.cpp	/^void UNLRT01_Init(CartInfo *info) {$/;"	f
UNLSB2000Close	fceux-am/src/boards/sb-2000.cpp	/^static void UNLSB2000Close(void)$/;"	f	file:
UNLSB2000Power	fceux-am/src/boards/sb-2000.cpp	/^static void UNLSB2000Power(void) {$/;"	f	file:
UNLSB2000Reset	fceux-am/src/boards/sb-2000.cpp	/^static void UNLSB2000Reset(void) {$/;"	f	file:
UNLSB2000_Init	fceux-am/src/boards/sb-2000.cpp	/^void UNLSB2000_Init(CartInfo *info) {$/;"	f
UNLSC127Close	fceux-am/src/boards/sc-127.cpp	/^static void UNLSC127Close(void) {$/;"	f	file:
UNLSC127IRQ	fceux-am/src/boards/sc-127.cpp	/^static void UNLSC127IRQ(void) {$/;"	f	file:
UNLSC127Power	fceux-am/src/boards/sc-127.cpp	/^static void UNLSC127Power(void) {$/;"	f	file:
UNLSC127Reset	fceux-am/src/boards/sc-127.cpp	/^static void UNLSC127Reset(void) {$/;"	f	file:
UNLSC127_Init	fceux-am/src/boards/sc-127.cpp	/^void UNLSC127_Init(CartInfo *info) {$/;"	f
UNLSHeroes_Init	fceux-am/src/boards/sheroes.cpp	/^void UNLSHeroes_Init(CartInfo *info) {$/;"	f
UNLSL12HBIRQ	fceux-am/src/boards/116.cpp	/^static void UNLSL12HBIRQ(void) {$/;"	f	file:
UNLSL12Power	fceux-am/src/boards/116.cpp	/^static void UNLSL12Power(void) {$/;"	f	file:
UNLSL12_Init	fceux-am/src/boards/116.cpp	/^void UNLSL12_Init(CartInfo *info) {$/;"	f
UNLSL1632CW	fceux-am/src/boards/sl1632.cpp	/^static void UNLSL1632CW(uint32 A, uint8 V) {$/;"	f	file:
UNLSL1632Power	fceux-am/src/boards/sl1632.cpp	/^static void UNLSL1632Power(void) {$/;"	f	file:
UNLSL1632_Init	fceux-am/src/boards/sl1632.cpp	/^void UNLSL1632_Init(CartInfo *info) {$/;"	f
UNLSMB2JIRQHook	fceux-am/src/boards/09-034a.cpp	/^static void UNLSMB2JIRQHook(int a) {$/;"	f	file:
UNLSMB2JIRQHook	fceux-am/src/boards/ks7032.cpp	/^static void UNLSMB2JIRQHook(int a) {$/;"	f	file:
UNLSMB2JPower	fceux-am/src/boards/09-034a.cpp	/^static void UNLSMB2JPower(void) {$/;"	f	file:
UNLSMB2J_Init	fceux-am/src/boards/09-034a.cpp	/^void UNLSMB2J_Init(CartInfo *info) {$/;"	f
UNLT230_Init	fceux-am/src/boards/vrc2and4.cpp	/^void UNLT230_Init(CartInfo *info) {$/;"	f
UNLTF1201IRQCounter	fceux-am/src/boards/tf-1201.cpp	/^static void UNLTF1201IRQCounter(void) {$/;"	f	file:
UNLTF1201Power	fceux-am/src/boards/tf-1201.cpp	/^static void UNLTF1201Power(void) {$/;"	f	file:
UNLTF1201_Init	fceux-am/src/boards/tf-1201.cpp	/^void UNLTF1201_Init(CartInfo *info) {$/;"	f
UNLVRC7IRQHook	fceux-am/src/boards/vrc7p.cpp	/^static void UNLVRC7IRQHook(int a) {$/;"	f	file:
UNLVRC7Power	fceux-am/src/boards/vrc7p.cpp	/^static void UNLVRC7Power(void) {$/;"	f	file:
UNLVRC7_Init	fceux-am/src/boards/vrc7p.cpp	/^void UNLVRC7_Init(CartInfo *info) {$/;"	f
UNLYOKOIRQHook	fceux-am/src/boards/yoko.cpp	/^static void UNLYOKOIRQHook(int a) {$/;"	f	file:
UNLYOKOPower	fceux-am/src/boards/yoko.cpp	/^static void UNLYOKOPower(void) {$/;"	f	file:
UNLYOKOReset	fceux-am/src/boards/yoko.cpp	/^static void UNLYOKOReset(void) {$/;"	f	file:
UNLYOKOStateRestore	fceux-am/src/boards/yoko.cpp	/^static void UNLYOKOStateRestore(int version) {$/;"	f	file:
UNLYOKOSync	fceux-am/src/boards/yoko.cpp	/^static void UNLYOKOSync(void) {$/;"	f	file:
UNLYOKO_Init	fceux-am/src/boards/yoko.cpp	/^void UNLYOKO_Init(CartInfo *info) {$/;"	f
UNROM512HSync	fceux-am/src/boards/unrom512.cpp	/^static void UNROM512HSync()$/;"	f	file:
UNROM512LSync	fceux-am/src/boards/unrom512.cpp	/^static void UNROM512LSync() {$/;"	f	file:
UNROM512LatchClose	fceux-am/src/boards/unrom512.cpp	/^static void UNROM512LatchClose(void) {$/;"	f	file:
UNROM512LatchPower	fceux-am/src/boards/unrom512.cpp	/^static void UNROM512LatchPower(void) {$/;"	f	file:
UNROM512_Init	fceux-am/src/boards/unrom512.cpp	/^void UNROM512_Init(CartInfo *info) {$/;"	f
UNROMSync	fceux-am/src/boards/datalatch.cpp	/^static void UNROMSync(void) {$/;"	f	file:
UNROM_Init	fceux-am/src/boards/datalatch.cpp	/^void UNROM_Init(CartInfo *info) {$/;"	f
UNUSED	abstract-machine/klib/src/int64.c	34;"	d	file:
UNUSED	abstract-machine/klib/src/int64.c	39;"	d	file:
UPALRAM	fceux-am/src/ppu.cpp	/^uint8 UPALRAM[0x03];\/\/for 0x4\/0x8\/0xC addresses in palette, the ones in$/;"	v
UPDATE_ALL	fceux-am/src/boards/emu2413.c	428;"	d	file:
UPDATE_EG	fceux-am/src/boards/emu2413.c	427;"	d	file:
UPDATE_PG	fceux-am/src/boards/emu2413.c	420;"	d	file:
UPDATE_RKS	fceux-am/src/boards/emu2413.c	425;"	d	file:
UPDATE_TLL	fceux-am/src/boards/emu2413.c	421;"	d	file:
UPDATE_WF	fceux-am/src/boards/emu2413.c	426;"	d	file:
USEL	abstract-machine/am/src/x86.h	31;"	d
USER_SPACE	abstract-machine/am/src/native/vme.c	3;"	d	file:
USER_SPACE	abstract-machine/am/src/nemu/isa/mips32/vme.c	5;"	d	file:
USER_SPACE	abstract-machine/am/src/nemu/isa/riscv32/vme.c	14;"	d	file:
USER_SPACE	abstract-machine/am/src/nemu/isa/riscv64/vme.c	14;"	d	file:
USER_SPACE	abstract-machine/am/src/nemu/isa/x86/vme.c	14;"	d	file:
U_FLAG	fceux-am/src/x6502.h	57;"	d
Update	fceux-am/src/input.h	/^	void Update(int w, void *data, int arg) { if(_Update) _Update(w,data,arg); }$/;"	f	struct:INPUTC
Update	fceux-am/src/input.h	/^	void Update(void *data, int arg) { if(_Update) _Update(data,arg); }$/;"	f	struct:INPUTCFC
UpdateEMUCore	fceux-am/src/drivers/sdl/sdl.cpp	/^static void UpdateEMUCore()$/;"	f	file:
UpdateGP	fceux-am/src/input.cpp	/^static void UpdateGP(int w, void *data, int arg)$/;"	f	file:
UpdateGamepad	fceux-am/src/drivers/sdl/input.cpp	/^UpdateGamepad(void)$/;"	f	file:
UpdateInput	fceux-am/src/drivers/sdl/input.cpp	/^	void UpdateInput ()$/;"	f
UpdateOPL	fceux-am/src/boards/vrc7.cpp	/^void UpdateOPL(int Count) {$/;"	f
UpdateOPLNEO	fceux-am/src/boards/vrc7.cpp	/^void UpdateOPLNEO(int32 *Wave, int Count) {$/;"	f
Upper_ROM_VROM_size	fceux-am/src/ines.h	/^	uint8 Upper_ROM_VROM_size;   \/\/ 9$/;"	m	struct:iNES_HEADER
UsrFirstSLine	fceux-am/src/fceu.h	/^	int UsrFirstSLine[2];$/;"	m	struct:__anon32
UsrInputType	fceux-am/src/drivers/sdl/input.cpp	/^static int UsrInputType[NUM_INPUT_DEVICES];$/;"	v	file:
UsrLastSLine	fceux-am/src/fceu.h	/^	int UsrLastSLine[2];$/;"	m	struct:__anon32
VBlankON	fceux-am/src/ppu.cpp	39;"	d	file:
VER	abstract-machine/am/src/x86/qemu/ioe.c	351;"	d	file:
VGACTL_ADDR	abstract-machine/am/src/nemu/include/nemu.h	22;"	d
VGACTL_ADDR	abstract-machine/am/src/nemu/include/nemu.h	28;"	d
VGACTL_MMIO	nemu/src/device/vga.c	23;"	d	file:
VGACTL_PORT	nemu/src/device/vga.c	22;"	d	file:
VMEM	nemu/src/device/vga.c	20;"	d	file:
VMEM_SIZE	abstract-machine/am/src/x86/qemu/ioe.c	151;"	d	file:
VPage	fceux-am/src/cart.cpp	/^uint8 *Page[32], *VPage[8];$/;"	v
VPageG	fceux-am/src/cart.cpp	/^uint8 *VPageG[8];$/;"	v
VPageR	fceux-am/src/cart.cpp	/^uint8 **VPageR = VPage;$/;"	v
VRAMADR	fceux-am/src/ppu.cpp	402;"	d	file:
VRAMBuffer	fceux-am/src/ppu.cpp	/^uint8 VRAMBuffer = 0, PPUGenLatch = 0;$/;"	v
VRAM_size	fceux-am/src/ines.h	/^	uint8 VRAM_size;             \/\/ 11$/;"	m	struct:iNES_HEADER
VRC24Close	fceux-am/src/boards/vrc2and4.cpp	/^static void VRC24Close(void) {$/;"	f	file:
VRC24IRQHook	fceux-am/src/boards/vrc2and4.cpp	/^void VRC24IRQHook(int a) {$/;"	f
VRC24Power	fceux-am/src/boards/vrc2and4.cpp	/^static void VRC24Power(void) {$/;"	f	file:
VRC24_Init	fceux-am/src/boards/vrc2and4.cpp	/^static void VRC24_Init(CartInfo *info) {$/;"	f	file:
VRC5IRQ	fceux-am/src/boards/vrc5.cpp	/^static void VRC5IRQ(int a) {$/;"	f	file:
VRC6Close	fceux-am/src/boards/vrc6.cpp	/^static void VRC6Close(void)$/;"	f	file:
VRC6IRQHook	fceux-am/src/boards/vrc6.cpp	/^static void VRC6IRQHook(int a) {$/;"	f	file:
VRC6Power	fceux-am/src/boards/vrc6.cpp	/^static void VRC6Power(void) {$/;"	f	file:
VRC6Sound	fceux-am/src/boards/vrc6.cpp	/^void VRC6Sound(int Count) {$/;"	f
VRC6SoundHQ	fceux-am/src/boards/vrc6.cpp	/^void VRC6SoundHQ(void) {$/;"	f
VRC6SyncHQ	fceux-am/src/boards/vrc6.cpp	/^void VRC6SyncHQ(int32 ts) {$/;"	f
VRC6_ESI	fceux-am/src/boards/vrc6.cpp	/^static void VRC6_ESI(void) {$/;"	f	file:
VRC7Close	fceux-am/src/boards/vrc7.cpp	/^static void VRC7Close(void)$/;"	f	file:
VRC7IRQHook	fceux-am/src/boards/vrc7.cpp	/^static void VRC7IRQHook(int a) {$/;"	f	file:
VRC7Power	fceux-am/src/boards/vrc7.cpp	/^static void VRC7Power(void) {$/;"	f	file:
VRC7SC	fceux-am/src/boards/vrc7.cpp	/^static void VRC7SC(void) {$/;"	f	file:
VRC7SKill	fceux-am/src/boards/vrc7.cpp	/^static void VRC7SKill(void) {$/;"	f	file:
VRC7Sound	fceux-am/src/boards/vrc7.cpp	/^static OPLL *VRC7Sound = NULL;$/;"	v	file:
VRC7Sound_saveptr	fceux-am/src/boards/vrc7.cpp	/^static OPLL **VRC7Sound_saveptr = &VRC7Sound;$/;"	v	file:
VRC7_ESI	fceux-am/src/boards/vrc7.cpp	/^static void VRC7_ESI(void) {$/;"	f	file:
VROM	fceux-am/src/ines.cpp	/^uint8 *VROM = NULL;$/;"	v
VROM_size	fceux-am/src/ines.cpp	/^uint32 VROM_size = 0;$/;"	v
VROM_size	fceux-am/src/ines.h	/^	uint8 VROM_size;             \/\/ 5$/;"	m	struct:iNES_HEADER
VS_hardware	fceux-am/src/ines.h	/^	uint8 VS_hardware;           \/\/ 13$/;"	m	struct:iNES_HEADER
V_FLAG	fceux-am/src/x6502.h	56;"	d
V_FLIP	fceux-am/src/ppu.cpp	1301;"	d	file:
ValueArray	fceux-am/src/utils/valuearray.h	/^struct ValueArray$/;"	s
W	abstract-machine/am/src/native/native-gpu.c	6;"	d	file:
W	abstract-machine/am/src/native/native-gpu.c	9;"	d	file:
WF	fceux-am/src/boards/emu2413.h	/^	uint32 TL, FB, EG, ML, AR, DR, SL, RR, KR, KL, AM, PM, WF;$/;"	m	struct:__anon42
WHSync	fceux-am/src/boards/unrom512.cpp	/^static void (*WHSync)(void);$/;"	v	file:
WLSync	fceux-am/src/boards/unrom512.cpp	/^static void (*WLSync)(void);$/;"	v	file:
WORK_DIR	abstract-machine/Makefile	/^WORK_DIR  = $(shell pwd)$/;"	m
WP	nemu/src/monitor/debug/watchpoint.h	/^} WP;$/;"	t	typeref:struct:watchpoint
WRAM	fceux-am/src/boards/103.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/106.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/112.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/15.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/156.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/164.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/176.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/177.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/178.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/18.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/186.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/190.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/246.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/252.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/253.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/32.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/34.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/68.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/69.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/82.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/99.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/addrlatch.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/bandai.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/dance2000.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/datalatch.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/edu2000.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/famicombox.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/ffe.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/ks7012.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/ks7017.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/ks7030.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/ks7037.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/lh32.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/lh53.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/malee.cpp	/^static uint8 WRAM[2048];$/;"	v	file:
WRAM	fceux-am/src/boards/mmc1.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/mmc2and4.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/mmc3.cpp	/^uint8 *WRAM;$/;"	v
WRAM	fceux-am/src/boards/mmc5.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/n106.cpp	/^static uint8 WRAM[8192];$/;"	v	file:
WRAM	fceux-am/src/boards/pec-586.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/sb-2000.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/sc-127.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/transformer.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/vrc3.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/vrc5.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/vrc6.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/vrc7.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAM	fceux-am/src/boards/yoko.cpp	/^static uint8 *WRAM = NULL;$/;"	v	file:
WRAMMaskEnable	fceux-am/src/boards/mmc5.cpp	/^static uint8 WRAMMaskEnable[2];$/;"	v	file:
WRAMPage	fceux-am/src/boards/mmc5.cpp	/^static uint8 WRAMPage;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/103.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/106.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/15.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/156.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/164.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/176.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/177.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/178.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/18.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/246.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/252.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/253.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/32.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/34.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/68.cpp	/^static uint32 WRAMSIZE, count;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/69.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/82.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/99.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/addrlatch.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/bandai.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/dance2000.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/datalatch.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/famicombox.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/ffe.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/ks7012.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/ks7017.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/ks7030.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/ks7037.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/lh32.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/lh53.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/mmc1.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/mmc2and4.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/mmc3.cpp	/^uint32 WRAMSIZE;$/;"	v
WRAMSIZE	fceux-am/src/boards/mmc5.cpp	/^static uint32 WRAMSIZE = 0;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/pec-586.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/sb-2000.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/sc-127.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/transformer.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/vrc2and4.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/vrc3.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/vrc5.cpp	/^static uint16 WRAMSIZE = 8192 + 8192;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/vrc6.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/vrc7.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRAMSIZE	fceux-am/src/boards/yoko.cpp	/^static uint32 WRAMSIZE;$/;"	v	file:
WRITE	fceux-am/src/file.h	/^		READ, WRITE, READWRITE$/;"	e	enum:FCEUFILE::__anon34
WSync	fceux-am/src/boards/164.cpp	/^static void (*WSync)(void);$/;"	v	file:
WSync	fceux-am/src/boards/addrlatch.cpp	/^static void (*WSync)(void);$/;"	v	file:
WSync	fceux-am/src/boards/datalatch.cpp	/^static void (*WSync)(void);$/;"	v	file:
WSync	fceux-am/src/boards/ks7037.cpp	/^static void (*WSync)(void);$/;"	v	file:
WSync	fceux-am/src/boards/sachen.cpp	/^static void (*WSync)(void);$/;"	v	file:
W_OK	fceux-am/src/types.h	50;"	d
Wave	fceux-am/src/sound.cpp	/^int32 Wave[2048+512];$/;"	v
WaveFinal	fceux-am/src/sound.cpp	/^int32 WaveFinal[2048+512];$/;"	v
WaveHi	fceux-am/src/sound.cpp	/^int32 WaveHi[40000];$/;"	v
WrMem	fceux-am/src/x6502.cpp	/^static INLINE void WrMem(unsigned int A, uint8 V)$/;"	f	file:
WrRAM	fceux-am/src/x6502.cpp	/^static INLINE void WrRAM(unsigned int A, uint8 V)$/;"	f	file:
Write	fceux-am/src/input.h	/^	void Write(uint8 v) { if(_Write) _Write(v); }$/;"	f	struct:INPUTCFC
Write	fceux-am/src/input.h	/^	void Write(uint8 w) { if(_Write) _Write(w); }$/;"	f	struct:INPUTC
WritePalette	fceux-am/src/palette.cpp	/^void WritePalette(void)$/;"	f
WriteSound	fceux-am/src/drivers/sdl/sdl-sound.cpp	/^WriteSound(int32 *buf,$/;"	f
X	fceux-am/src/x6502.cpp	/^X6502 X;$/;"	v
X	fceux-am/src/x6502struct.h	/^        uint8 A,X,Y,S,P,mooPI;$/;"	m	struct:__X6502
X1	abstract-machine/am/src/x86/qemu/ioe.c	369;"	d	file:
X24C0X_ADDRESS	fceux-am/src/boards/bandai.cpp	46;"	d	file:
X24C0X_READ	fceux-am/src/boards/bandai.cpp	48;"	d	file:
X24C0X_STANDBY	fceux-am/src/boards/bandai.cpp	45;"	d	file:
X24C0X_WORD	fceux-am/src/boards/bandai.cpp	47;"	d	file:
X24C0X_WRITE	fceux-am/src/boards/bandai.cpp	49;"	d	file:
X6502	fceux-am/src/x6502struct.h	/^} X6502;$/;"	t	typeref:struct:__X6502
X6502_DMR	fceux-am/src/x6502.cpp	/^uint8 X6502_DMR(uint32 A)$/;"	f
X6502_DMW	fceux-am/src/x6502.cpp	/^void X6502_DMW(uint32 A, uint8 V)$/;"	f
X6502_IRQBegin	fceux-am/src/x6502.cpp	/^void X6502_IRQBegin(int w)$/;"	f
X6502_IRQEnd	fceux-am/src/x6502.cpp	/^void X6502_IRQEnd(int w)$/;"	f
X6502_Init	fceux-am/src/x6502.cpp	/^void X6502_Init(void)$/;"	f
X6502_Power	fceux-am/src/x6502.cpp	/^void X6502_Power(void)$/;"	f
X6502_Reset	fceux-am/src/x6502.cpp	/^void X6502_Reset(void)$/;"	f
X6502_Run	fceux-am/src/x6502.cpp	/^void X6502_Run(int32 cycles)$/;"	f
X6502_Run	fceux-am/src/x6502.h	48;"	d
XBackBuf	fceux-am/src/video.cpp	/^u8 *XBackBuf=NULL; \/\/ppu output is stashed here before drawing happens$/;"	v
XBuf	fceux-am/src/video.cpp	/^u8 *XBuf=NULL; \/\/used for current display$/;"	v
XDBackBuf	fceux-am/src/video.cpp	/^u8 *XDBackBuf=NULL; \/\/corresponding to XBackBuf but with deemph bits$/;"	v
XDBuf	fceux-am/src/video.cpp	/^u8 *XDBuf=NULL; \/\/corresponding to XBuf but with deemph bits$/;"	v
XOffset	fceux-am/src/ppu.cpp	/^uint8 XOffset = 0;$/;"	v
XX	abstract-machine/am/src/native/native-input.c	12;"	d	file:
X_OK	fceux-am/src/types.h	52;"	d
X_ZN	fceux-am/src/x6502.cpp	91;"	d	file:
X_ZNT	fceux-am/src/x6502.cpp	92;"	d	file:
Y	fceux-am/src/x6502struct.h	/^        uint8 A,X,Y,S,P,mooPI;$/;"	m	struct:__X6502
YIELD_INSTR	abstract-machine/am/src/native/cte.c	6;"	d	file:
YIELD_INSTR_LEN	abstract-machine/am/src/native/cte.c	7;"	d	file:
YIQ_TO_RGB	fceux-am/src/palette.cpp	62;"	d	file:
ZNTable	fceux-am/src/x6502.cpp	/^static uint8 ZNTable[256];$/;"	v	file:
Z_FLAG	fceux-am/src/x6502.h	61;"	d
_16	nemu/include/isa/x86.h	/^    uint16_t _16;$/;"	m	struct:__anon78::__anon79
_32	nemu/include/isa/mips32.h	/^    rtlreg_t _32;$/;"	m	struct:__anon88::__anon89
_32	nemu/include/isa/riscv32.h	/^    rtlreg_t _32;$/;"	m	struct:__anon71::__anon72
_32	nemu/include/isa/x86.h	/^    uint32_t _32;$/;"	m	struct:__anon78::__anon79
_64	nemu/include/isa/riscv64.h	/^    rtlreg_t _64;$/;"	m	union:__anon81::__anon82
_8	nemu/include/isa/x86.h	/^    uint8_t _8[2];$/;"	m	struct:__anon78::__anon79
_A	fceux-am/src/x6502abbrev.h	7;"	d
_BITS	fceux-am/src/ppu.cpp	72;"	d	file:
_CONCAT	abstract-machine/klib/include/klib-macros.h	12;"	d
_DB	fceux-am/src/x6502abbrev.h	13;"	d
_Draw	fceux-am/src/input.h	/^	void (*_Draw)(int w, uint8 *buf, int arg);$/;"	m	struct:INPUTC
_Draw	fceux-am/src/input.h	/^	void (*_Draw)(uint8 *buf, int arg);$/;"	m	struct:INPUTCFC
_EMU2413_H_	fceux-am/src/boards/emu2413.h	2;"	d
_FCEUH	fceux-am/src/fceu.h	2;"	d
_FCEU_FILE_H_	fceux-am/src/file.h	2;"	d
_GNU_SOURCE	abstract-machine/am/src/native/platform.c	1;"	d	file:
_INES_H_	fceux-am/src/ines.h	23;"	d
_INPUT_H_	fceux-am/src/input.h	2;"	d
_IRQlow	fceux-am/src/x6502abbrev.h	16;"	d
_KEYS	nemu/src/device/keyboard.c	11;"	d	file:
_KEY_NAME	nemu/src/device/keyboard.c	20;"	d	file:
_KEY_NONE	nemu/src/device/keyboard.c	/^  _KEY_NONE = 0,$/;"	e	enum:__anon50	file:
_Log	nemu/include/monitor/log.h	20;"	d
_MD5_H	fceux-am/src/utils/md5.h	2;"	d
_P	fceux-am/src/x6502abbrev.h	11;"	d
_PC	fceux-am/src/x6502abbrev.h	6;"	d
_PI	fceux-am/src/x6502abbrev.h	12;"	d
_Read	fceux-am/src/input.h	/^	uint8 (*_Read)(int w);$/;"	m	struct:INPUTC
_Read	fceux-am/src/input.h	/^	uint8 (*_Read)(int w, uint8 ret);$/;"	m	struct:INPUTCFC
_S	fceux-am/src/x6502abbrev.h	10;"	d
_SLHook	fceux-am/src/input.h	/^	void (*_SLHook)(int w, uint8 *bg, uint8 *spr, uint32 linets, int final);$/;"	m	struct:INPUTC
_SLHook	fceux-am/src/input.h	/^	void (*_SLHook)(uint8 *bg, uint8 *spr, uint32 linets, int final);$/;"	m	struct:INPUTCFC
_SOUND_H_	fceux-am/src/sound.h	22;"	d
_Strobe	fceux-am/src/input.h	/^	void (*_Strobe)();$/;"	m	struct:INPUTCFC
_Strobe	fceux-am/src/input.h	/^	void (*_Strobe)(int w);$/;"	m	struct:INPUTC
_Update	fceux-am/src/input.h	/^	void (*_Update)(int w, void *data, int arg);$/;"	m	struct:INPUTC
_Update	fceux-am/src/input.h	/^	void (*_Update)(void *data, int arg);$/;"	m	struct:INPUTCFC
_VALUEARRAY_H_	fceux-am/src/utils/valuearray.h	2;"	d
_VIDEO_H_	fceux-am/src/video.h	2;"	d
_Write	fceux-am/src/input.h	/^	void (*_Write)(uint8 v);$/;"	m	struct:INPUTC
_Write	fceux-am/src/input.h	/^	void (*_Write)(uint8 v);$/;"	m	struct:INPUTCFC
_X	fceux-am/src/x6502abbrev.h	8;"	d
_X6502ABBREV_H_	fceux-am/src/x6502abbrev.h	2;"	d
_X6502H	fceux-am/src/x6502.h	92;"	d
_X6502STRUCTH	fceux-am/src/x6502struct.h	2;"	d
_Y	fceux-am/src/x6502abbrev.h	9;"	d
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	109;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	112;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	126;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	133;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	144;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	65;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	68;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	78;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	81;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	96;"	d	file:
_YUGA_BIG_ENDIAN	abstract-machine/klib/src/int64.c	99;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	108;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	111;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	125;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	132;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	143;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	64;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	67;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	77;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	80;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	95;"	d	file:
_YUGA_LITTLE_ENDIAN	abstract-machine/klib/src/int64.c	98;"	d	file:
__ARCH_H__	abstract-machine/am/include/arch/mips32-nemu.h	2;"	d
__CC_H__	nemu/src/isa/x86/exec/cc.h	2;"	d
__COMMON_H__	nemu/include/common.h	2;"	d
__COMMON_H__	nemu/tools/qemu-diff/include/common.h	2;"	d
__CONFIG_H__	fceux-am/src/config.h	2;"	d
__CPU_DECODE_H__	nemu/include/cpu/decode.h	2;"	d
__CPU_EXEC_H__	nemu/include/cpu/exec.h	2;"	d
__C_OP_H__	nemu/src/engine/interpreter/c_op.h	2;"	d
__DEBUG_H__	nemu/include/debug.h	2;"	d
__DEVICE_ALARM_H__	nemu/include/device/alarm.h	2;"	d
__DEVICE_MAP_H__	nemu/include/device/map.h	2;"	d
__DIFFTEST_H__	nemu/src/isa/mips32/difftest/difftest.h	2;"	d
__DIFFTEST_H__	nemu/src/isa/riscv32/difftest/difftest.h	2;"	d
__DIFFTEST_H__	nemu/src/isa/x86/difftest/difftest.h	2;"	d
__DRIVER_H_	fceux-am/src/driver.h	2;"	d
__EXPR_H__	nemu/src/monitor/debug/expr.h	2;"	d
__FCEU_GIT	fceux-am/src/git.h	2;"	d
__FCEU_SDL_H	fceux-am/src/drivers/sdl/sdl.h	2;"	d
__FCEU_SDL_MAIN_H	fceux-am/src/drivers/sdl/main.h	21;"	d
__FCEU_SDL_VIDEO_H	fceux-am/src/drivers/sdl/sdl-video.h	2;"	d
__FCEU_TYPES	fceux-am/src/types.h	23;"	d
__FCEU_VERSION	fceux-am/src/version.h	25;"	d
__ISA_H__	nemu/include/isa.h	2;"	d
__ISA_MIPS32_H__	nemu/include/isa/mips32.h	2;"	d
__ISA_RISCV32_H__	nemu/include/isa/riscv32.h	2;"	d
__ISA_RISCV64_H__	nemu/include/isa/riscv64.h	2;"	d
__ISA_X86_H__	nemu/include/isa/x86.h	2;"	d
__MACRO_H__	nemu/include/macro.h	2;"	d
__MAPINC_H__	fceux-am/src/boards/mapinc.h	2;"	d
__MEMORY_PADDR_H__	nemu/include/memory/paddr.h	2;"	d
__MEMORY_VADDR_H__	nemu/include/memory/vaddr.h	2;"	d
__MIPS32_H__	nemu/tools/qemu-diff/include/isa/mips32.h	2;"	d
__MIPS32_REG_H__	nemu/src/isa/mips32/local-include/reg.h	2;"	d
__MIPS32_RTL_H__	nemu/src/isa/mips32/local-include/rtl.h	2;"	d
__MONITOR_DIFFTEST_H__	nemu/include/monitor/difftest.h	2;"	d
__MONITOR_LOG_H__	nemu/include/monitor/log.h	2;"	d
__MONITOR_MONITOR_H__	nemu/include/monitor/monitor.h	2;"	d
__PLATFORM_H__	abstract-machine/am/src/native/platform.h	2;"	d
__RISCV32_H__	nemu/tools/qemu-diff/include/isa/riscv32.h	2;"	d
__RISCV32_REG_H__	nemu/src/isa/riscv32/local-include/reg.h	2;"	d
__RISCV32_RTL_H__	nemu/src/isa/riscv32/local-include/rtl.h	2;"	d
__RISCV64_DIFF_TEST_H__	nemu/src/isa/riscv64/difftest/difftest.h	2;"	d
__RISCV64_H__	nemu/tools/qemu-diff/include/isa/riscv64.h	2;"	d
__RISCV64_REG_H__	nemu/src/isa/riscv64/local-include/reg.h	2;"	d
__RISCV64_RTL_H__	nemu/src/isa/riscv64/local-include/rtl.h	2;"	d
__RTL_BASIC_H__	nemu/src/engine/interpreter/rtl-basic.h	2;"	d
__RTL_PSEUDO_H__	nemu/include/rtl/pseudo.h	2;"	d
__RTL_RTL_H__	nemu/include/rtl/rtl.h	2;"	d
__USE_GNU	abstract-machine/am/include/arch/native.h	24;"	d
__USE_GNU	abstract-machine/am/include/arch/native.h	5;"	d
__WATCHPOINT_H__	nemu/src/monitor/debug/watchpoint.h	2;"	d
__X6502	fceux-am/src/x6502struct.h	/^typedef struct __X6502 {$/;"	s
__X86_H__	nemu/tools/qemu-diff/include/isa/x86.h	2;"	d
__X86_REG_H__	nemu/src/isa/x86/local-include/reg.h	2;"	d
__X86_RTL_H__	nemu/src/isa/x86/local-include/rtl.h	2;"	d
__am_asm_trap	abstract-machine/am/src/nemu/isa/mips32/trap.S	/^__am_asm_trap:$/;"	l
__am_asm_trap	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^__am_asm_trap:$/;"	l
__am_asm_trap	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^__am_asm_trap:$/;"	l
__am_asm_trap	abstract-machine/am/src/nemu/isa/x86/trap.S	/^__am_asm_trap:$/;"	l
__am_audio_config	abstract-machine/am/src/native/native-audio.c	/^void __am_audio_config(AM_AUDIO_CONFIG_T *cfg) {$/;"	f
__am_audio_config	abstract-machine/am/src/nemu/ioe/audio.c	/^void __am_audio_config(AM_AUDIO_CONFIG_T *cfg) {$/;"	f
__am_audio_ctrl	abstract-machine/am/src/native/native-audio.c	/^void __am_audio_ctrl(AM_AUDIO_CTRL_T *ctrl) {$/;"	f
__am_audio_ctrl	abstract-machine/am/src/nemu/ioe/audio.c	/^void __am_audio_ctrl(AM_AUDIO_CTRL_T *ctrl) {$/;"	f
__am_audio_init	abstract-machine/am/src/nemu/ioe/audio.c	/^void __am_audio_init() {$/;"	f
__am_audio_play	abstract-machine/am/src/native/native-audio.c	/^void __am_audio_play(AM_AUDIO_PLAY_T *ctl) {$/;"	f
__am_audio_play	abstract-machine/am/src/nemu/ioe/audio.c	/^void __am_audio_play(AM_AUDIO_PLAY_T *ctl) {$/;"	f
__am_audio_status	abstract-machine/am/src/native/native-audio.c	/^void __am_audio_status(AM_AUDIO_STATUS_T *stat) {$/;"	f
__am_audio_status	abstract-machine/am/src/nemu/ioe/audio.c	/^void __am_audio_status(AM_AUDIO_STATUS_T *stat) {$/;"	f
__am_bootcpu_init	abstract-machine/am/src/x86/qemu/trm.c	/^void __am_bootcpu_init() {$/;"	f
__am_cpu_struct	abstract-machine/am/src/native/platform.c	/^__am_cpu_t *__am_cpu_struct = NULL;$/;"	v
__am_cpu_t	abstract-machine/am/src/native/platform.h	/^} __am_cpu_t;$/;"	t	typeref:struct:__anon9
__am_cpuinfo	abstract-machine/am/src/x86/qemu/mpe.c	/^struct cpu_local __am_cpuinfo[MAX_CPU] = {};$/;"	v	typeref:struct:cpu_local
__am_cpuinfo	abstract-machine/am/src/x86/qemu/trm.c	/^struct cpu_local __am_cpuinfo[MAX_CPU];$/;"	v	typeref:struct:cpu_local
__am_disk_config	abstract-machine/am/src/native/ioe.c	/^static void __am_disk_config(AM_DISK_CONFIG_T *cfg)   { cfg->present = false; }$/;"	f	file:
__am_disk_config	abstract-machine/am/src/nemu/ioe/ioe.c	/^static void __am_disk_config(AM_DISK_CONFIG_T *cfg)   { cfg->present = false; }$/;"	f	file:
__am_exit_platform	abstract-machine/am/src/native/platform.c	/^void __am_exit_platform(int code) {$/;"	f
__am_get_cur_as	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^void __am_get_cur_as(Context *c) {$/;"	f
__am_get_cur_as	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^void __am_get_cur_as(Context *c) {$/;"	f
__am_get_cur_as	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^void __am_get_cur_as(Context *c) {$/;"	f
__am_get_cur_as	abstract-machine/am/src/nemu/isa/x86/vme.c	/^void __am_get_cur_as(Context *c) {$/;"	f
__am_get_example_uc	abstract-machine/am/src/native/platform.c	/^void __am_get_example_uc(Context *r) {$/;"	f
__am_get_intr_sigmask	abstract-machine/am/src/native/platform.c	/^void __am_get_intr_sigmask(sigset_t *s) {$/;"	f
__am_gpu_config	abstract-machine/am/src/native/native-gpu.c	/^void __am_gpu_config(AM_GPU_CONFIG_T *cfg) {$/;"	f
__am_gpu_config	abstract-machine/am/src/nemu/ioe/gpu.c	/^void __am_gpu_config(AM_GPU_CONFIG_T *cfg) {$/;"	f
__am_gpu_fbdraw	abstract-machine/am/src/native/native-gpu.c	/^void __am_gpu_fbdraw(AM_GPU_FBDRAW_T *ctl) {$/;"	f
__am_gpu_fbdraw	abstract-machine/am/src/nemu/ioe/gpu.c	/^void __am_gpu_fbdraw(AM_GPU_FBDRAW_T *ctl) {$/;"	f
__am_gpu_init	abstract-machine/am/src/native/native-gpu.c	/^void __am_gpu_init() {$/;"	f
__am_gpu_init	abstract-machine/am/src/nemu/ioe/gpu.c	/^void __am_gpu_init() {$/;"	f
__am_gpu_status	abstract-machine/am/src/native/native-gpu.c	/^void __am_gpu_status(AM_GPU_STATUS_T *stat) {$/;"	f
__am_gpu_status	abstract-machine/am/src/nemu/ioe/gpu.c	/^void __am_gpu_status(AM_GPU_STATUS_T *status) {$/;"	f
__am_has_ioe	abstract-machine/am/src/native/ioe.c	/^bool __am_has_ioe = false;$/;"	v
__am_heap_init	abstract-machine/am/src/x86/qemu/trm.c	/^Area __am_heap_init() {$/;"	f
__am_in_userspace	abstract-machine/am/src/native/vme.c	/^int __am_in_userspace(void *addr) {$/;"	f
__am_init_timer_irq	abstract-machine/am/src/native/cte.c	/^void __am_init_timer_irq() {$/;"	f
__am_input_config	abstract-machine/am/src/native/native-input.c	/^void __am_input_config(AM_INPUT_CONFIG_T *cfg) {$/;"	f
__am_input_config	abstract-machine/am/src/nemu/ioe/ioe.c	/^static void __am_input_config(AM_INPUT_CONFIG_T *cfg) { cfg->present = true;  }$/;"	f	file:
__am_input_init	abstract-machine/am/src/native/native-input.c	/^void __am_input_init() {$/;"	f
__am_input_keybrd	abstract-machine/am/src/native/native-input.c	/^void __am_input_keybrd(AM_INPUT_KEYBRD_T *kbd) {$/;"	f
__am_input_keybrd	abstract-machine/am/src/nemu/ioe/input.c	/^void __am_input_keybrd(AM_INPUT_KEYBRD_T *kbd) {$/;"	f
__am_intr_sigmask	abstract-machine/am/src/native/platform.c	/^sigset_t __am_intr_sigmask = {};$/;"	v
__am_ioapic_enable	abstract-machine/am/src/x86/qemu/ioe.c	/^void __am_ioapic_enable(int irq, int cpunum) {$/;"	f
__am_ioapic_init	abstract-machine/am/src/x86/qemu/ioe.c	/^void __am_ioapic_init(void) {$/;"	f
__am_ioe_init	abstract-machine/am/src/native/ioe.c	/^void __am_ioe_init() {$/;"	f
__am_iret	abstract-machine/am/src/x86/qemu/trap32.S	/^__am_iret:$/;"	l
__am_iret	abstract-machine/am/src/x86/qemu/trap64.S	/^__am_iret:$/;"	l
__am_irq_handle	abstract-machine/am/src/nemu/isa/mips32/cte.c	/^Context* __am_irq_handle(Context *c) {$/;"	f
__am_irq_handle	abstract-machine/am/src/nemu/isa/riscv32/cte.c	/^Context* __am_irq_handle(Context *c) {$/;"	f
__am_irq_handle	abstract-machine/am/src/nemu/isa/riscv64/cte.c	/^Context* __am_irq_handle(Context *c) {$/;"	f
__am_irq_handle	abstract-machine/am/src/nemu/isa/x86/cte.c	/^Context* __am_irq_handle(Context *c) {$/;"	f
__am_irq_handle	abstract-machine/am/src/x86/qemu/cte.c	/^void __am_irq_handle(struct trap_frame *tf) {$/;"	f
__am_is_sigmask_sti	abstract-machine/am/src/native/platform.c	/^int __am_is_sigmask_sti(sigset_t *s) {$/;"	f
__am_kcontext_start	abstract-machine/am/src/native/trap.S	/^__am_kcontext_start:$/;"	l
__am_lapic	abstract-machine/am/src/x86/qemu/ioe.c	/^volatile unsigned int *__am_lapic = NULL;  \/\/ Initialized in mp.c$/;"	v
__am_lapic	abstract-machine/am/src/x86/qemu/trm.c	/^volatile uint32_t *__am_lapic;$/;"	v
__am_lapic_bootap	abstract-machine/am/src/x86/qemu/ioe.c	/^void __am_lapic_bootap(uint32_t apicid, void *addr) {$/;"	f
__am_lapic_eoi	abstract-machine/am/src/x86/qemu/ioe.c	/^void __am_lapic_eoi(void) {$/;"	f
__am_lapic_init	abstract-machine/am/src/x86/qemu/trm.c	/^void __am_lapic_init() {$/;"	f
__am_mpe_init	abstract-machine/am/src/native/mpe.c	/^int __am_mpe_init = 0;$/;"	v
__am_ncpu	abstract-machine/am/src/native/platform.c	/^int __am_ncpu = 0;$/;"	v
__am_ncpu	abstract-machine/am/src/x86/qemu/trm.c	/^int __am_ncpu = 0;$/;"	v
__am_net_config	abstract-machine/am/src/native/ioe.c	/^static void __am_net_config (AM_NET_CONFIG_T *cfg)    { cfg->present = false; }$/;"	f	file:
__am_net_config	abstract-machine/am/src/nemu/ioe/ioe.c	/^static void __am_net_config (AM_NET_CONFIG_T *cfg)    { cfg->present = false; }$/;"	f	file:
__am_othercpu_entry	abstract-machine/am/src/x86/qemu/mpe.c	/^void __am_othercpu_entry() {$/;"	f
__am_panic_on_return	abstract-machine/am/src/native/cte.c	/^void __am_panic_on_return() { panic("should not reach here\\n"); }$/;"	f
__am_panic_on_return	abstract-machine/am/src/x86/qemu/cte.c	/^void __am_panic_on_return() { panic("kernel context returns"); }$/;"	f
__am_percpu_init	abstract-machine/am/src/x86/qemu/trm.c	/^void __am_percpu_init() {$/;"	f
__am_percpu_initgdt	abstract-machine/am/src/x86/qemu/trm.c	/^void __am_percpu_initgdt() {$/;"	f
__am_percpu_initirq	abstract-machine/am/src/x86/qemu/cte.c	/^void __am_percpu_initirq() {$/;"	f
__am_percpu_initlapic	abstract-machine/am/src/x86/qemu/ioe.c	/^void __am_percpu_initlapic(void) {$/;"	f
__am_pgsize	abstract-machine/am/src/native/platform.c	/^int __am_pgsize;$/;"	v
__am_platform_dummy	abstract-machine/am/src/native/platform.c	/^void __am_platform_dummy() {$/;"	f
__am_pmem_map	abstract-machine/am/src/native/platform.c	/^void __am_pmem_map(void *va, void *pa, int prot) {$/;"	f
__am_pmem_protect	abstract-machine/am/src/native/platform.c	/^void __am_pmem_protect() {$/;"	f
__am_pmem_unmap	abstract-machine/am/src/native/platform.c	/^void __am_pmem_unmap(void *va) {$/;"	f
__am_pmem_unprotect	abstract-machine/am/src/native/platform.c	/^void __am_pmem_unprotect() {$/;"	f
__am_stop_the_world	abstract-machine/am/src/x86/qemu/mpe.c	/^void __am_stop_the_world() {$/;"	f
__am_switch	abstract-machine/am/src/native/vme.c	/^void __am_switch(Context *c) {$/;"	f
__am_switch	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^void __am_switch(Context *c) {$/;"	f
__am_switch	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^void __am_switch(Context *c) {$/;"	f
__am_switch	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^void __am_switch(Context *c) {$/;"	f
__am_switch	abstract-machine/am/src/nemu/isa/x86/vme.c	/^void __am_switch(Context *c) {$/;"	f
__am_timer_config	abstract-machine/am/src/native/native-timer.c	/^void __am_timer_config(AM_TIMER_CONFIG_T *cfg) {$/;"	f
__am_timer_config	abstract-machine/am/src/nemu/ioe/ioe.c	/^static void __am_timer_config(AM_TIMER_CONFIG_T *cfg) { cfg->present = true; cfg->has_rtc = true; }$/;"	f	file:
__am_timer_init	abstract-machine/am/src/native/native-timer.c	/^void __am_timer_init() {$/;"	f
__am_timer_init	abstract-machine/am/src/nemu/ioe/timer.c	/^void __am_timer_init() {$/;"	f
__am_timer_rtc	abstract-machine/am/src/native/native-timer.c	/^void __am_timer_rtc(AM_TIMER_RTC_T *rtc) {$/;"	f
__am_timer_rtc	abstract-machine/am/src/nemu/ioe/timer.c	/^void __am_timer_rtc(AM_TIMER_RTC_T *rtc) {$/;"	f
__am_timer_uptime	abstract-machine/am/src/native/native-timer.c	/^void __am_timer_uptime(AM_TIMER_UPTIME_T *uptime) {$/;"	f
__am_timer_uptime	abstract-machine/am/src/nemu/ioe/timer.c	/^void __am_timer_uptime(AM_TIMER_UPTIME_T *uptime) {$/;"	f
__am_uart_config	abstract-machine/am/src/native/ioe.c	/^static void __am_uart_config(AM_UART_CONFIG_T *cfg)   { cfg->present = false; }$/;"	f	file:
__am_uart_config	abstract-machine/am/src/nemu/ioe/ioe.c	/^static void __am_uart_config(AM_UART_CONFIG_T *cfg)   { cfg->present = false; }$/;"	f	file:
__amkcontext_start	abstract-machine/am/src/x86/qemu/cte.c	/^void __amkcontext_start();$/;"	v
__amkcontext_start	abstract-machine/am/src/x86/qemu/trap32.S	/^__amkcontext_start:$/;"	l
__amkcontext_start	abstract-machine/am/src/x86/qemu/trap64.S	/^__amkcontext_start:$/;"	l
__builtin_clz	abstract-machine/klib/src/int64.c	/^uint32_t __inline __builtin_clz(uint32_t value) {$/;"	f
__builtin_clzl	abstract-machine/klib/src/int64.c	361;"	d	file:
__builtin_clzll	abstract-machine/klib/src/int64.c	/^uint32_t __inline __builtin_clzll(uint64_t value) {$/;"	f
__builtin_ctz	abstract-machine/klib/src/int64.c	/^uint32_t __inline __builtin_ctz(uint32_t value) {$/;"	f
__cartdata	fceux-am/src/boards/mmc5.cpp	/^typedef struct __cartdata {$/;"	s	file:
__clzsi2	abstract-machine/klib/src/int64.c	/^COMPILER_RT_ABI si_int __clzsi2(si_int a) {$/;"	f
__ctzsi2	abstract-machine/klib/src/int64.c	/^COMPILER_RT_ABI si_int __ctzsi2(si_int a) {$/;"	f
__cxa_atexit	abstract-machine/klib/src/cpp.c	/^void __cxa_atexit() {$/;"	f
__cxa_guard_acquire	abstract-machine/klib/src/cpp.c	/^void __cxa_guard_acquire() {$/;"	f
__cxa_guard_release	abstract-machine/klib/src/cpp.c	/^void __cxa_guard_release() {$/;"	f
__divdi3	abstract-machine/klib/src/int64.c	/^__divdi3(di_int a, di_int b)$/;"	f
__divmoddi4	abstract-machine/klib/src/int64.c	/^__divmoddi4(di_int a, di_int b, di_int* rem)$/;"	f
__dso_handle	abstract-machine/klib/src/cpp.c	/^void __dso_handle() {$/;"	f
__moddi3	abstract-machine/klib/src/int64.c	/^__moddi3(di_int a, di_int b)$/;"	f
__restrict__	fceux-am/src/types.h	83;"	d
__udivdi3	abstract-machine/klib/src/int64.c	/^__udivdi3(du_int a, du_int b)$/;"	f
__udivmoddi4	abstract-machine/klib/src/int64.c	/^__udivmoddi4(du_int a, du_int b, du_int* rem)$/;"	f
__umoddi3	abstract-machine/klib/src/int64.c	/^__umoddi3(du_int a, du_int b)$/;"	f
_aosdfjk02fmasf	fceux-am/src/drivers/sdl/input.h	2;"	d
_count	fceux-am/src/x6502abbrev.h	14;"	d
_fread	fceux-am/src/emufile.h	/^	size_t _fread(const void *ptr, size_t bytes){$/;"	f	class:EMUFILE_FILE
_fread	fceux-am/src/emufile.h	/^	virtual size_t _fread(const void *ptr, size_t bytes){$/;"	f	class:EMUFILE_FILE
_fv	fceux-am/src/ppu.cpp	/^	uint32 _fv, _v, _h, _vt, _ht;$/;"	m	struct:PPUREGS	file:
_h	fceux-am/src/ppu.cpp	/^	uint32 _fv, _v, _h, _vt, _ht;$/;"	m	struct:PPUREGS	file:
_ht	fceux-am/src/ppu.cpp	/^	uint32 _fv, _v, _h, _vt, _ht;$/;"	m	struct:PPUREGS	file:
_jammed	fceux-am/src/x6502abbrev.h	17;"	d
_start	abstract-machine/am/src/nemu/isa/mips32/boot/start.S	/^_start:$/;"	l
_start	abstract-machine/am/src/nemu/isa/riscv32/boot/start.S	/^_start:$/;"	l
_start	abstract-machine/am/src/nemu/isa/riscv64/boot/start.S	/^_start:$/;"	l
_start	abstract-machine/am/src/nemu/isa/x86/boot/start.S	/^_start:$/;"	l
_start	abstract-machine/am/src/x86/qemu/boot/start.S	/^_start:$/;"	l
_start	abstract-machine/am/src/x86/qemu/start32.S	/^_start:$/;"	l
_start	abstract-machine/am/src/x86/qemu/start64.S	/^_start:$/;"	l
_start64	abstract-machine/am/src/x86/qemu/start64.S	/^_start64:$/;"	l
_start_c	abstract-machine/am/src/x86/qemu/trm.c	/^void _start_c(char *args) {$/;"	f
_str	nemu/tools/qemu-diff/include/isa/mips32.h	4;"	d
_tcount	fceux-am/src/x6502abbrev.h	15;"	d
_trm_init	abstract-machine/am/src/nemu/trm.c	/^void _trm_init() {$/;"	f
_v	fceux-am/src/ppu.cpp	/^	uint32 _fv, _v, _h, _vt, _ht;$/;"	m	struct:PPUREGS	file:
_vt	fceux-am/src/ppu.cpp	/^	uint32 _fv, _v, _h, _vt, _ht;$/;"	m	struct:PPUREGS	file:
abs	abstract-machine/klib/src/stdlib.c	/^int abs(int x) {$/;"	f
ack	nemu/tools/qemu-diff/src/protocol.c	/^  bool ack;$/;"	m	struct:gdb_conn	file:
acount	fceux-am/src/boards/vrc2and4.cpp	/^static uint16 acount = 0;$/;"	v	file:
add_alarm_handle	nemu/src/device/alarm.c	/^void add_alarm_handle(void *h) {$/;"	f
add_mmio_map	nemu/src/device/io/mmio.c	/^void add_mmio_map(char *name, paddr_t addr, uint8_t* space, int len, io_callback_t callback) {$/;"	f
add_pio_map	nemu/src/device/io/port-io.c	/^void add_pio_map(char *name, ioaddr_t addr, uint8_t *space, int len, io_callback_t callback) {$/;"	f
addrlatch	fceux-am/src/boards/eh8813a.cpp	/^static uint16 addrlatch;$/;"	v	file:
addrreg0	fceux-am/src/boards/addrlatch.cpp	/^static uint16 addrreg0, addrreg1;$/;"	v	file:
addrreg0	fceux-am/src/boards/datalatch.cpp	/^static uint16 addrreg0, addrreg1;$/;"	v	file:
addrreg1	fceux-am/src/boards/addrlatch.cpp	/^static uint16 addrreg0, addrreg1;$/;"	v	file:
addrreg1	fceux-am/src/boards/datalatch.cpp	/^static uint16 addrreg0, addrreg1;$/;"	v	file:
adr	fceux-am/src/boards/emu2413.h	/^	uint32 adr;$/;"	m	struct:__anon44
adrperm	fceux-am/src/boards/8237.cpp	/^static uint8 adrperm[8][8] =$/;"	v	file:
alarm_handler_t	nemu/src/device/alarm.c	/^typedef void (*alarm_handler_t) ();$/;"	t	file:
alarm_sig_handler	nemu/src/device/alarm.c	/^static void alarm_sig_handler(int signum) {$/;"	f	file:
all	abstract-machine/klib/src/int64.c	/^    di_int all;$/;"	m	union:__anon16	file:
all	abstract-machine/klib/src/int64.c	/^    du_int all;$/;"	m	union:__anon18	file:
all	abstract-machine/klib/src/int64.c	/^    ti_int all;$/;"	m	union:__anon20	file:
all	abstract-machine/klib/src/int64.c	/^    tu_int all;$/;"	m	union:__anon22	file:
alloca	fceux-am/src/types.h	48;"	d
alloca	fceux-am/src/types.h	59;"	d
am_dphase	fceux-am/src/boards/emu2413.c	/^static uint32 am_dphase;$/;"	v	file:
am_phase	fceux-am/src/boards/emu2413.h	/^	int32 am_phase;$/;"	m	struct:__anon44
amtable	fceux-am/src/boards/emu2413.c	/^static int32 amtable[AM_PG_WIDTH];$/;"	v	file:
ap_ready	abstract-machine/am/src/x86/qemu/mpe.c	/^static int ap_ready = 0;$/;"	v	file:
apu40xx	fceux-am/src/boards/onebus.cpp	/^static uint8 cpu410x[16], ppu201x[16], apu40xx[64];$/;"	v	file:
archiveCount	fceux-am/src/file.h	/^	int archiveCount;$/;"	m	struct:FCEUFILE
archiveCount	fceux-am/src/git.h	/^	int archiveCount;$/;"	m	struct:FCEUGI
archiveIndex	fceux-am/src/file.h	/^	int archiveIndex;$/;"	m	struct:FCEUFILE
area	abstract-machine/am/include/am.h	/^  Area area;$/;"	m	struct:__anon13
area	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  Area area;$/;"	m	struct:vm_area
areg	fceux-am/src/boards/228.cpp	/^static uint16 areg;$/;"	v	file:
args	abstract-machine/am/src/x86.h	/^  uint32_t args      :  5; \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:__anon2
array	nemu/tools/qemu-diff/include/isa/mips32.h	/^    uint32_t array[77];$/;"	m	struct:isa_gdb_regs::__anon104
array	nemu/tools/qemu-diff/include/isa/riscv32.h	/^    uint32_t array[77];$/;"	m	struct:isa_gdb_regs::__anon98
array	nemu/tools/qemu-diff/include/isa/riscv64.h	/^    uint32_t array[77];$/;"	m	struct:isa_gdb_regs::__anon102
array	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t array[77];$/;"	m	struct:isa_gdb_regs::__anon100
asm_print	nemu/src/monitor/debug/log.c	/^void asm_print(vaddr_t this_pc, int instr_len, bool print_flag) {$/;"	f
ass	fceux-am/src/boards/n625092.cpp	/^static uint16 ass = 0;$/;"	v	file:
assert	abstract-machine/klib/include/klib.h	43;"	d
assert	abstract-machine/klib/include/klib.h	45;"	d
at	fceux-am/src/ppu.cpp	/^		uint8 nt, pecnt, at, pt[2], qtnt;$/;"	m	struct:BGData::Record	file:
atoi	abstract-machine/klib/src/stdlib.c	/^int atoi(const char* nptr) {$/;"	f
atomic_xchg	abstract-machine/am/src/native/mpe.c	/^int atomic_xchg(int *addr, int newval) {$/;"	f
atomic_xchg	abstract-machine/am/src/nemu/mpe.c	/^int atomic_xchg(int *addr, int newval) {$/;"	f
atomic_xchg	abstract-machine/am/src/x86/qemu/mpe.c	/^int atomic_xchg(int *addr, int newval) {$/;"	f
atr	fceux-am/src/ppu.cpp	/^	uint8 ca[2], atr, x;$/;"	m	struct:__anon46	file:
atr	fceux-am/src/ppu.cpp	/^	uint8 y, no, atr, x;$/;"	m	struct:__anon45	file:
attrib	fceux-am/src/input.h	/^	int attrib;$/;"	m	struct:FCPORT
attrib	fceux-am/src/input.h	/^	int attrib;$/;"	m	struct:JOYPORT
audio_base	nemu/src/device/audio.c	/^static uint32_t *audio_base = NULL;$/;"	v	file:
audio_config	abstract-machine/am/src/x86/qemu/ioe.c	/^static void audio_config(AM_AUDIO_CONFIG_T *cfg) { cfg->present = false; }$/;"	f	file:
audio_io_handler	nemu/src/device/audio.c	/^static void audio_io_handler(uint32_t offset, int len, bool is_write) {$/;"	f	file:
audio_play	abstract-machine/am/src/native/native-audio.c	/^static void audio_play(void *userdata, uint8_t *stream, int len) {$/;"	f	file:
audio_play	nemu/src/device/audio.c	/^static inline void audio_play(void *userdata, uint8_t *stream, int len) {$/;"	f	file:
audio_write	abstract-machine/am/src/native/native-audio.c	/^static int audio_write(uint8_t *buf, int len) {$/;"	f	file:
avl	abstract-machine/am/src/x86.h	/^  uint32_t avl        :  1; \/\/ Unused (available for software use)$/;"	m	struct:__anon1
b	abstract-machine/am/src/x86/qemu/ioe.c	/^  uint8_t b, g, r;$/;"	m	struct:pixel	file:
b	fceux-am/src/drivers/sdl/sdl-video.cpp	/^  uint8 r, g, b, unused;$/;"	m	struct:__anon47	file:
b	fceux-am/src/palette.h	/^	uint8 r,g,b;$/;"	m	struct:__anon31
badvaddr	nemu/tools/qemu-diff/include/isa/mips32.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anon103
bank	fceux-am/src/boards/112.cpp	/^static uint8 mirror, cmd, bank;$/;"	v	file:
bank	fceux-am/src/boards/193.cpp	/^static uint8 mirror, cmd, bank;$/;"	v	file:
bank	fceux-am/src/boards/232.cpp	/^static uint8 bank, preg;$/;"	v	file:
bank	fceux-am/src/boards/234.cpp	/^static uint8 bank, preg;$/;"	v	file:
bank	fceux-am/src/boards/51.cpp	/^static uint8 bank, mode;$/;"	v	file:
bank	fceux-am/src/boards/62.cpp	/^static uint8 bank;$/;"	v	file:
bank	fceux-am/src/boards/ghostbusters63in1.cpp	/^static uint8 reg[2], bank;$/;"	v	file:
bank	fceux-am/src/boards/n625092.cpp	/^static uint16 cmd, bank;$/;"	v	file:
bank	fceux-am/src/boards/t-262.cpp	/^static uint8 bank, base, lock, mirr, mode;$/;"	v	file:
bank	fceux-am/src/boards/yoko.cpp	/^static uint8 mode, bank, reg[11], low[4], dip, IRQa;$/;"	v	file:
bank_mode	fceux-am/src/boards/bmc13in1jy110.cpp	/^static uint8 bank_mode;$/;"	v	file:
bank_mode	fceux-am/src/boards/bmc70in1.cpp	/^static uint8 bank_mode;$/;"	v	file:
bank_value	fceux-am/src/boards/bmc13in1jy110.cpp	/^static uint8 bank_value;$/;"	v	file:
banks	fceux-am/src/boards/ghostbusters63in1.cpp	/^static uint8 banks[4] = { 0, 0, 1, 2 };$/;"	v	file:
base	fceux-am/src/boards/t-262.cpp	/^static uint8 bank, base, lock, mirr, mode;$/;"	v	file:
base	nemu/src/isa/x86/decode.c	/^    uint8_t base	:3;$/;"	m	struct:__anon58::__anon59	file:
base_15_0	abstract-machine/am/src/x86.h	/^  uint32_t base_15_0  : 16; \/\/ Low bits of segment base address$/;"	m	struct:__anon1
base_23_16	abstract-machine/am/src/x86.h	/^  uint32_t base_23_16 :  8; \/\/ Middle bits of segment base address$/;"	m	struct:__anon1
base_31_24	abstract-machine/am/src/x86.h	/^  uint32_t base_31_24 :  8; \/\/ High bits of segment base address$/;"	m	struct:__anon1
baseof	abstract-machine/am/src/x86/qemu/vme.c	/^static uintptr_t baseof(uintptr_t addr) {$/;"	f	file:
batch_mode	nemu/src/monitor/monitor.c	/^static int batch_mode = false;$/;"	v	file:
battery	fceux-am/src/boards/n106.cpp	/^static int battery = 0;$/;"	v	file:
battery	fceux-am/src/cart.h	/^	int battery;	\/\/ Presence of an actual battery.$/;"	m	struct:__anon37
battery_vram_size	fceux-am/src/cart.h	/^	int battery_vram_size;$/;"	m	struct:__anon37
battery_wram_size	fceux-am/src/cart.h	/^	int battery_wram_size;$/;"	m	struct:__anon37
bbrk	fceux-am/src/boards/sl1632.cpp	/^static uint8 chrcmd[8], prg0, prg1, bbrk, mirr, swap;$/;"	v	file:
bgdata	fceux-am/src/ppu.cpp	/^} bgdata;$/;"	v	typeref:struct:BGData
big_bank	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 regcmd, irqcmd, mirr, big_bank;$/;"	v	file:
bios_prg	fceux-am/src/boards/80013-B.cpp	/^static uint8 bios_prg, rom_prg, rom_mode, mirror;$/;"	v	file:
bisqwit_clamp	fceux-am/src/palette.cpp	/^int bisqwit_clamp(int v) { return v<0 ? 0 : v>255 ? 255 : v; }$/;"	f
bisqwit_wave	fceux-am/src/palette.cpp	/^int bisqwit_wave(int p, int color) { return (color+p+8)%12 < 6; }$/;"	f
bitrevlut	fceux-am/src/ppu.cpp	/^} bitrevlut;$/;"	v	typeref:struct:BITREVLUT
bits	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^    int shift, bits;$/;"	m	struct:mmu_config::ptinfo
block	fceux-am/src/boards/emu2413.h	/^	int32 block;        \/* Block *\/$/;"	m	struct:__anon43
bmap	fceux-am/src/ines.cpp	/^BMAPPINGLocal bmap[] = {$/;"	v
bool	nemu/include/common.h	/^typedef uint8_t bool;$/;"	t
bool	nemu/tools/qemu-diff/include/common.h	/^typedef uint8_t bool;$/;"	t
boop	fceux-am/src/video.cpp	/^static uint64 boop[60];$/;"	v	file:
boopcount	fceux-am/src/video.cpp	/^static int boopcount = 0;$/;"	v	file:
boot_date	abstract-machine/am/src/x86/qemu/ioe.c	/^static AM_TIMER_RTC_T boot_date;$/;"	v	file:
boot_record	abstract-machine/am/src/x86.h	/^static inline volatile BootRecord *boot_record() {$/;"	f
boot_time	abstract-machine/am/src/native/native-timer.c	/^static struct timeval boot_time = {};$/;"	v	typeref:struct:timeval	file:
br_tbl	fceux-am/src/boards/pec-586.cpp	/^static uint8 br_tbl[16] = {$/;"	v	file:
bs_tbl	fceux-am/src/boards/pec-586.cpp	/^static uint8 bs_tbl[128] = {$/;"	v	file:
buf	nemu/tools/gen-expr/gen-expr.c	/^static char buf[65536] = {};$/;"	v	file:
buffer	fceux-am/src/utils/md5.h	/^    uint8 buffer[64];$/;"	m	struct:md5_context
bug	abstract-machine/am/src/x86/qemu/x86-qemu.h	81;"	d
bug_on	abstract-machine/am/src/x86/qemu/x86-qemu.h	76;"	d
bus_conflict	fceux-am/src/boards/datalatch.cpp	/^static uint8 latche, latcheinit, bus_conflict;$/;"	v	file:
bus_conflict	fceux-am/src/boards/unrom512.cpp	/^static uint8 latche, latcheinit, bus_conflict, chrram_mask, software_id=false;$/;"	v	file:
bytes_per_pixel	fceux-am/src/drivers/sdl/sdl-icon.h	/^  unsigned int  	 bytes_per_pixel; \/* 3:RGB, 4:RGBA *\/$/;"	m	struct:__anon49
c_add	nemu/src/engine/interpreter/c_op.h	12;"	d
c_addw	nemu/src/engine/interpreter/c_op.h	23;"	d
c_and	nemu/src/engine/interpreter/c_op.h	14;"	d
c_div_q	nemu/src/engine/interpreter/c_op.h	45;"	d
c_div_r	nemu/src/engine/interpreter/c_op.h	46;"	d
c_divuw	nemu/src/engine/interpreter/c_op.h	37;"	d
c_divw	nemu/src/engine/interpreter/c_op.h	36;"	d
c_idiv_q	nemu/src/engine/interpreter/c_op.h	47;"	d
c_idiv_r	nemu/src/engine/interpreter/c_op.h	48;"	d
c_imul_hi	nemu/src/engine/interpreter/c_op.h	34;"	d
c_imul_hi	nemu/src/engine/interpreter/c_op.h	42;"	d
c_imul_lo	nemu/src/engine/interpreter/c_op.h	31;"	d
c_mul_hi	nemu/src/engine/interpreter/c_op.h	33;"	d
c_mul_hi	nemu/src/engine/interpreter/c_op.h	41;"	d
c_mul_lo	nemu/src/engine/interpreter/c_op.h	30;"	d
c_mulw	nemu/src/engine/interpreter/c_op.h	35;"	d
c_or	nemu/src/engine/interpreter/c_op.h	15;"	d
c_remuw	nemu/src/engine/interpreter/c_op.h	39;"	d
c_remw	nemu/src/engine/interpreter/c_op.h	38;"	d
c_sar	nemu/src/engine/interpreter/c_op.h	19;"	d
c_sarw	nemu/src/engine/interpreter/c_op.h	27;"	d
c_sext32to64	nemu/src/engine/interpreter/c_op.h	22;"	d
c_shift_mask	nemu/src/engine/interpreter/c_op.h	7;"	d
c_shift_mask	nemu/src/engine/interpreter/c_op.h	9;"	d
c_shl	nemu/src/engine/interpreter/c_op.h	17;"	d
c_shlw	nemu/src/engine/interpreter/c_op.h	25;"	d
c_shr	nemu/src/engine/interpreter/c_op.h	18;"	d
c_shrw	nemu/src/engine/interpreter/c_op.h	26;"	d
c_sub	nemu/src/engine/interpreter/c_op.h	13;"	d
c_subw	nemu/src/engine/interpreter/c_op.h	24;"	d
c_xor	nemu/src/engine/interpreter/c_op.h	16;"	d
ca	fceux-am/src/ppu.cpp	/^	uint8 ca[2], atr, x;$/;"	m	struct:__anon46	file:
calc	fceux-am/src/boards/emu2413.c	/^static INLINE int16 calc(OPLL * opll) {$/;"	f	file:
calc_eg_dphase	fceux-am/src/boards/emu2413.c	/^INLINE static uint32 calc_eg_dphase(OPLL_SLOT * slot) {$/;"	f	file:
calc_envelope	fceux-am/src/boards/emu2413.c	/^static void calc_envelope(OPLL_SLOT * slot, int32 lfo) {$/;"	f	file:
calc_phase	fceux-am/src/boards/emu2413.c	/^INLINE static void calc_phase(OPLL_SLOT * slot, int32 lfo) {$/;"	f	file:
calc_slot_car	fceux-am/src/boards/emu2413.c	/^INLINE static int32 calc_slot_car(OPLL_SLOT * slot, int32 fm) {$/;"	f	file:
calc_slot_mod	fceux-am/src/boards/emu2413.c	/^INLINE static int32 calc_slot_mod(OPLL_SLOT * slot) {$/;"	f	file:
call_main	abstract-machine/am/src/x86/qemu/trm.c	/^static void call_main(const char *args) {$/;"	f	file:
call_user_entry	abstract-machine/am/src/x86/qemu/mpe.c	/^static void call_user_entry() {$/;"	f	file:
callback	nemu/include/device/map.h	/^  io_callback_t callback;$/;"	m	struct:__anon70
canvas	fceux-am/src/drivers/sdl/sdl-video.cpp	/^static uint32_t canvas[NWIDTH * 240];$/;"	v	file:
capture_output	abstract-machine/am/src/x86/qemu/boot/genboot.py	/^        capture_output=True).stdout$/;"	v
cartdata	fceux-am/src/boards/mmc5.cpp	/^} cartdata;$/;"	t	typeref:struct:__cartdata	file:
cause	abstract-machine/am/include/am.h	/^  uintptr_t cause, ref;$/;"	m	struct:__anon11
cause	abstract-machine/am/include/arch/mips32-nemu.h	/^  uintptr_t hi, gpr[32], epc, cause, lo, status;$/;"	m	struct:Context
cause	abstract-machine/am/include/arch/riscv32-nemu.h	/^  uintptr_t epc, cause, gpr[32], status;$/;"	m	struct:Context
cause	abstract-machine/am/include/arch/riscv64-nemu.h	/^  uintptr_t epc, cause, gpr[32], status;$/;"	m	struct:Context
cause	nemu/tools/qemu-diff/include/isa/mips32.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anon103
cdloggerVideoDataSize	fceux-am/src/ppu.cpp	/^unsigned int cdloggerVideoDataSize = 0;$/;"	v
cdloggervdata	fceux-am/src/ppu.cpp	/^unsigned char *cdloggervdata = NULL;$/;"	v
check_bound	nemu/src/device/io/map.c	/^static inline void check_bound(IOMap *map, paddr_t addr) {$/;"	f	file:
check_reg_index	nemu/src/isa/mips32/local-include/reg.h	/^static inline int check_reg_index(int index) {$/;"	f
check_reg_index	nemu/src/isa/riscv32/local-include/reg.h	/^static inline int check_reg_index(int index) {$/;"	f
check_reg_index	nemu/src/isa/riscv64/local-include/reg.h	/^static inline int check_reg_index(int index) {$/;"	f
check_reg_index	nemu/src/isa/x86/local-include/reg.h	/^static inline int check_reg_index(int index) {$/;"	f
checkregs	nemu/src/monitor/difftest/dut.c	/^static void checkregs(CPU_state *ref, vaddr_t pc) {$/;"	f	file:
checksum	abstract-machine/am/src/x86.h	/^  uint8_t  checksum;      \/\/ all bytes must add up to 0$/;"	m	struct:__anon6
checksum	abstract-machine/am/src/x86.h	/^  uint8_t  checksum; \/\/ all bytes add to 0$/;"	m	struct:__anon7
child	abstract-machine/am/include/amdev.h	/^    gpuptr_t child;$/;"	m	union:gpu_canvas::__anon15
chr	fceux-am/src/boards/176.cpp	/^static uint8 prg[4], chr, sbw, we_sram;$/;"	v	file:
chr	fceux-am/src/boards/183.cpp	/^static uint8 prg[4], chr[8], mirr;$/;"	v	file:
chr	fceux-am/src/boards/225.cpp	/^static uint8 prot[4], prg, mode, chr, mirr;$/;"	v	file:
chr	fceux-am/src/boards/28.cpp	/^uint8 chr;$/;"	v
chr	fceux-am/src/boards/90.cpp	/^static uint8 chr[2];$/;"	v	file:
chr	fceux-am/src/boards/bb.cpp	/^static uint8 reg, chr;$/;"	v	file:
chr	fceux-am/src/boards/le05.cpp	/^static uint8 chr;$/;"	v	file:
chr	fceux-am/src/boards/sc-127.cpp	/^static uint8 reg[8], chr[8];$/;"	v	file:
chr	fceux-am/src/boards/tf-1201.cpp	/^static uint8 chr[8];$/;"	v	file:
chr	fceux-am/src/boards/vrc6.cpp	/^static uint8 prg[2], chr[8], mirr;$/;"	v	file:
chr	fceux-am/src/boards/vrc7p.cpp	/^static uint8 prg[3], chr[8], mirr;$/;"	v	file:
chrSync	fceux-am/src/boards/vrc5.cpp	/^static void chrSync(void) {$/;"	f	file:
chr_bank	fceux-am/src/boards/bmc70in1.cpp	/^static uint8 chr_bank;$/;"	v	file:
chr_perm	fceux-am/src/boards/244.cpp	/^static uint8 chr_perm[8][8] = {$/;"	v	file:
chr_reg	fceux-am/src/boards/222.cpp	/^static uint8 chr_reg[8];$/;"	v	file:
chr_reg	fceux-am/src/boards/57.cpp	/^static uint8 chr_reg;$/;"	v	file:
chr_reg	fceux-am/src/boards/68.cpp	/^static uint8 chr_reg[4];$/;"	v	file:
chr_reg	fceux-am/src/boards/ax5705.cpp	/^static uint8 chr_reg[8];$/;"	v	file:
chr_reg	fceux-am/src/boards/bonza.cpp	/^static uint8 chr_reg;$/;"	v	file:
chr_reg	fceux-am/src/boards/cityfighter.cpp	/^static uint8 chr_reg[8];$/;"	v	file:
chrcmd	fceux-am/src/boards/sl1632.cpp	/^static uint8 chrcmd[8], prg0, prg1, bbrk, mirr, swap;$/;"	v	file:
chrhi	fceux-am/src/boards/156.cpp	/^static uint8 chrlo[8], chrhi[8], prg, mirr, mirrisused = 0;$/;"	v	file:
chrhi	fceux-am/src/boards/253.cpp	/^static uint8 chrlo[8], chrhi[8], prg[2], mirr, vlock;$/;"	v	file:
chrhi	fceux-am/src/boards/vrc2and4.cpp	/^static uint16 chrhi[8];$/;"	v	file:
chrhigh	fceux-am/src/boards/90.cpp	/^static uint8 chrhigh[8];$/;"	v	file:
chrlo	fceux-am/src/boards/156.cpp	/^static uint8 chrlo[8], chrhi[8], prg, mirr, mirrisused = 0;$/;"	v	file:
chrlo	fceux-am/src/boards/253.cpp	/^static uint8 chrlo[8], chrhi[8], prg[2], mirr, vlock;$/;"	v	file:
chrlow	fceux-am/src/boards/90.cpp	/^static uint8 chrlow[8];$/;"	v	file:
chrr	fceux-am/src/boards/190.cpp	/^static uint8 prgr, chrr[4];$/;"	v	file:
chrram_mask	fceux-am/src/boards/unrom512.cpp	/^static uint8 latche, latcheinit, bus_conflict, chrram_mask, software_id=false;$/;"	v	file:
chrreg	fceux-am/src/boards/117.cpp	/^static uint8 prgreg[4], chrreg[8], mirror;$/;"	v	file:
chrreg	fceux-am/src/boards/41.cpp	/^static uint8 mainreg, chrreg, mirror;$/;"	v	file:
chrreg	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 prgreg[2], chrreg[8];$/;"	v	file:
cleanup	fceux-am/src/ines.h	/^	void cleanup()$/;"	f	struct:iNES_HEADER
clear_latches	fceux-am/src/ppu.cpp	/^	void clear_latches() {$/;"	f	struct:PPUREGS
cli	abstract-machine/am/src/x86.h	/^static inline void cli() {$/;"	f
click	fceux-am/src/boards/178.cpp	/^static uint32 MouseData[3], click, lastclick;$/;"	v	file:
clk	fceux-am/src/boards/emu2413.c	/^static uint32 clk = 844451141;$/;"	v	file:
cmd	fceux-am/src/boards/01-222.cpp	/^static uint8 reg[4], cmd, is172, is173;$/;"	v	file:
cmd	fceux-am/src/boards/112.cpp	/^static uint8 mirror, cmd, bank;$/;"	v	file:
cmd	fceux-am/src/boards/193.cpp	/^static uint8 mirror, cmd, bank;$/;"	v	file:
cmd	fceux-am/src/boards/206.cpp	/^static uint8 cmd;$/;"	v	file:
cmd	fceux-am/src/boards/80.cpp	/^static uint8 mirr, cmd, wram_enable, wram[256];$/;"	v	file:
cmd	fceux-am/src/boards/88.cpp	/^static uint8 mirror, cmd, is154;$/;"	v	file:
cmd	fceux-am/src/boards/ks7032.cpp	/^static uint8 reg[8], cmd, IRQa = 0, isirqused = 0;$/;"	v	file:
cmd	fceux-am/src/boards/ks7037.cpp	/^static uint8 reg[8], cmd;$/;"	v	file:
cmd	fceux-am/src/boards/n625092.cpp	/^static uint16 cmd, bank;$/;"	v	file:
cmd	fceux-am/src/boards/sachen.cpp	/^static uint8 cmd, dip;$/;"	v	file:
cmd	fceux-am/src/boards/tengen.cpp	/^static uint8 cmd, mirr, regs[11];$/;"	v	file:
cmd	fceux-am/src/input.h	/^	int cmd;$/;"	m	struct:EMUCMDTABLE
cmd0	fceux-am/src/boards/supervision.cpp	/^static uint8 cmd0, cmd1;$/;"	v	file:
cmd1	fceux-am/src/boards/supervision.cpp	/^static uint8 cmd0, cmd1;$/;"	v	file:
cmd_c	nemu/src/monitor/debug/ui.c	/^static int cmd_c(char *args) {$/;"	f	file:
cmd_help	nemu/src/monitor/debug/ui.c	/^static int cmd_help(char *args) {$/;"	f	file:
cmd_q	nemu/src/monitor/debug/ui.c	/^static int cmd_q(char *args) {$/;"	f	file:
cmd_table	nemu/src/monitor/debug/ui.c	/^} cmd_table [] = {$/;"	v	typeref:struct:__anon62	file:
cmdin	fceux-am/src/boards/8237.cpp	/^static uint8 cmdin;$/;"	v	file:
cmdin	fceux-am/src/boards/mmc3.cpp	/^static uint8 cmdin;$/;"	v	file:
cmdreg	fceux-am/src/boards/235.cpp	/^static uint16 cmdreg;$/;"	v	file:
cmdreg	fceux-am/src/boards/69.cpp	/^static uint8 cmdreg, preg[4], creg[8], mirr;$/;"	v	file:
cmdreg	fceux-am/src/boards/8157.cpp	/^static uint16 cmdreg;$/;"	v	file:
code_buf	nemu/tools/gen-expr/gen-expr.c	/^static char code_buf[65536 + 128] = {}; \/\/ a little larger than `buf`$/;"	v	file:
code_format	nemu/tools/gen-expr/gen-expr.c	/^static char *code_format =$/;"	v	file:
coeffs	fceux-am/src/filter.cpp	/^static int32 coeffs[NCOEFFS];$/;"	v	file:
compilerrt_abort	abstract-machine/klib/src/int64.c	300;"	d	file:
concat	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define concat(x, y) concat_temp(x, y)$/;"	d
concat	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define concat(x, y) concat_temp(x, y)$/;"	d
concat	nemu/include/macro.h	8;"	d
concat3	nemu/include/macro.h	9;"	d
concat4	nemu/include/macro.h	10;"	d
concat5	nemu/include/macro.h	11;"	d
concat_temp	abstract-machine/am/src/nemu/isa/riscv32/trap.S	/^#define concat_temp(x, y) x ## y$/;"	d
concat_temp	abstract-machine/am/src/nemu/isa/riscv64/trap.S	/^#define concat_temp(x, y) x ## y$/;"	d
concat_temp	nemu/include/macro.h	7;"	d
conf	abstract-machine/am/src/x86.h	/^  uint32_t conf;     \/\/ MP config table addr$/;"	m	struct:__anon7
conn	nemu/tools/qemu-diff/src/gdb-host.c	/^static struct gdb_conn *conn;$/;"	v	typeref:struct:gdb_conn	file:
conv_tbl	fceux-am/src/boards/vrc5.cpp	/^static uint8 conv_tbl[4][8] = {$/;"	v	file:
copy_from_disk	abstract-machine/am/src/x86/qemu/boot/main.c	/^static inline void copy_from_disk(void *buf, int nbytes, int disk_offset) {$/;"	f	file:
count	abstract-machine/am/src/native/native-audio.c	/^static volatile int count = 0;$/;"	v	file:
count	fceux-am/src/boards/68.cpp	/^static uint32 WRAMSIZE, count;$/;"	v	file:
count	fceux-am/src/ppu.cpp	/^	int32 count;$/;"	m	struct:SPRITE_READ	file:
count	fceux-am/src/x6502struct.h	/^	int32 count;$/;"	m	struct:__X6502
cpu	nemu/src/monitor/cpu-exec.c	/^CPU_state cpu = {};$/;"	v
cpu410x	fceux-am/src/boards/onebus.cpp	/^static uint8 cpu410x[16], ppu201x[16], apu40xx[64];$/;"	v	file:
cpu_count	abstract-machine/am/src/native/mpe.c	/^int cpu_count() {$/;"	f
cpu_count	abstract-machine/am/src/nemu/mpe.c	/^int cpu_count() {$/;"	f
cpu_count	abstract-machine/am/src/x86/qemu/mpe.c	/^int cpu_count() {$/;"	f
cpu_current	abstract-machine/am/src/native/mpe.c	/^int cpu_current() {$/;"	f
cpu_current	abstract-machine/am/src/nemu/mpe.c	/^int cpu_current() {$/;"	f
cpu_current	abstract-machine/am/src/x86/qemu/mpe.c	/^int cpu_current(void) {$/;"	f
cpu_exec	nemu/src/monitor/cpu-exec.c	/^void cpu_exec(uint64_t n) {$/;"	f
cpu_local	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^struct cpu_local {$/;"	s
cpuid	abstract-machine/am/src/native/platform.h	/^  int cpuid;$/;"	m	struct:__anon9
cr3	abstract-machine/am/include/arch/x86-nemu.h	/^  void *cr3;$/;"	m	struct:Context
cr3	abstract-machine/am/include/arch/x86-qemu.h	/^  void    *cr3;$/;"	m	struct:Context
cr3	abstract-machine/am/include/arch/x86_64-qemu.h	/^  void    *cr3;$/;"	m	struct:Context
crc32	fceux-am/src/boards/mmc5.cpp	/^	uint32 crc32;$/;"	m	struct:__cartdata	file:
crc32	fceux-am/src/ines.cpp	/^	uint32 crc32;$/;"	m	struct:CHINF	file:
crc32	fceux-am/src/ines.cpp	/^	uint32 crc32;$/;"	m	struct:INPSEL	file:
create_mem	nemu/tools/kvm-diff/src/kvm.c	/^static void* create_mem(int slot, uintptr_t base, size_t mem_size) {$/;"	f	file:
creg	fceux-am/src/boards/18.cpp	/^static uint8 preg[4], creg[8];$/;"	v	file:
creg	fceux-am/src/boards/244.cpp	/^static uint8 preg, creg;$/;"	v	file:
creg	fceux-am/src/boards/252.cpp	/^static uint8 creg[8], preg[2];$/;"	v	file:
creg	fceux-am/src/boards/32.cpp	/^static uint8 preg[2], creg[8], mirr;$/;"	v	file:
creg	fceux-am/src/boards/42.cpp	/^static uint8 preg, creg, mirr;$/;"	v	file:
creg	fceux-am/src/boards/65.cpp	/^static uint8 preg[3], creg[8], mirr;$/;"	v	file:
creg	fceux-am/src/boards/67.cpp	/^static uint8 preg, creg[4], mirr, suntoggle = 0;$/;"	v	file:
creg	fceux-am/src/boards/69.cpp	/^static uint8 cmdreg, preg[4], creg[8], mirr;$/;"	v	file:
creg	fceux-am/src/boards/72.cpp	/^static uint8 preg, creg;$/;"	v	file:
creg	fceux-am/src/boards/79.cpp	/^static uint8 creg, preg;$/;"	v	file:
creg	fceux-am/src/boards/80.cpp	/^static uint8 preg[3], creg[6], isExMirr;$/;"	v	file:
creg	fceux-am/src/boards/ffe.cpp	/^static uint8 preg[4], creg[8], latch, ffemode;$/;"	v	file:
creg	fceux-am/src/boards/ks7010.cpp	/^static uint8 preg[4], creg, mirr;$/;"	v	file:
creg	fceux-am/src/boards/mmc2and4.cpp	/^static uint8 creg[4], latch0, latch1, preg, mirr;$/;"	v	file:
creg	fceux-am/src/boards/vrc1.cpp	/^static uint8 preg[3], creg[2], mode;$/;"	v	file:
creg	fceux-am/src/boards/vrc7.cpp	/^static uint8 vrc7idx, preg[3], creg[8], mirr;$/;"	v	file:
cregs	fceux-am/src/boards/91.cpp	/^static uint8 cregs[4], pregs[2];$/;"	v	file:
cs	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
cs	abstract-machine/am/include/arch/x86-qemu.h	/^           eip, cs, eflags, esp, ss3;$/;"	m	struct:Context
cs	abstract-machine/am/include/arch/x86_64-qemu.h	/^           rip, cs, rflags,$/;"	m	struct:Context
cs	abstract-machine/am/src/x86.h	/^  uint32_t cs        : 16; \/\/ Code segment selector$/;"	m	struct:__anon2
cs	abstract-machine/am/src/x86.h	/^  uint32_t cs        : 16;$/;"	m	struct:__anon3
cs	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint32_t eip, cs, eflags, esp, ss;$/;"	m	struct:trap_frame
cs	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint64_t rip, cs, rflags, rsp, ss;$/;"	m	struct:trap_frame
cs	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t cs, ss, ds, es, fs, gs;$/;"	m	struct:isa_gdb_regs::__anon99
cspec	fceux-am/src/drivers/sdl/input.cpp	/^static int cspec = 0;$/;"	v	file:
cspecial	fceux-am/src/git.h	/^	ESIS cspecial;  \/\/Special cart expansion: DIP switches, barcode reader, etc.$/;"	m	struct:FCEUGI
ctrl	fceux-am/src/boards/12in1.cpp	/^static uint8 prgchr[2], ctrl;$/;"	v	file:
ctrl	fceux-am/src/boards/82.cpp	/^static uint8 regs[9], ctrl;$/;"	v	file:
cur_pdir	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^static PTE *cur_pdir = NULL;$/;"	v	file:
curfreq	fceux-am/src/sound.cpp	/^\/*static*\/ int32 curfreq[2];$/;"	v
curpos	fceux-am/src/emufile.h	/^  int curpos;$/;"	m	class:EMUFILE_FILE
currCartInfo	fceux-am/src/cart.cpp	/^CartInfo *currCartInfo;$/;"	v
cvbc	fceux-am/src/boards/vrc6.cpp	/^static int32 cvbc[3];$/;"	v	file:
cwd	fceux-am/nes/build-roms.py	/^cwd = Path('.')$/;"	v
cwrap	fceux-am/src/boards/mmc3.cpp	/^void (*cwrap)(uint32 A, uint8 V);$/;"	v
cycle	fceux-am/src/ppu.cpp	/^	int32 cycle, end_cycle;$/;"	m	struct:PPUSTATUS	file:
dB2	fceux-am/src/boards/emu2413.c	291;"	d	file:
data	abstract-machine/am/src/x86/qemu/boot/genboot.py	/^    data = subprocess.run($/;"	v
data	abstract-machine/am/src/x86/qemu/ioe.c	/^    uint32_t reg, pad[3], data;$/;"	m	struct:IOAPIC	file:
data	fceux-am/src/emufile.h	/^	u8* data;$/;"	m	class:EMUFILE_FILE
data	fceux-am/src/utils/valuearray.h	/^	T data[N];$/;"	m	struct:ValueArray
datalatch	fceux-am/src/boards/eh8813a.cpp	/^static uint8 datalatch, hw_mode;$/;"	v	file:
datareg	fceux-am/src/boards/185.cpp	/^static uint8 datareg;$/;"	v	file:
db	abstract-machine/am/src/x86.h	/^  uint32_t db         :  1; \/\/ 32-bit segment$/;"	m	struct:__anon1
dcount	fceux-am/src/boards/69.cpp	/^static int32 dcount[3];$/;"	v	file:
dcount	fceux-am/src/boards/mmc5.cpp	/^	int32 dcount[2];$/;"	m	struct:__anon39	file:
dcount	fceux-am/src/boards/vrc6.cpp	/^static int32 dcount[2];$/;"	v	file:
ddest	nemu/include/rtl/rtl.h	12;"	d
debug_log	fceux-am/src/ppu.cpp	/^	void debug_log()$/;"	f	struct:PPUREGS
debug_loggingCD	fceux-am/src/ppu.cpp	37;"	d	file:
decode_empty	nemu/include/cpu/exec.h	12;"	d
decvolume	fceux-am/src/sound.h	/^	uint8 decvolume;$/;"	m	struct:__anon36
deemp	fceux-am/src/ppu.cpp	/^static uint8 deemp = 0;$/;"	v	file:
deempcnt	fceux-am/src/ppu.cpp	/^static int deempcnt[8];$/;"	v	file:
def_DHelper	nemu/include/cpu/decode.h	33;"	d
def_DHelper	nemu/src/isa/mips32/local-include/decode.h	/^static inline def_DHelper(IU) {$/;"	f
def_DHelper	nemu/src/isa/mips32/local-include/decode.h	/^static inline def_DHelper(ld) {$/;"	f
def_DHelper	nemu/src/isa/mips32/local-include/decode.h	/^static inline def_DHelper(st) {$/;"	f
def_DHelper	nemu/src/isa/riscv32/local-include/decode.h	/^static inline def_DHelper(I) {$/;"	f
def_DHelper	nemu/src/isa/riscv32/local-include/decode.h	/^static inline def_DHelper(S) {$/;"	f
def_DHelper	nemu/src/isa/riscv32/local-include/decode.h	/^static inline def_DHelper(U) {$/;"	f
def_DHelper	nemu/src/isa/riscv64/local-include/decode.h	/^static inline def_DHelper(I) {$/;"	f
def_DHelper	nemu/src/isa/riscv64/local-include/decode.h	/^static inline def_DHelper(S) {$/;"	f
def_DHelper	nemu/src/isa/riscv64/local-include/decode.h	/^static inline def_DHelper(U) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(E2G) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(G2E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(I) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(I2E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(I2a) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(I2r) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(I_E2G) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(Ib_G2E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(J) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(O2a) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(SI2E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(SI_E2G) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(a2O) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(cl_G2E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(gp2_1_E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(gp2_Ib2E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(gp2_cl2E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(gp7_E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(in_I2a) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(in_dx2a) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(lea_M2G) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(mov_E2G) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(mov_G2E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(mov_I2E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(mov_I2r) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(out_a2I) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(out_a2dx) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(push_SI) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(r) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(setcc_E) {$/;"	f
def_DHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DHelper(test_I) {$/;"	f
def_DopHelper	nemu/src/isa/mips32/local-include/decode.h	/^static inline def_DopHelper(i) {$/;"	f
def_DopHelper	nemu/src/isa/mips32/local-include/decode.h	/^static inline def_DopHelper(r) {$/;"	f
def_DopHelper	nemu/src/isa/mips32/local-include/decode.h	5;"	d
def_DopHelper	nemu/src/isa/riscv32/local-include/decode.h	/^static inline def_DopHelper(i) {$/;"	f
def_DopHelper	nemu/src/isa/riscv32/local-include/decode.h	/^static inline def_DopHelper(r) {$/;"	f
def_DopHelper	nemu/src/isa/riscv32/local-include/decode.h	5;"	d
def_DopHelper	nemu/src/isa/riscv64/local-include/decode.h	/^static inline def_DopHelper(i) {$/;"	f
def_DopHelper	nemu/src/isa/riscv64/local-include/decode.h	/^static inline def_DopHelper(r) {$/;"	f
def_DopHelper	nemu/src/isa/riscv64/local-include/decode.h	5;"	d
def_DopHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DopHelper(I) {$/;"	f
def_DopHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DopHelper(O) {$/;"	f
def_DopHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DopHelper(SI) {$/;"	f
def_DopHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DopHelper(a) {$/;"	f
def_DopHelper	nemu/src/isa/x86/local-include/decode.h	/^static inline def_DopHelper(r) {$/;"	f
def_DopHelper	nemu/src/isa/x86/local-include/decode.h	32;"	d
def_EHelper	nemu/include/cpu/exec.h	9;"	d
def_EHelper	nemu/src/isa/mips32/exec/compute.h	/^static inline def_EHelper(lui) {$/;"	f
def_EHelper	nemu/src/isa/mips32/exec/exec.c	/^static inline def_EHelper(special) {$/;"	f	file:
def_EHelper	nemu/src/isa/mips32/exec/ldst.h	/^static inline def_EHelper(ld) {$/;"	f
def_EHelper	nemu/src/isa/mips32/exec/ldst.h	/^static inline def_EHelper(st) {$/;"	f
def_EHelper	nemu/src/isa/mips32/exec/special.c	/^def_EHelper(inv) {$/;"	f
def_EHelper	nemu/src/isa/mips32/exec/special.c	/^def_EHelper(nemu_trap) {$/;"	f
def_EHelper	nemu/src/isa/riscv32/exec/compute.h	/^static inline def_EHelper(lui) {$/;"	f
def_EHelper	nemu/src/isa/riscv32/exec/exec.c	/^static inline def_EHelper(load) {$/;"	f	file:
def_EHelper	nemu/src/isa/riscv32/exec/exec.c	/^static inline def_EHelper(store) {$/;"	f	file:
def_EHelper	nemu/src/isa/riscv32/exec/ldst.h	/^static inline def_EHelper(ld) {$/;"	f
def_EHelper	nemu/src/isa/riscv32/exec/ldst.h	/^static inline def_EHelper(st) {$/;"	f
def_EHelper	nemu/src/isa/riscv32/exec/special.c	/^def_EHelper(inv) {$/;"	f
def_EHelper	nemu/src/isa/riscv32/exec/special.c	/^def_EHelper(nemu_trap) {$/;"	f
def_EHelper	nemu/src/isa/riscv64/exec/compute.h	/^static inline def_EHelper(lui) {$/;"	f
def_EHelper	nemu/src/isa/riscv64/exec/exec.c	/^static inline def_EHelper(load) {$/;"	f	file:
def_EHelper	nemu/src/isa/riscv64/exec/exec.c	/^static inline def_EHelper(store) {$/;"	f	file:
def_EHelper	nemu/src/isa/riscv64/exec/ldst.h	/^static inline def_EHelper(ld) {$/;"	f
def_EHelper	nemu/src/isa/riscv64/exec/ldst.h	/^static inline def_EHelper(st) {$/;"	f
def_EHelper	nemu/src/isa/riscv64/exec/special.c	/^def_EHelper(inv) {$/;"	f
def_EHelper	nemu/src/isa/riscv64/exec/special.c	/^def_EHelper(nemu_trap) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(adc) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(add) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(cmp) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(dec) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(div) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(idiv) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(imul1) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(imul2) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(imul3) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(inc) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(mul) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(neg) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(sbb) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/arith.h	/^static inline def_EHelper(sub) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/control.h	/^static inline def_EHelper(call) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/control.h	/^static inline def_EHelper(call_rm) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/control.h	/^static inline def_EHelper(jcc) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/control.h	/^static inline def_EHelper(jmp) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/control.h	/^static inline def_EHelper(jmp_rm) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/control.h	/^static inline def_EHelper(ret) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/control.h	/^static inline def_EHelper(ret_imm) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(cltd) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(cwtl) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(lea) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(leave) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(mov) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(movsx) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(movzx) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(pop) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(popa) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(push) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/data-mov.h	/^static inline def_EHelper(pusha) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/exec.c	/^static inline def_EHelper(gp1) {$/;"	f	file:
def_EHelper	nemu/src/isa/x86/exec/exec.c	/^static inline def_EHelper(gp2) {$/;"	f	file:
def_EHelper	nemu/src/isa/x86/exec/exec.c	/^static inline def_EHelper(gp3) {$/;"	f	file:
def_EHelper	nemu/src/isa/x86/exec/exec.c	/^static inline def_EHelper(gp4) {$/;"	f	file:
def_EHelper	nemu/src/isa/x86/exec/exec.c	/^static inline def_EHelper(gp5) {$/;"	f	file:
def_EHelper	nemu/src/isa/x86/exec/exec.c	/^static inline def_EHelper(gp7) {$/;"	f	file:
def_EHelper	nemu/src/isa/x86/exec/logic.h	/^static inline def_EHelper(and) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/logic.h	/^static inline def_EHelper(not) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/logic.h	/^static inline def_EHelper(or) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/logic.h	/^static inline def_EHelper(sar) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/logic.h	/^static inline def_EHelper(setcc) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/logic.h	/^static inline def_EHelper(shl) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/logic.h	/^static inline def_EHelper(shr) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/logic.h	/^static inline def_EHelper(test) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/logic.h	/^static inline def_EHelper(xor) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/special.c	/^def_EHelper(inv) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/special.c	/^def_EHelper(nemu_trap) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/special.c	/^def_EHelper(nop) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/system.h	/^static inline def_EHelper(in) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/system.h	/^static inline def_EHelper(int) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/system.h	/^static inline def_EHelper(iret) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/system.h	/^static inline def_EHelper(lidt) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/system.h	/^static inline def_EHelper(mov_cr2r) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/system.h	/^static inline def_EHelper(mov_r2cr) {$/;"	f
def_EHelper	nemu/src/isa/x86/exec/system.h	/^static inline def_EHelper(out) {$/;"	f
def_rtl	nemu/include/rtl/pseudo.h	/^static inline def_rtl(li, rtlreg_t* dest, const rtlreg_t imm) {$/;"	f
def_rtl	nemu/include/rtl/pseudo.h	/^static inline def_rtl(msb, rtlreg_t* dest, const rtlreg_t* src1, int width) {$/;"	f
def_rtl	nemu/include/rtl/pseudo.h	/^static inline def_rtl(mv, rtlreg_t* dest, const rtlreg_t *src1) {$/;"	f
def_rtl	nemu/include/rtl/pseudo.h	/^static inline def_rtl(neg, rtlreg_t *dest, const rtlreg_t* src1) {$/;"	f
def_rtl	nemu/include/rtl/pseudo.h	/^static inline def_rtl(not, rtlreg_t *dest, const rtlreg_t* src1) {$/;"	f
def_rtl	nemu/include/rtl/pseudo.h	/^static inline def_rtl(sext, rtlreg_t* dest, const rtlreg_t* src1, int width) {$/;"	f
def_rtl	nemu/include/rtl/pseudo.h	/^static inline def_rtl(zext, rtlreg_t* dest, const rtlreg_t* src1, int width) {$/;"	f
def_rtl	nemu/include/rtl/rtl.h	21;"	d
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(div64_q, rtlreg_t* dest,$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(div64_r, rtlreg_t* dest,$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(host_lm, rtlreg_t* dest, const void *addr, int len) {$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(host_sm, void *addr, const rtlreg_t *src1, int len) {$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(idiv64_q, rtlreg_t* dest,$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(idiv64_r, rtlreg_t* dest,$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(j, vaddr_t target) {$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(jr, rtlreg_t *target) {$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(jrelop, uint32_t relop,$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(lm, rtlreg_t *dest, const rtlreg_t* addr, word_t offset, int len) {$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(lms, rtlreg_t *dest, const rtlreg_t* addr, word_t offset, int len) {$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(setrelop, uint32_t relop, rtlreg_t *dest,$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(setrelopi, uint32_t relop, rtlreg_t *dest,$/;"	f
def_rtl	nemu/src/engine/interpreter/rtl-basic.h	/^static inline def_rtl(sm, const rtlreg_t* addr, word_t offset, const rtlreg_t* src1, int len) {$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(is_add_carry, rtlreg_t* dest,$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(is_add_overflow, rtlreg_t* dest,$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(is_sub_carry, rtlreg_t* dest,$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(is_sub_overflow, rtlreg_t* dest,$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(lr, rtlreg_t* dest, int r, int width) {$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(pop, rtlreg_t* dest) {$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(push, const rtlreg_t* src1) {$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(sr, int r, const rtlreg_t* src1, int width) {$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(update_SF, const rtlreg_t* result, int width) {$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(update_ZF, const rtlreg_t* result, int width) {$/;"	f
def_rtl	nemu/src/isa/x86/local-include/rtl.h	/^static inline def_rtl(update_ZFSF, const rtlreg_t* result, int width) {$/;"	f
def_rtl_compute_imm	nemu/src/engine/interpreter/rtl-basic.h	14;"	d
def_rtl_compute_reg	nemu/src/engine/interpreter/rtl-basic.h	9;"	d
def_rtl_compute_reg_imm	nemu/src/engine/interpreter/rtl-basic.h	19;"	d
def_rtl_setget_eflags	nemu/src/isa/x86/local-include/rtl.h	63;"	d
def_vaddr_template	nemu/src/memory/paddr.c	72;"	d	file:
defapuread	fceux-am/src/boards/onebus.cpp	/^static readfunc defapuread[64];$/;"	v	file:
defapuwrite	fceux-am/src/boards/onebus.cpp	/^static writefunc defapuwrite[64];$/;"	v	file:
default_inst	fceux-am/src/boards/emu2413.c	/^static const unsigned char default_inst[15][8] = {$/;"	v	file:
default_palette	fceux-am/src/palette.cpp	/^static pal *default_palette[8]=$/;"	v	file:
default_palette_selection	fceux-am/src/palette.cpp	/^int default_palette_selection = 0;$/;"	v
defread	fceux-am/src/boards/addrlatch.cpp	/^static readfunc defread;$/;"	v	file:
delay	fceux-am/src/boards/175.cpp	/^static uint8 reg, delay, mirr;$/;"	v	file:
dendy	fceux-am/src/drivers/sdl/sdl.cpp	/^int dendy;$/;"	v
desc	fceux-am/src/state.h	/^	const char *desc;$/;"	m	struct:SFORMAT
description	nemu/src/monitor/debug/ui.c	/^  char *description;$/;"	m	struct:__anon62	file:
desired_fps	fceux-am/src/drivers/sdl/sdl-throttle.cpp	/^static int32 desired_fps;$/;"	v	file:
dest	nemu/include/cpu/decode.h	/^  Operand src1, dest, src2;$/;"	m	struct:__anon67
dev_raise_intr	nemu/src/device/intr.c	/^void dev_raise_intr() {$/;"	f
device_update	nemu/src/device/device.c	/^void device_update() {$/;"	f
device_update_flag	nemu/src/device/device.c	/^static int device_update_flag = false;$/;"	v	file:
di_int	abstract-machine/klib/src/int64.c	/^typedef          long long di_int;$/;"	t	file:
diff_so_file	nemu/src/monitor/monitor.c	/^static char *diff_so_file = NULL;$/;"	v	file:
difftest_check_reg	nemu/include/monitor/difftest.h	/^static inline bool difftest_check_reg(const char *name, vaddr_t pc, rtlreg_t ref, rtlreg_t dut) {$/;"	f
difftest_exec	nemu/tools/kvm-diff/src/kvm.c	/^void difftest_exec(uint64_t n) {$/;"	f
difftest_exec	nemu/tools/qemu-diff/src/diff-test.c	/^void difftest_exec(uint64_t n) {$/;"	f
difftest_getregs	nemu/tools/kvm-diff/src/kvm.c	/^void difftest_getregs(void *r) {$/;"	f
difftest_getregs	nemu/tools/qemu-diff/src/diff-test.c	/^void difftest_getregs(void *r) {$/;"	f
difftest_init	nemu/tools/kvm-diff/src/kvm.c	/^void difftest_init(int port) {$/;"	f
difftest_init	nemu/tools/qemu-diff/src/diff-test.c	/^void difftest_init(int port) {$/;"	f
difftest_memcpy_from_dut	nemu/tools/kvm-diff/src/kvm.c	/^void difftest_memcpy_from_dut(paddr_t dest, void *src, size_t n) {$/;"	f
difftest_memcpy_from_dut	nemu/tools/qemu-diff/src/diff-test.c	/^void difftest_memcpy_from_dut(paddr_t dest, void *src, size_t n) {$/;"	f
difftest_port	nemu/src/monitor/monitor.c	/^static int difftest_port = 1234;$/;"	v	file:
difftest_raise_intr	nemu/tools/kvm-diff/src/kvm.c	/^void difftest_raise_intr(word_t NO) {$/;"	f
difftest_setregs	nemu/tools/kvm-diff/src/kvm.c	/^void difftest_setregs(const void *r) {$/;"	f
difftest_setregs	nemu/tools/qemu-diff/src/diff-test.c	/^void difftest_setregs(const void *r) {$/;"	f
difftest_skip_dut	nemu/include/monitor/difftest.h	12;"	d
difftest_skip_dut	nemu/src/monitor/difftest/dut.c	/^void difftest_skip_dut(int nr_ref, int nr_dut) {$/;"	f
difftest_skip_ref	nemu/include/monitor/difftest.h	11;"	d
difftest_skip_ref	nemu/src/monitor/difftest/dut.c	/^void difftest_skip_ref() {$/;"	f
difftest_step	nemu/include/monitor/difftest.h	/^static inline void difftest_step(vaddr_t this_pc, vaddr_t next_pc) {}$/;"	f
difftest_step	nemu/src/monitor/difftest/dut.c	/^void difftest_step(vaddr_t this_pc, vaddr_t next_pc) {$/;"	f
dip	fceux-am/src/boards/sachen.cpp	/^static uint8 cmd, dip;$/;"	v	file:
dip	fceux-am/src/boards/yoko.cpp	/^static uint8 mode, bank, reg[11], low[4], dip, IRQa;$/;"	v	file:
dip_switch	fceux-am/src/boards/bs-5.cpp	/^static uint8 dip_switch;$/;"	v	file:
dipswitch	fceux-am/src/boards/addrlatch.cpp	/^static uint8 dipswitch;$/;"	v	file:
dipswitch	fceux-am/src/boards/fk23c.cpp	/^static uint32 dipswitch;$/;"	v	file:
dipswitch	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static uint32 dipswitch;$/;"	v	file:
disk_blkio	abstract-machine/am/src/x86/qemu/ioe.c	/^static void disk_blkio(AM_DISK_BLKIO_T *bio) {$/;"	f	file:
disk_config	abstract-machine/am/src/x86/qemu/ioe.c	/^static void disk_config(AM_DISK_CONFIG_T *cfg) {$/;"	f	file:
disk_status	abstract-machine/am/src/x86/qemu/ioe.c	/^static void disk_status(AM_DISK_STATUS_T *status) {$/;"	f	file:
display	abstract-machine/am/src/x86/qemu/ioe.c	/^static struct gpu_canvas display;$/;"	v	typeref:struct:gpu_canvas	file:
display_inv_msg	nemu/src/monitor/cpu-exec.c	/^void display_inv_msg(vaddr_t pc) {$/;"	f
do_io	abstract-machine/am/src/native/ioe.c	/^static void do_io(int reg, void *buf) {$/;"	f	file:
dont_care	nemu/src/isa/x86/decode.c	/^    uint8_t dont_care	:3;$/;"	m	struct:__anon55::__anon57	file:
dopol	fceux-am/src/boards/n106.cpp	/^static uint8 dopol;$/;"	v	file:
double_bits	abstract-machine/klib/src/int64.c	/^} double_bits;$/;"	t	typeref:union:__anon25	file:
dphase	fceux-am/src/boards/emu2413.h	/^	uint32 dphase;    \/* Phase increment amount *\/$/;"	m	struct:__anon43
dphaseARTable	fceux-am/src/boards/emu2413.c	/^static uint32 dphaseARTable[16][16];$/;"	v	file:
dphaseDRTable	fceux-am/src/boards/emu2413.c	/^static uint32 dphaseDRTable[16][16];$/;"	v	file:
dphaseTable	fceux-am/src/boards/emu2413.c	/^static uint32 dphaseTable[512][8][16];$/;"	v	file:
dpl	abstract-machine/am/src/x86.h	/^  uint32_t dpl        :  2; \/\/ Descriptor Privilege Level$/;"	m	struct:__anon1
dpl	abstract-machine/am/src/x86.h	/^  uint32_t dpl       :  2; \/\/ Descriptor(meaning new) privilege level$/;"	m	struct:__anon2
dpl	abstract-machine/am/src/x86.h	/^  uint32_t dpl       :  2;$/;"	m	struct:__anon3
driver	fceux-am/src/input.h	/^	INPUTC* driver;$/;"	m	struct:JOYPORT
driver	fceux-am/src/input.h	/^	INPUTCFC* driver;$/;"	m	struct:FCPORT
ds	abstract-machine/am/include/arch/x86-qemu.h	/^  uint32_t ds, eax, ebx, ecx, edx,$/;"	m	struct:Context
ds	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t cs, ss, ds, es, fs, gs;$/;"	m	struct:isa_gdb_regs::__anon99
dsrc1	nemu/include/rtl/rtl.h	10;"	d
dsrc2	nemu/include/rtl/rtl.h	11;"	d
du_int	abstract-machine/klib/src/int64.c	/^typedef unsigned long long du_int;$/;"	t	file:
dup	fceux-am/src/types.h	45;"	d
dwave	fceux-am/src/boards/n106.cpp	/^static int dwave = 0;$/;"	v	file:
dwave	fceux-am/src/boards/vrc7.cpp	/^static int32 dwave = 0;$/;"	v	file:
dwords	abstract-machine/klib/src/int64.c	/^} dwords;$/;"	t	typeref:union:__anon16	file:
eax	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
eax	abstract-machine/am/include/arch/x86-qemu.h	/^  uint32_t ds, eax, ebx, ecx, edx,$/;"	m	struct:Context
eax	nemu/include/isa/x86.h	/^  rtlreg_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:__anon78
eax	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:isa_gdb_regs::__anon99
ebp	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
ebp	abstract-machine/am/include/arch/x86-qemu.h	/^           esp0, esi, edi, ebp,$/;"	m	struct:Context
ebp	nemu/include/isa/x86.h	/^  rtlreg_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:__anon78
ebp	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:isa_gdb_regs::__anon99
ebx	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
ebx	abstract-machine/am/include/arch/x86-qemu.h	/^  uint32_t ds, eax, ebx, ecx, edx,$/;"	m	struct:Context
ebx	nemu/include/isa/x86.h	/^  rtlreg_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:__anon78
ebx	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:isa_gdb_regs::__anon99
ecx	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
ecx	abstract-machine/am/include/arch/x86-qemu.h	/^  uint32_t ds, eax, ebx, ecx, edx,$/;"	m	struct:Context
ecx	nemu/include/isa/x86.h	/^  rtlreg_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:__anon78
ecx	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:isa_gdb_regs::__anon99
edi	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
edi	abstract-machine/am/include/arch/x86-qemu.h	/^           esp0, esi, edi, ebp,$/;"	m	struct:Context
edi	nemu/include/isa/x86.h	/^  rtlreg_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:__anon78
edi	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:isa_gdb_regs::__anon99
edx	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
edx	abstract-machine/am/include/arch/x86-qemu.h	/^  uint32_t ds, eax, ebx, ecx, edx,$/;"	m	struct:Context
edx	nemu/include/isa/x86.h	/^  rtlreg_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:__anon78
edx	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:isa_gdb_regs::__anon99
eflags	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
eflags	abstract-machine/am/include/arch/x86-qemu.h	/^           eip, cs, eflags, esp, ss3;$/;"	m	struct:Context
eflags	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint32_t eip, cs, eflags, esp, ss;$/;"	m	struct:trap_frame
eflags	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eip, eflags;$/;"	m	struct:isa_gdb_regs::__anon99
eg_dphase	fceux-am/src/boards/emu2413.h	/^	uint32 eg_dphase; \/* Phase increment amount *\/$/;"	m	struct:__anon43
eg_mode	fceux-am/src/boards/emu2413.h	/^	int32 eg_mode;      \/* Current state *\/$/;"	m	struct:__anon43
eg_phase	fceux-am/src/boards/emu2413.h	/^	uint32 eg_phase;  \/* Phase *\/$/;"	m	struct:__anon43
egout	fceux-am/src/boards/emu2413.h	/^	uint32 egout;     \/* output *\/$/;"	m	struct:__anon43
eip	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
eip	abstract-machine/am/include/arch/x86-qemu.h	/^           eip, cs, eflags, esp, ss3;$/;"	m	struct:Context
eip	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint32_t eip, cs, eflags, esp, ss;$/;"	m	struct:trap_frame
eip	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eip, eflags;$/;"	m	struct:isa_gdb_regs::__anon99
enable	fceux-am/src/boards/mmc5.cpp	/^	uint8 enable;$/;"	m	struct:__anon39	file:
end	abstract-machine/am/include/am.h	/^  void *start, *end;$/;"	m	struct:__anon10
end_cycle	fceux-am/src/ppu.cpp	/^	int32 cycle, end_cycle;$/;"	m	struct:PPUSTATUS	file:
engine_start	nemu/src/engine/interpreter/init.c	/^void engine_start() {$/;"	f
entry	abstract-machine/am/src/x86.h	/^  uint16_t entry;         \/\/ entry count$/;"	m	struct:__anon6
entry	nemu/tools/kvm-diff/src/kvm.c	/^  uint32_t entry;$/;"	m	struct:vcpu	file:
env	fceux-am/src/boards/mmc5.cpp	/^	uint8 env[2];$/;"	m	struct:__anon39	file:
eof	fceux-am/src/emufile.h	/^	bool eof() { return size()==ftell(); }$/;"	f	class:EMUFILE
eoptions	fceux-am/src/drivers/sdl/sdl.cpp	/^int eoptions=0;$/;"	v
epc	abstract-machine/am/include/arch/mips32-nemu.h	/^  uintptr_t hi, gpr[32], epc, cause, lo, status;$/;"	m	struct:Context
epc	abstract-machine/am/include/arch/riscv32-nemu.h	/^  uintptr_t epc, cause, gpr[32], status;$/;"	m	struct:Context
epc	abstract-machine/am/include/arch/riscv64-nemu.h	/^  uintptr_t epc, cause, gpr[32], status;$/;"	m	struct:Context
errcode	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint32_t irq, errcode;$/;"	m	struct:trap_frame
errcode	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint64_t irq, errcode;$/;"	m	struct:trap_frame
es	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t cs, ss, ds, es, fs, gs;$/;"	m	struct:isa_gdb_regs::__anon99
esi	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
esi	abstract-machine/am/include/arch/x86-qemu.h	/^           esp0, esi, edi, ebp,$/;"	m	struct:Context
esi	nemu/include/isa/x86.h	/^  rtlreg_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:__anon78
esi	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:isa_gdb_regs::__anon99
esp	abstract-machine/am/include/arch/x86-nemu.h	/^  uintptr_t esi, ebx, eax, eip, edx, eflags, ecx, cs, esp, edi, ebp;$/;"	m	struct:Context
esp	abstract-machine/am/include/arch/x86-qemu.h	/^           eip, cs, eflags, esp, ss3;$/;"	m	struct:Context
esp	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint32_t eip, cs, eflags, esp, ss;$/;"	m	struct:trap_frame
esp	nemu/include/isa/x86.h	/^  rtlreg_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:__anon78
esp	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t eax, ecx, edx, ebx, esp, ebp, esi, edi;$/;"	m	struct:isa_gdb_regs::__anon99
esp0	abstract-machine/am/include/arch/x86-qemu.h	/^           esp0, esi, edi, ebp,$/;"	m	struct:Context
esp0	abstract-machine/am/src/x86.h	/^  uint32_t esp0;     \/\/ Stack pointers and segment selectors$/;"	m	struct:__anon4
estimate_freq	abstract-machine/am/src/x86/qemu/ioe.c	/^static uint32_t estimate_freq() {$/;"	f	file:
ev	abstract-machine/am/src/native/platform.h	/^  Event ev; \/\/ similar to cause register in mips\/riscv$/;"	m	struct:__anon9
event	abstract-machine/am/include/am.h	/^  } event;$/;"	m	struct:__anon11	typeref:enum:__anon11::__anon12
event_thread	abstract-machine/am/src/native/native-input.c	/^static int event_thread(void *args) {$/;"	f	file:
expr	nemu/src/monitor/debug/expr.c	/^word_t expr(char *e, bool *success) {$/;"	f
ext_opcode	nemu/include/isa/x86.h	/^  uint8_t ext_opcode;$/;"	m	struct:__anon80
f	abstract-machine/am/src/x86/qemu/boot/genboot.py	/^f = pathlib.Path(sys.argv[1])$/;"	v
f	abstract-machine/klib/src/int64.c	/^    double  f;$/;"	m	union:__anon25	file:
f	abstract-machine/klib/src/int64.c	/^    float f;$/;"	m	union:__anon24	file:
f	abstract-machine/klib/src/int64.c	/^    long double f;$/;"	m	union:__anon27	file:
fail	abstract-machine/am/src/native/ioe.c	/^static void fail(void *buf) { panic("access nonexist register"); }$/;"	f	file:
fail	abstract-machine/am/src/nemu/ioe/ioe.c	/^static void fail(void *buf) { panic("access nonexist register"); }$/;"	f	file:
fail	abstract-machine/am/src/x86/qemu/ioe.c	/^static void fail(void *buf) { panic("access nonexist register"); }$/;"	f	file:
fail	fceux-am/src/emufile.h	/^	bool fail(bool unset=false) { bool ret = failbit; if(unset) unfail(); return ret; }$/;"	f	class:EMUFILE
failbit	fceux-am/src/emufile.h	/^	bool failbit;$/;"	m	class:EMUFILE
failbit	fceux-am/src/emufile.h	/^	bool failbit;$/;"	m	class:EMUFILE_FILE
false	nemu/include/common.h	41;"	d
false	nemu/tools/qemu-diff/include/common.h	13;"	d
fb	abstract-machine/am/src/native/native-gpu.c	/^static uint32_t fb[W * H] = {};$/;"	v	file:
fb	abstract-machine/am/src/x86/qemu/ioe.c	/^static struct pixel *fb;$/;"	v	typeref:struct:pixel	file:
fceu_playicon	fceux-am/src/drivers/sdl/sdl-icon.h	/^} fceu_playicon = {$/;"	v	typeref:struct:__anon49
fceuindbg	fceux-am/src/ppu.cpp	/^int fceuindbg = 0;$/;"	v
fcnt	fceux-am/src/sound.cpp	/^static uint8 fcnt=0;$/;"	v	file:
fd	nemu/tools/kvm-diff/src/kvm.c	/^  int fd;$/;"	m	struct:vcpu	file:
fd	nemu/tools/kvm-diff/src/kvm.c	/^  int fd;$/;"	m	struct:vm	file:
feedback	fceux-am/src/boards/emu2413.h	/^	int32 feedback;$/;"	m	struct:__anon43
fetch	fceux-am/src/ppu.cpp	/^	int32 fetch;$/;"	m	struct:SPRITE_READ	file:
fetch_decode_exec	nemu/src/isa/mips32/exec/exec.c	/^static inline void fetch_decode_exec(DecodeExecState *s) {$/;"	f	file:
fetch_decode_exec	nemu/src/isa/riscv32/exec/exec.c	/^static inline void fetch_decode_exec(DecodeExecState *s) {$/;"	f	file:
fetch_decode_exec	nemu/src/isa/riscv64/exec/exec.c	/^static inline void fetch_decode_exec(DecodeExecState *s) {$/;"	f	file:
fetch_decode_exec	nemu/src/isa/x86/exec/exec.c	/^static inline void fetch_decode_exec(DecodeExecState *s) {$/;"	f	file:
fetch_mmio_map	nemu/src/device/io/mmio.c	/^IOMap* fetch_mmio_map(paddr_t addr) {$/;"	f
ffemode	fceux-am/src/boards/ffe.cpp	/^static uint8 preg[4], creg[8], latch, ffemode;$/;"	v	file:
fflush	fceux-am/src/emufile.h	/^	virtual void fflush() {$/;"	f	class:EMUFILE_FILE
fflush	fceux-am/src/emufile.h	/^	void fflush() { }$/;"	f	class:EMUFILE_FILE
fgetc	fceux-am/src/emufile.h	/^	int fgetc() {$/;"	f	class:EMUFILE_FILE
fgetc	fceux-am/src/emufile.h	/^	virtual int fgetc() {$/;"	f	class:EMUFILE_FILE
fh	fceux-am/src/ppu.cpp	/^	uint32 fh;	\/\/3 (horz scroll)$/;"	m	struct:PPUREGS	file:
fhcnt	fceux-am/src/sound.cpp	/^static int32 fhcnt=0;$/;"	v	file:
fhinc	fceux-am/src/sound.cpp	/^static int32 fhinc=0;$/;"	v	file:
filesize	fceux-am/src/emufile.h	/^  int filesize;$/;"	m	class:EMUFILE_FILE
find_mapid_by_addr	nemu/include/device/map.h	/^static inline int find_mapid_by_addr(IOMap *maps, int size, paddr_t addr) {$/;"	f
firsttile	fceux-am/src/ppu.cpp	/^static int firsttile;$/;"	v	file:
fix_push_sreg	nemu/tools/kvm-diff/src/kvm.c	/^static inline void fix_push_sreg() {$/;"	f	file:
flags	fceux-am/src/input.h	/^	int flags; \/\/EMUCMDFLAG$/;"	m	struct:EMUCMDTABLE
flash	fceux-am/src/boards/cheapocabra.cpp	/^static bool flash = false;$/;"	v	file:
flash_bank	fceux-am/src/boards/unrom512.cpp	/^static uint8 flash_save=0, flash_state=0, flash_mode=0, flash_bank;$/;"	v	file:
flash_id	fceux-am/src/boards/cheapocabra.cpp	/^static uint8 flash_id;$/;"	v	file:
flash_mode	fceux-am/src/boards/cheapocabra.cpp	/^static uint8 flash_mode;$/;"	v	file:
flash_mode	fceux-am/src/boards/unrom512.cpp	/^static uint8 flash_save=0, flash_state=0, flash_mode=0, flash_bank;$/;"	v	file:
flash_save	fceux-am/src/boards/unrom512.cpp	/^static uint8 flash_save=0, flash_state=0, flash_mode=0, flash_bank;$/;"	v	file:
flash_sequence	fceux-am/src/boards/cheapocabra.cpp	/^static uint8 flash_sequence;$/;"	v	file:
flash_state	fceux-am/src/boards/unrom512.cpp	/^static uint8 flash_save=0, flash_state=0, flash_mode=0, flash_bank;$/;"	v	file:
flash_write_count	fceux-am/src/boards/unrom512.cpp	/^static uint32 *flash_write_count;$/;"	v	file:
flashdata	fceux-am/src/boards/unrom512.cpp	/^static uint8 *flashdata;$/;"	v	file:
float_bits	abstract-machine/klib/src/int64.c	/^} float_bits;$/;"	t	typeref:union:__anon24	file:
fn_off	fceux-am/src/input.h	/^	EMUCMDFN* fn_off;$/;"	m	struct:EMUCMDTABLE
fn_on	fceux-am/src/input.h	/^	EMUCMDFN* fn_on;$/;"	m	struct:EMUCMDTABLE
fname	fceux-am/src/emufile.h	/^	const char* fname;$/;"	m	class:EMUFILE_FILE
fnum	fceux-am/src/boards/emu2413.h	/^	int32 fnum;         \/* F-Number *\/$/;"	m	struct:__anon43
found	fceux-am/src/ppu.cpp	/^	int32 found;$/;"	m	struct:SPRITE_READ	file:
found_pos	fceux-am/src/ppu.cpp	/^	int32 found_pos[8];$/;"	m	struct:SPRITE_READ	file:
fp	fceux-am/src/emufile.h	/^	FILE* fp;$/;"	m	class:EMUFILE_FILE
fprintf	fceux-am/src/emufile.h	/^	int fprintf(const char *format, ...) { return 0; };$/;"	f	class:EMUFILE_FILE
fprintf	fceux-am/src/emufile.h	/^	virtual int fprintf(const char *format, ...) {$/;"	f	class:EMUFILE_FILE
fputc	fceux-am/src/emufile.h	/^	int fputc(int c) {$/;"	f	class:EMUFILE_FILE
fputc	fceux-am/src/emufile.h	/^	virtual int fputc(int c) {$/;"	f	class:EMUFILE_FILE
frameAdvanceLagSkip	fceux-am/src/fceu.cpp	59;"	d	file:
frameAdvanceRequested	fceux-am/src/fceu.cpp	/^bool frameAdvanceRequested=false;$/;"	v
frameAdvance_Delay	fceux-am/src/fceu.cpp	/^int frameAdvance_Delay = FRAMEADVANCE_DELAY_DEFAULT;$/;"	v
frameAdvance_Delay_count	fceux-am/src/fceu.cpp	/^int frameAdvance_Delay_count = 0;$/;"	v
framebuffer	abstract-machine/am/src/x86/qemu/ioe.c	/^  uint32_t framebuffer;$/;"	m	struct:vbe_info	file:
framectr	fceux-am/src/ppu.cpp	/^int framectr = 0;$/;"	v
free	abstract-machine/klib/src/stdlib.c	/^void free(void *ptr) {$/;"	f
free_	nemu/src/monitor/debug/watchpoint.c	/^static WP *head = NULL, *free_ = NULL;$/;"	v	file:
freq_mhz	abstract-machine/am/src/x86/qemu/ioe.c	/^static uint32_t freq_mhz = 2000;$/;"	v	file:
fs	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t cs, ss, ds, es, fs, gs;$/;"	m	struct:isa_gdb_regs::__anon99
fseek	fceux-am/src/emufile.h	/^	int fseek(int offset, int origin) {$/;"	f	class:EMUFILE_FILE
fseek	fceux-am/src/emufile.h	/^	virtual int fseek(int offset, int origin) {$/;"	f	class:EMUFILE_FILE
ftell	fceux-am/src/emufile.h	/^	int ftell() { return curpos; }$/;"	f	class:EMUFILE_FILE
ftell	fceux-am/src/emufile.h	/^	virtual int ftell() {$/;"	f	class:EMUFILE_FILE
fullsintable	fceux-am/src/boards/emu2413.c	/^static uint16 fullsintable[PG_WIDTH];$/;"	v	file:
func	nemu/include/isa/mips32.h	/^      uint32_t func   : 6;$/;"	m	struct:__anon90::__anon91::__anon94
funct3	nemu/include/isa/riscv32.h	/^      uint32_t funct3    : 3;$/;"	m	struct:__anon73::__anon74::__anon75
funct3	nemu/include/isa/riscv32.h	/^      uint32_t funct3    : 3;$/;"	m	struct:__anon73::__anon74::__anon76
funct3	nemu/include/isa/riscv64.h	/^      uint32_t funct3    : 3;$/;"	m	struct:__anon83::__anon84::__anon85
funct3	nemu/include/isa/riscv64.h	/^      uint32_t funct3    : 3;$/;"	m	struct:__anon83::__anon84::__anon86
fv	fceux-am/src/ppu.cpp	/^	uint32 fv;	\/\/3$/;"	m	struct:PPUREGS	file:
fwrite	fceux-am/src/emufile.h	/^	virtual void fwrite(const void *ptr, size_t bytes){$/;"	f	class:EMUFILE_FILE
fwrite	fceux-am/src/emufile.h	/^	void fwrite(const void *ptr, size_t bytes){$/;"	f	class:EMUFILE_FILE
g	abstract-machine/am/src/x86.h	/^  uint32_t g          :  1; \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:__anon1
g	abstract-machine/am/src/x86/qemu/ioe.c	/^  uint8_t b, g, r;$/;"	m	struct:pixel	file:
g	fceux-am/src/drivers/sdl/sdl-video.cpp	/^  uint8 r, g, b, unused;$/;"	m	struct:__anon47	file:
g	fceux-am/src/palette.h	/^	uint8 r,g,b;$/;"	m	struct:__anon31
gNoBGFillColor	fceux-am/src/ppu.cpp	/^uint8 gNoBGFillColor = 0xFF;$/;"	v
g_keyState	fceux-am/src/drivers/sdl/input.cpp	/^static uint8 g_keyState[256] = {};$/;"	v	file:
g_nr_guest_instr	nemu/src/monitor/cpu-exec.c	/^static uint64_t g_nr_guest_instr = 0;$/;"	v	file:
g_rasterpos	fceux-am/src/ppu.cpp	/^int g_rasterpos;$/;"	v
g_timer	nemu/src/monitor/cpu-exec.c	/^static uint64_t g_timer = 0; \/\/ unit: ms$/;"	v	file:
gametype	fceux-am/src/drivers/sdl/sdl.cpp	/^int gametype = 0;$/;"	v
gdb_begin	nemu/tools/qemu-diff/src/protocol.c	/^static struct gdb_conn* gdb_begin(int fd) {$/;"	f	file:
gdb_begin_inet	nemu/tools/qemu-diff/src/protocol.c	/^struct gdb_conn* gdb_begin_inet(const char *addr, uint16_t port) {$/;"	f
gdb_conn	nemu/tools/qemu-diff/src/protocol.c	/^struct gdb_conn {$/;"	s	file:
gdb_connect_qemu	nemu/tools/qemu-diff/src/gdb-host.c	/^bool gdb_connect_qemu(int port) {$/;"	f
gdb_decode_hex	nemu/tools/qemu-diff/src/protocol.c	/^uint16_t gdb_decode_hex(uint8_t msb, uint8_t lsb) {$/;"	f
gdb_decode_hex_str	nemu/tools/qemu-diff/src/protocol.c	/^uint64_t gdb_decode_hex_str(uint8_t *bytes) {$/;"	f
gdb_end	nemu/tools/qemu-diff/src/protocol.c	/^void gdb_end(struct gdb_conn *conn) {$/;"	f
gdb_exit	nemu/tools/qemu-diff/src/gdb-host.c	/^void gdb_exit() {$/;"	f
gdb_getregs	nemu/tools/qemu-diff/src/gdb-host.c	/^bool gdb_getregs(union isa_gdb_regs *r) {$/;"	f
gdb_memcpy_to_qemu	nemu/tools/qemu-diff/src/gdb-host.c	/^bool gdb_memcpy_to_qemu(uint32_t dest, void *src, int len) {$/;"	f
gdb_memcpy_to_qemu_small	nemu/tools/qemu-diff/src/gdb-host.c	/^static bool gdb_memcpy_to_qemu_small(uint32_t dest, void *src, int len) {$/;"	f	file:
gdb_recv	nemu/tools/qemu-diff/src/protocol.c	/^uint8_t* gdb_recv(struct gdb_conn *conn, size_t *size) {$/;"	f
gdb_send	nemu/tools/qemu-diff/src/protocol.c	/^void gdb_send(struct gdb_conn *conn, const uint8_t *command, size_t size) {$/;"	f
gdb_setregs	nemu/tools/qemu-diff/src/gdb-host.c	/^bool gdb_setregs(union isa_gdb_regs *r) {$/;"	f
gdb_si	nemu/tools/qemu-diff/src/gdb-host.c	/^bool gdb_si() {$/;"	f
gdb_start_noack	nemu/tools/qemu-diff/src/protocol.c	/^const char* gdb_start_noack(struct gdb_conn *conn) {$/;"	f
gdt	abstract-machine/am/src/x86/qemu/boot/start.S	/^gdt:$/;"	l
gdt	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  SegDesc gdt[NR_SEG + 1];$/;"	m	struct:cpu_local
gdt	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  SegDesc gdt[NR_SEG];$/;"	m	struct:cpu_local
gdt64_begin	abstract-machine/am/src/x86/qemu/start64.S	/^gdt64_begin:$/;"	l
gdt64_end	abstract-machine/am/src/x86/qemu/start64.S	/^gdt64_end:$/;"	l
gdt_ptr	abstract-machine/am/src/x86/qemu/start64.S	/^gdt_ptr:$/;"	l
gdtdesc	abstract-machine/am/src/x86/qemu/boot/start.S	/^gdtdesc:$/;"	l
gen_rand_expr	nemu/tools/gen-expr/gen-expr.c	/^static inline void gen_rand_expr() {$/;"	f	file:
genieaddr	fceux-am/src/cart.cpp	/^uint32 genieaddr[3];$/;"	v
geniech	fceux-am/src/cart.cpp	/^uint8 geniech[3];$/;"	v
geniestage	fceux-am/src/cart.cpp	/^int geniestage = 0;$/;"	v
genieval	fceux-am/src/cart.cpp	/^uint8 genieval[3];$/;"	v
get_2007access	fceux-am/src/ppu.cpp	/^	uint32 get_2007access() {$/;"	f	struct:PPUREGS
get_atread	fceux-am/src/ppu.cpp	/^	uint32 get_atread() {$/;"	f	struct:PPUREGS
get_cc_name	nemu/src/isa/x86/exec/cc.h	/^static inline const char* get_cc_name(int subcode) {$/;"	f
get_cr0	abstract-machine/am/src/x86.h	/^static inline uintptr_t get_cr0(void) {$/;"	f
get_cr2	abstract-machine/am/src/x86.h	/^static inline uintptr_t get_cr2() {$/;"	f
get_cr3	abstract-machine/am/src/x86.h	/^static inline uintptr_t get_cr3() {$/;"	f
get_efl	abstract-machine/am/src/x86.h	/^static inline uint32_t get_efl() {$/;"	f
get_ntread	fceux-am/src/ppu.cpp	/^	uint32 get_ntread() {$/;"	f	struct:PPUREGS
get_ptread	fceux-am/src/ppu.cpp	/^	uint32 get_ptread() {$/;"	f	struct:PPUREGS
get_satp	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^static inline uintptr_t get_satp() {$/;"	f	file:
get_satp	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^static inline uintptr_t get_satp() {$/;"	f	file:
get_time	nemu/src/monitor/cpu-exec.c	/^static uint64_t get_time() {$/;"	f	file:
gorfus	fceux-am/src/boards/n106.cpp	/^static uint8 gorfus;$/;"	v	file:
gorko	fceux-am/src/boards/n106.cpp	/^static uint8 gorko;$/;"	v	file:
gpr	abstract-machine/am/include/arch/mips32-nemu.h	/^  uintptr_t hi, gpr[32], epc, cause, lo, status;$/;"	m	struct:Context
gpr	abstract-machine/am/include/arch/riscv32-nemu.h	/^  uintptr_t epc, cause, gpr[32], status;$/;"	m	struct:Context
gpr	abstract-machine/am/include/arch/riscv64-nemu.h	/^  uintptr_t epc, cause, gpr[32], status;$/;"	m	struct:Context
gpr	nemu/include/isa/mips32.h	/^  } gpr[32];$/;"	m	struct:__anon88	typeref:struct:__anon88::__anon89
gpr	nemu/include/isa/riscv32.h	/^  } gpr[32];$/;"	m	struct:__anon71	typeref:struct:__anon71::__anon72
gpr	nemu/include/isa/riscv64.h	/^  } gpr[32];$/;"	m	struct:__anon81	typeref:union:__anon81::__anon82
gpr	nemu/include/isa/x86.h	/^  } gpr[8];$/;"	m	struct:__anon78	typeref:struct:__anon78::__anon79
gpr	nemu/tools/qemu-diff/include/isa/mips32.h	/^    uint32_t gpr[32];$/;"	m	struct:isa_gdb_regs::__anon103
gpr	nemu/tools/qemu-diff/include/isa/riscv32.h	/^    uint32_t gpr[32];$/;"	m	struct:isa_gdb_regs::__anon97
gpr	nemu/tools/qemu-diff/include/isa/riscv64.h	/^    uint64_t gpr[32];$/;"	m	struct:isa_gdb_regs::__anon101
gpu_canvas	abstract-machine/am/include/amdev.h	/^struct gpu_canvas {$/;"	s
gpu_config	abstract-machine/am/src/x86/qemu/ioe.c	/^static void gpu_config(AM_GPU_CONFIG_T *cfg) {$/;"	f	file:
gpu_fbdraw	abstract-machine/am/src/x86/qemu/ioe.c	/^static void gpu_fbdraw(AM_GPU_FBDRAW_T *draw) {$/;"	f	file:
gpu_init	abstract-machine/am/src/x86/qemu/ioe.c	/^static void gpu_init() {$/;"	f	file:
gpu_memcpy	abstract-machine/am/src/x86/qemu/ioe.c	/^static void gpu_memcpy(AM_GPU_MEMCPY_T *params) {$/;"	f	file:
gpu_render	abstract-machine/am/src/x86/qemu/ioe.c	/^static void gpu_render(AM_GPU_RENDER_T *ren) {$/;"	f	file:
gpu_status	abstract-machine/am/src/x86/qemu/ioe.c	/^static void gpu_status(AM_GPU_STATUS_T *stat) {$/;"	f	file:
gpu_texturedesc	abstract-machine/am/include/amdev.h	/^struct gpu_texturedesc {$/;"	s
gpuptr_t	abstract-machine/am/include/amdev.h	/^typedef uint32_t gpuptr_t;$/;"	t
gs	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t cs, ss, ds, es, fs, gs;$/;"	m	struct:isa_gdb_regs::__anon99
guest_to_host	nemu/src/memory/paddr.c	/^void* guest_to_host(paddr_t addr) { return &pmem[addr]; }$/;"	f
h	abstract-machine/am/include/amdev.h	/^  uint16_t type, w, h, x1, y1, w1, h1;$/;"	m	struct:gpu_canvas
h	abstract-machine/am/include/amdev.h	/^  uint16_t w, h;$/;"	m	struct:gpu_texturedesc
h	fceux-am/src/ppu.cpp	/^	uint32 h;	\/\/1$/;"	m	struct:PPUREGS	file:
h1	abstract-machine/am/include/amdev.h	/^  uint16_t type, w, h, x1, y1, w1, h1;$/;"	m	struct:gpu_canvas
h_file	fceux-am/nes/build-roms.py	/^def h_file():$/;"	f
hackm4	fceux-am/src/boards/mmc3.cpp	/^static int hackm4 = 0;	\/* For Karnov, maybe others.  BLAH.  Stupid iNES format.*\/$/;"	v	file:
halfsintable	fceux-am/src/boards/emu2413.c	/^static uint16 halfsintable[PG_WIDTH];$/;"	v	file:
halt	abstract-machine/am/src/native/trm.c	/^void halt(int code) {$/;"	f
halt	abstract-machine/am/src/nemu/trm.c	/^void halt(int code) {$/;"	f
halt	abstract-machine/am/src/x86/qemu/trm.c	/^void halt(int code) {$/;"	f
halt_pc	nemu/include/monitor/monitor.h	/^  vaddr_t halt_pc;$/;"	m	struct:__anon96
halt_ret	nemu/include/monitor/monitor.h	/^  uint32_t halt_ret;$/;"	m	struct:__anon96
handler	abstract-machine/am/src/native/cte.c	/^bool cte_init(Context*(*handler)(Event, Context*)) {$/;"	f
handler	abstract-machine/am/src/nemu/isa/mips32/cte.c	/^bool cte_init(Context*(*handler)(Event, Context*)) {$/;"	f
handler	abstract-machine/am/src/nemu/isa/riscv32/cte.c	/^bool cte_init(Context*(*handler)(Event, Context*)) {$/;"	f
handler	abstract-machine/am/src/nemu/isa/riscv64/cte.c	/^bool cte_init(Context*(*handler)(Event, Context*)) {$/;"	f
handler	abstract-machine/am/src/nemu/isa/x86/cte.c	/^bool cte_init(Context*(*handler)(Event, Context*)) {$/;"	f
handler	abstract-machine/am/src/x86/qemu/cte.c	/^bool cte_init(Context *(*handler)(Event, Context *)) {$/;"	f
handler	nemu/src/device/alarm.c	/^static alarm_handler_t handler[MAX_HANDLER] = {};$/;"	v	file:
handler	nemu/src/monitor/debug/ui.c	/^  int (*handler) (char *);$/;"	m	struct:__anon62	file:
handler_t	abstract-machine/am/src/native/ioe.c	/^typedef void (*handler_t)(void *buf);$/;"	t	file:
handler_t	abstract-machine/am/src/nemu/ioe/ioe.c	/^typedef void (*handler_t)(void *buf);$/;"	t	file:
handler_t	abstract-machine/am/src/x86/qemu/ioe.c	/^typedef void (*handler_t)(void *buf);$/;"	t	file:
has_error_code	nemu/tools/kvm-diff/src/kvm.c	/^  int has_error_code;$/;"	m	struct:vcpu	file:
head	abstract-machine/am/src/native/native-audio.c	/^static int head = 0, tail = 0;$/;"	v	file:
head	fceux-am/src/ines.cpp	/^iNES_HEADER head;$/;"	v
head	nemu/src/monitor/debug/watchpoint.c	/^static WP *head = NULL, *free_ = NULL;$/;"	v	file:
heap	abstract-machine/am/src/native/trm.c	/^Area heap = {};$/;"	v
heap	abstract-machine/am/src/nemu/trm.c	/^Area heap = RANGE(&_heap_start, PMEM_END);$/;"	v
heap	abstract-machine/am/src/x86/qemu/trm.c	/^Area heap = {};$/;"	v
height	abstract-machine/am/src/x86/qemu/ioe.c	/^  uint16_t height;$/;"	m	struct:vbe_info	file:
height	fceux-am/src/drivers/sdl/sdl-icon.h	/^  unsigned int  	 height;$/;"	m	struct:__anon49
hex_encode	nemu/tools/qemu-diff/src/protocol.c	/^uint8_t hex_encode(uint8_t digit) {$/;"	f
hex_nibble	nemu/tools/qemu-diff/src/protocol.c	/^hex_nibble(uint8_t hex) {$/;"	f	file:
hi	abstract-machine/am/include/arch/mips32-nemu.h	/^  uintptr_t hi, gpr[32], epc, cause, lo, status;$/;"	m	struct:Context
hi	nemu/tools/qemu-diff/include/isa/mips32.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anon103
high	abstract-machine/klib/src/int64.c	/^        di_int high;$/;"	m	struct:__anon20::__anon21	file:
high	abstract-machine/klib/src/int64.c	/^        du_int high;$/;"	m	struct:__anon22::__anon23	file:
high	abstract-machine/klib/src/int64.c	/^        si_int high;$/;"	m	struct:__anon16::__anon17	file:
high	abstract-machine/klib/src/int64.c	/^        su_int high;$/;"	m	struct:__anon18::__anon19	file:
high	abstract-machine/klib/src/int64.c	/^    udwords high;$/;"	m	struct:__anon26	file:
high	nemu/include/device/map.h	/^  paddr_t high;$/;"	m	struct:__anon70
hlt	abstract-machine/am/src/x86.h	/^static inline void hlt() {$/;"	f
host_to_guest	nemu/src/memory/paddr.c	/^paddr_t host_to_guest(void *addr) { return (void *)pmem - addr; }$/;"	f
hrd_flag	fceux-am/src/boards/57.cpp	/^static uint8 hrd_flag;$/;"	v	file:
ht	fceux-am/src/ppu.cpp	/^	uint32 ht;	\/\/5$/;"	m	struct:PPUREGS	file:
hw_mode	fceux-am/src/boards/eh8813a.cpp	/^static uint8 datalatch, hw_mode;$/;"	v	file:
hw_switch	fceux-am/src/boards/bmc70in1.cpp	/^static uint8 is_large_banks, hw_switch;$/;"	v	file:
i	nemu/include/isa/mips32.h	/^    } i;$/;"	m	union:__anon90::__anon91	typeref:struct:__anon90::__anon91::__anon92
i	nemu/include/isa/riscv32.h	/^    } i;$/;"	m	union:__anon73::__anon74	typeref:struct:__anon73::__anon74::__anon75
i	nemu/include/isa/riscv64.h	/^    } i;$/;"	m	union:__anon83::__anon84	typeref:struct:__anon83::__anon84::__anon85
i8042_data_io_handler	nemu/src/device/keyboard.c	/^static void i8042_data_io_handler(uint32_t offset, int len, bool is_write) {$/;"	f	file:
i8042_data_port_base	nemu/src/device/keyboard.c	/^static uint32_t *i8042_data_port_base = NULL;$/;"	v	file:
iNES2	fceux-am/src/ines.cpp	/^int iNES2 = 0;$/;"	v
iNESCart	fceux-am/src/ines.cpp	/^static CartInfo iNESCart;$/;"	v	file:
iNESGI	fceux-am/src/ines.cpp	/^void iNESGI(GI h) { \/\/bbit edited: removed static keyword$/;"	f
iNESGameCRC32	fceux-am/src/ines.cpp	/^uint32 iNESGameCRC32 = 0;$/;"	v
iNESLoad	fceux-am/src/ines.cpp	/^int iNESLoad(const char *name, FCEUFILE *fp, int OverwriteVidMode) {$/;"	f
iNES_ExecPower	fceux-am/src/ines.cpp	/^static void iNES_ExecPower() {$/;"	f	file:
iNES_HEADER	fceux-am/src/ines.h	/^struct iNES_HEADER {$/;"	s
iNES_Init	fceux-am/src/ines.cpp	/^static int iNES_Init(int num) {$/;"	f	file:
id_dest	nemu/include/rtl/rtl.h	8;"	d
id_src1	nemu/include/rtl/rtl.h	6;"	d
id_src2	nemu/include/rtl/rtl.h	7;"	d
idleSynch	fceux-am/src/ppu.cpp	/^uint8 idleSynch = 1;$/;"	v
idt	abstract-machine/am/src/x86/qemu/cte.c	/^static GateDesc32 idt[NR_IRQ];$/;"	v	file:
idt	abstract-machine/am/src/x86/qemu/cte.c	/^static GateDesc64 idt[NR_IRQ];$/;"	v	file:
idx	nemu/src/device/alarm.c	/^static int idx = 0;$/;"	v	file:
ienabled	abstract-machine/am/src/native/cte.c	/^bool ienabled() {$/;"	f
ienabled	abstract-machine/am/src/nemu/isa/mips32/cte.c	/^bool ienabled() {$/;"	f
ienabled	abstract-machine/am/src/nemu/isa/riscv32/cte.c	/^bool ienabled() {$/;"	f
ienabled	abstract-machine/am/src/nemu/isa/riscv64/cte.c	/^bool ienabled() {$/;"	f
ienabled	abstract-machine/am/src/nemu/isa/x86/cte.c	/^bool ienabled() {$/;"	f
ienabled	abstract-machine/am/src/x86/qemu/cte.c	/^bool ienabled() {$/;"	f
ignore	abstract-machine/am/src/x86/qemu/ioe.c	/^  uint8_t  ignore[18];$/;"	m	struct:vbe_info	file:
ignore1	abstract-machine/am/src/x86/qemu/ioe.c	/^  uint8_t  ignore1[18];$/;"	m	struct:vbe_info	file:
imaginary	abstract-machine/klib/src/int64.c	/^typedef struct { double real, imaginary; } Dcomplex;$/;"	m	struct:__anon29	file:
imaginary	abstract-machine/klib/src/int64.c	/^typedef struct { float real, imaginary; } Fcomplex;$/;"	m	struct:__anon28	file:
imaginary	abstract-machine/klib/src/int64.c	/^typedef struct { long double real, imaginary; } Lcomplex;$/;"	m	struct:__anon30	file:
imcrp	abstract-machine/am/src/x86.h	/^  uint8_t  imcrp;$/;"	m	struct:__anon7
img	nemu/src/isa/mips32/init.c	/^static const uint32_t img [] = {$/;"	v	file:
img	nemu/src/isa/riscv32/init.c	/^static const uint32_t img [] = {$/;"	v	file:
img	nemu/src/isa/riscv64/init.c	/^static const uint32_t img [] = {$/;"	v	file:
img	nemu/src/isa/x86/init.c	/^static const uint8_t img []  = {$/;"	v	file:
img_file	nemu/src/monitor/monitor.c	/^static char *img_file = NULL;$/;"	v	file:
imm	nemu/include/cpu/decode.h	/^    word_t imm;$/;"	m	union:__anon65::__anon66
imm	nemu/include/isa/mips32.h	/^      uint32_t imm    : 16;$/;"	m	struct:__anon90::__anon91::__anon93
imm31_12	nemu/include/isa/riscv32.h	/^      uint32_t imm31_12  :20;$/;"	m	struct:__anon73::__anon74::__anon77
imm4_0	nemu/include/isa/riscv32.h	/^      uint32_t imm4_0    : 5;$/;"	m	struct:__anon73::__anon74::__anon76
imm4_0	nemu/include/isa/riscv64.h	/^      uint32_t imm4_0    : 5;$/;"	m	struct:__anon83::__anon84::__anon86
in	nemu/tools/qemu-diff/src/protocol.c	/^  FILE *in;$/;"	m	struct:gdb_conn	file:
in_pmem	nemu/src/memory/paddr.c	/^static inline bool in_pmem(paddr_t addr) {$/;"	f	file:
inb	abstract-machine/am/src/mips32.h	/^static inline uint8_t  inb(uintptr_t addr) { return *(volatile uint8_t  *)addr; }$/;"	f
inb	abstract-machine/am/src/riscv32.h	/^static inline uint8_t  inb(uintptr_t addr) { return *(volatile uint8_t  *)addr; }$/;"	f
inb	abstract-machine/am/src/riscv64.h	/^static inline uint8_t  inb(uintptr_t addr) { return *(volatile uint8_t  *)addr; }$/;"	f
inb	abstract-machine/am/src/x86.h	/^static inline uint8_t inb(int port) {$/;"	f
inbuf	fceux-am/src/sound.cpp	/^static int32 inbuf=0;$/;"	v	file:
inc_flash_write_count	fceux-am/src/boards/unrom512.cpp	/^void inc_flash_write_count(uint8 bank, uint32 A)$/;"	f
increment2007	fceux-am/src/ppu.cpp	/^	void increment2007(bool rendering, bool by32) {$/;"	f	struct:PPUREGS
increment_hsc	fceux-am/src/ppu.cpp	/^	void increment_hsc() {$/;"	f	struct:PPUREGS
increment_vs	fceux-am/src/ppu.cpp	/^	void increment_vs() {$/;"	f	struct:PPUREGS
index	nemu/src/isa/x86/decode.c	/^    uint8_t index	:3;$/;"	m	struct:__anon58::__anon59	file:
indexof	abstract-machine/am/src/x86/qemu/vme.c	/^static int indexof(uintptr_t addr, const struct ptinfo *info) {$/;"	f	file:
ines2	fceux-am/src/cart.h	/^	int ines2;$/;"	m	struct:__anon37
init	fceux-am/src/ines.h	/^	void (*init)(CartInfo *);$/;"	m	struct:__anon33
init	init.sh	/^function init() {$/;"	f
init_alarm	nemu/src/device/alarm.c	/^void init_alarm() {$/;"	f
init_audio	nemu/src/device/audio.c	/^void init_audio() {$/;"	f
init_device	nemu/src/device/device.c	/^void init_device() {$/;"	f
init_difftest	nemu/src/monitor/difftest/dut.c	/^void init_difftest(char *ref_so_file, long img_size, int port) {$/;"	f
init_i8042	nemu/src/device/keyboard.c	/^void init_i8042() {$/;"	f
init_isa	nemu/src/isa/mips32/init.c	/^void init_isa() {$/;"	f
init_isa	nemu/src/isa/riscv32/init.c	/^void init_isa() {$/;"	f
init_isa	nemu/src/isa/riscv64/init.c	/^void init_isa() {$/;"	f
init_isa	nemu/src/isa/x86/init.c	/^void init_isa() {$/;"	f
init_isa	nemu/tools/qemu-diff/src/isa/mips32/init.c	/^void init_isa() {$/;"	f
init_isa	nemu/tools/qemu-diff/src/isa/riscv32/init.c	/^void init_isa() {$/;"	f
init_isa	nemu/tools/qemu-diff/src/isa/riscv64/init.c	/^void init_isa() {$/;"	f
init_isa	nemu/tools/qemu-diff/src/isa/x86/init.c	/^void init_isa() {$/;"	f
init_log	nemu/src/monitor/debug/log.c	/^void init_log(const char *log_file) {$/;"	f
init_mem	nemu/src/memory/paddr.c	/^void init_mem() {$/;"	f
init_monitor	nemu/src/monitor/monitor.c	/^void init_monitor(int argc, char *argv[]) {$/;"	f
init_no_git	init.sh	/^function init_no_git() {$/;"	f
init_platform	abstract-machine/am/src/native/platform.c	/^static void init_platform() {$/;"	f	file:
init_regex	nemu/src/monitor/debug/expr.c	/^void init_regex() {$/;"	f
init_serial	nemu/src/device/serial.c	/^void init_serial() {$/;"	f
init_timer	nemu/src/device/timer.c	/^void init_timer() {$/;"	f
init_vga	nemu/src/device/vga.c	/^void init_vga() {$/;"	f
init_wp_pool	nemu/src/monitor/debug/watchpoint.c	/^void init_wp_pool() {$/;"	f
initcode	nemu/tools/qemu-diff/src/isa/riscv32/init.c	/^static uint32_t initcode[] = {$/;"	v	file:
initcode	nemu/tools/qemu-diff/src/isa/riscv64/init.c	/^static uint32_t initcode[] = {$/;"	v	file:
inited	fceux-am/src/drivers/sdl/sdl.cpp	/^static int inited = 0;$/;"	v	file:
inl	abstract-machine/am/src/mips32.h	/^static inline uint32_t inl(uintptr_t addr) { return *(volatile uint32_t *)addr; }$/;"	f
inl	abstract-machine/am/src/riscv32.h	/^static inline uint32_t inl(uintptr_t addr) { return *(volatile uint32_t *)addr; }$/;"	f
inl	abstract-machine/am/src/riscv64.h	/^static inline uint32_t inl(uintptr_t addr) { return *(volatile uint32_t *)addr; }$/;"	f
inl	abstract-machine/am/src/x86.h	/^static inline uint32_t inl(int port) {$/;"	f
input	fceux-am/src/git.h	/^	ESI input[2];   \/\/Desired input for emulated input ports 1 and 2; -1 for unknown desired input.$/;"	m	struct:FCEUGI
input1	fceux-am/src/ines.cpp	/^	ESI input1;$/;"	m	struct:INPSEL	file:
input2	fceux-am/src/ines.cpp	/^	ESI input2;$/;"	m	struct:INPSEL	file:
input_config	abstract-machine/am/src/x86/qemu/ioe.c	/^static void input_config(AM_INPUT_CONFIG_T *cfg) {$/;"	f	file:
input_keybrd	abstract-machine/am/src/x86/qemu/ioe.c	/^static void input_keybrd(AM_INPUT_KEYBRD_T *ev) {$/;"	f	file:
inputfc	fceux-am/src/git.h	/^	ESIFC inputfc;  \/\/Desired Famicom expansion port device. -1 for unknown desired input.$/;"	m	struct:FCEUGI
inputfc	fceux-am/src/ines.cpp	/^	ESIFC inputfc;$/;"	m	struct:INPSEL	file:
install_h_latches	fceux-am/src/ppu.cpp	/^	void install_h_latches() {$/;"	f	struct:PPUREGS
install_latches	fceux-am/src/ppu.cpp	/^	void install_latches() {$/;"	f	struct:PPUREGS
install_signal_handler	abstract-machine/am/src/native/cte.c	/^static void install_signal_handler() {$/;"	f	file:
instr	nemu/include/isa/mips32.h	/^  } instr;$/;"	m	struct:__anon90	typeref:union:__anon90::__anon91
instr	nemu/include/isa/riscv32.h	/^  } instr;$/;"	m	struct:__anon73	typeref:union:__anon73::__anon74
instr	nemu/include/isa/riscv64.h	/^  } instr;$/;"	m	struct:__anon83	typeref:union:__anon83::__anon84
instr_fetch	nemu/include/cpu/exec.h	/^static inline uint32_t instr_fetch(vaddr_t *pc, int len) {$/;"	f
int16	fceux-am/src/types.h	/^typedef int16_t int16;$/;"	t
int16	fceux-am/src/types.h	/^typedef signed short int16;$/;"	t
int32	fceux-am/src/types.h	/^typedef int32_t int32;$/;"	t
int32	fceux-am/src/types.h	/^typedef signed int int32;$/;"	t
int64	fceux-am/src/types.h	/^ typedef __int64 int64;$/;"	t
int64	fceux-am/src/types.h	/^ typedef long long int64;$/;"	t
int8	fceux-am/src/types.h	/^typedef int8_t int8;$/;"	t
int8	fceux-am/src/types.h	/^typedef signed char int8;$/;"	t
int_wp_state	nemu/tools/kvm-diff/src/kvm.c	/^  int int_wp_state;$/;"	m	struct:vcpu	file:
internal_refresh	fceux-am/src/boards/emu2413.c	/^static void internal_refresh(void) {$/;"	f	file:
interpret_relop	nemu/src/engine/interpreter/c_op.h	/^static inline bool interpret_relop(uint32_t relop, const rtlreg_t src1, const rtlreg_t src2) {$/;"	f
interrupt	abstract-machine/am/src/x86.h	336;"	d
inv	nemu/src/isa/mips32/exec/all-instr.h	/^def_EHelper(inv);$/;"	v
inv	nemu/src/isa/riscv32/exec/all-instr.h	/^def_EHelper(inv);$/;"	v
inv	nemu/src/isa/riscv64/exec/all-instr.h	/^def_EHelper(inv);$/;"	v
inv	nemu/src/isa/x86/exec/all-instr.h	/^def_EHelper(inv);$/;"	v
inv_hack	fceux-am/src/boards/onebus.cpp	/^static uint8 inv_hack = 0;		\/\/ some OneBus Systems have swapped PRG reg commans in MMC3 inplementation,$/;"	v	file:
invoke_callback	nemu/src/device/io/map.c	/^static inline void invoke_callback(io_callback_t c, paddr_t offset, int len, bool is_write) {$/;"	f	file:
inw	abstract-machine/am/src/mips32.h	/^static inline uint16_t inw(uintptr_t addr) { return *(volatile uint16_t *)addr; }$/;"	f
inw	abstract-machine/am/src/riscv32.h	/^static inline uint16_t inw(uintptr_t addr) { return *(volatile uint16_t *)addr; }$/;"	f
inw	abstract-machine/am/src/riscv64.h	/^static inline uint16_t inw(uintptr_t addr) { return *(volatile uint16_t *)addr; }$/;"	f
inw	abstract-machine/am/src/x86.h	/^static inline uint16_t inw(int port) {$/;"	f
io_callback_t	nemu/include/device/map.h	/^typedef void(*io_callback_t)(uint32_t, int, bool);$/;"	t
io_read	abstract-machine/klib/include/klib-macros.h	18;"	d
io_write	abstract-machine/klib/include/klib-macros.h	23;"	d
ioaddr_t	nemu/include/common.h	/^typedef uint16_t ioaddr_t;$/;"	t
ioapic	abstract-machine/am/src/x86/qemu/ioe.c	/^static volatile IOAPIC *ioapic;$/;"	v	file:
ioapicread	abstract-machine/am/src/x86/qemu/ioe.c	/^static unsigned int ioapicread(int reg) {$/;"	f	file:
ioapicwrite	abstract-machine/am/src/x86/qemu/ioe.c	/^static void ioapicwrite(int reg, unsigned int data) {$/;"	f	file:
ioe_init	abstract-machine/am/src/native/ioe.c	/^bool ioe_init() {$/;"	f
ioe_init	abstract-machine/am/src/nemu/ioe/ioe.c	/^bool ioe_init() {$/;"	f
ioe_init	abstract-machine/am/src/x86/qemu/ioe.c	/^bool ioe_init() {$/;"	f
ioe_init_done	abstract-machine/am/src/native/ioe.c	/^static bool ioe_init_done = false;$/;"	v	file:
ioe_read	abstract-machine/am/src/native/ioe.c	/^void ioe_read (int reg, void *buf) { do_io(reg, buf); }$/;"	f
ioe_read	abstract-machine/am/src/nemu/ioe/ioe.c	/^void ioe_read (int reg, void *buf) { ((handler_t)lut[reg])(buf); }$/;"	f
ioe_read	abstract-machine/am/src/x86/qemu/ioe.c	/^void ioe_read (int reg, void *buf) { ((handler_t)lut[reg])(buf); }$/;"	f
ioe_write	abstract-machine/am/src/native/ioe.c	/^void ioe_write(int reg, void *buf) { do_io(reg, buf); }$/;"	f
ioe_write	abstract-machine/am/src/nemu/ioe/ioe.c	/^void ioe_write(int reg, void *buf) { ((handler_t)lut[reg])(buf); }$/;"	f
ioe_write	abstract-machine/am/src/x86/qemu/ioe.c	/^void ioe_write(int reg, void *buf) { ((handler_t)lut[reg])(buf); }$/;"	f
iret	abstract-machine/am/src/native/cte.c	/^static void iret(ucontext_t *uc) {$/;"	f	file:
irq	abstract-machine/am/include/arch/x86-nemu.h	/^  int irq;$/;"	m	struct:Context
irq	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint32_t irq, errcode;$/;"	m	struct:trap_frame
irq	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint64_t irq, errcode;$/;"	m	struct:trap_frame
irq_handle	abstract-machine/am/src/native/cte.c	/^static void irq_handle(Context *c) {$/;"	f	file:
irqcmd	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 regcmd, irqcmd, mirr, big_bank;$/;"	v	file:
is10	fceux-am/src/boards/mmc2and4.cpp	/^static uint8 is10;$/;"	v	file:
is153	fceux-am/src/boards/bandai.cpp	/^static uint8 reg[16], is153, x24c02;$/;"	v	file:
is154	fceux-am/src/boards/88.cpp	/^static uint8 mirror, cmd, is154;$/;"	v	file:
is155	fceux-am/src/boards/mmc1.cpp	/^static int is155, is171;$/;"	v	file:
is167	fceux-am/src/boards/subor.cpp	/^static uint8 is167, regs[4];$/;"	v	file:
is171	fceux-am/src/boards/mmc1.cpp	/^static int is155, is171;$/;"	v	file:
is172	fceux-am/src/boards/01-222.cpp	/^static uint8 reg[4], cmd, is172, is173;$/;"	v	file:
is173	fceux-am/src/boards/01-222.cpp	/^static uint8 reg[4], cmd, is172, is173;$/;"	v	file:
is209	fceux-am/src/boards/90.cpp	/^static int is209;$/;"	v	file:
is210	fceux-am/src/boards/n106.cpp	/^static int is210;        \/* Lesser mapper. *\/$/;"	v	file:
is211	fceux-am/src/boards/90.cpp	/^static int is211;$/;"	v	file:
is22	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 is22, reg1mask, reg2mask;$/;"	v	file:
is26	fceux-am/src/boards/vrc6.cpp	/^static uint8 is26;$/;"	v	file:
is2kbank	fceux-am/src/boards/yoko.cpp	/^static uint8 is2kbank, isnot2kbank;$/;"	v	file:
is48	fceux-am/src/boards/33.cpp	/^static uint8 is48;$/;"	v	file:
isArchive	fceux-am/src/file.h	/^	bool isArchive() { return archiveCount > 0; }$/;"	f	struct:FCEUFILE
isArchive	fceux-am/src/file.h	/^	bool isArchive() { return type != -1; }$/;"	f	struct:ArchiveScanRecord
isExMirr	fceux-am/src/boards/80.cpp	/^static uint8 preg[3], creg[6], isExMirr;$/;"	v	file:
isPirate	fceux-am/src/boards/vrc2and4.cpp	/^static bool isPirate;$/;"	v	file:
isRevB	fceux-am/src/boards/mmc3.cpp	/^static int isRevB = 1;$/;"	v	file:
is_BMCFK23CA	fceux-am/src/boards/fk23c.cpp	/^static bool is_BMCFK23CA;$/;"	v	file:
is_ap	abstract-machine/am/src/x86.h	/^  int32_t is_ap;$/;"	m	struct:__anon8
is_batch_mode	nemu/src/monitor/monitor.c	/^int is_batch_mode() { return batch_mode; }$/;"	f
is_exit_status_bad	nemu/src/monitor/cpu-exec.c	/^int is_exit_status_bad() {$/;"	f
is_jmp	nemu/include/cpu/decode.h	/^  uint32_t is_jmp;$/;"	m	struct:__anon67
is_large_banks	fceux-am/src/boards/bmc70in1.cpp	/^static uint8 is_large_banks, hw_switch;$/;"	v	file:
is_mapped	abstract-machine/am/src/native/vme.c	/^  int is_mapped;$/;"	m	struct:PageMap	file:
is_open	fceux-am/src/emufile.h	/^	bool is_open() { return fp != NULL; }$/;"	f	class:EMUFILE_FILE
is_open	fceux-am/src/emufile.h	/^bool is_open() { return true; }$/;"	f	class:EMUFILE_FILE
is_operand_size_16	nemu/include/isa/x86.h	/^  bool is_operand_size_16;$/;"	m	struct:__anon80
is_skip_ref	nemu/src/monitor/difftest/dut.c	/^static bool is_skip_ref = false;$/;"	v	file:
isa	nemu/include/cpu/decode.h	/^  ISADecodeInfo isa;$/;"	m	struct:__anon67
isa_difftest_attach	nemu/src/isa/mips32/difftest/dut.c	/^void isa_difftest_attach() {$/;"	f
isa_difftest_attach	nemu/src/isa/riscv32/difftest/dut.c	/^void isa_difftest_attach() {$/;"	f
isa_difftest_attach	nemu/src/isa/riscv64/difftest/dut.c	/^void isa_difftest_attach() {$/;"	f
isa_difftest_attach	nemu/src/isa/x86/difftest/dut.c	/^void isa_difftest_attach() {$/;"	f
isa_difftest_checkregs	nemu/src/isa/mips32/difftest/dut.c	/^bool isa_difftest_checkregs(CPU_state *ref_r, vaddr_t pc) {$/;"	f
isa_difftest_checkregs	nemu/src/isa/riscv32/difftest/dut.c	/^bool isa_difftest_checkregs(CPU_state *ref_r, vaddr_t pc) {$/;"	f
isa_difftest_checkregs	nemu/src/isa/riscv64/difftest/dut.c	/^bool isa_difftest_checkregs(CPU_state *ref_r, vaddr_t pc) {$/;"	f
isa_difftest_checkregs	nemu/src/isa/x86/difftest/dut.c	/^bool isa_difftest_checkregs(CPU_state *ref_r, vaddr_t pc) {$/;"	f
isa_exec_once	nemu/src/isa/mips32/exec/exec.c	/^vaddr_t isa_exec_once() {$/;"	f
isa_exec_once	nemu/src/isa/riscv32/exec/exec.c	/^vaddr_t isa_exec_once() {$/;"	f
isa_exec_once	nemu/src/isa/riscv64/exec/exec.c	/^vaddr_t isa_exec_once() {$/;"	f
isa_exec_once	nemu/src/isa/x86/exec/exec.c	/^vaddr_t isa_exec_once() {$/;"	f
isa_gdb_regs	nemu/tools/qemu-diff/include/isa/mips32.h	/^union isa_gdb_regs {$/;"	u
isa_gdb_regs	nemu/tools/qemu-diff/include/isa/riscv32.h	/^union isa_gdb_regs {$/;"	u
isa_gdb_regs	nemu/tools/qemu-diff/include/isa/riscv64.h	/^union isa_gdb_regs {$/;"	u
isa_gdb_regs	nemu/tools/qemu-diff/include/isa/x86.h	/^union isa_gdb_regs {$/;"	u
isa_has_mem_exception	nemu/include/isa.h	34;"	d
isa_logo	nemu/src/isa/mips32/logo.c	/^unsigned char isa_logo[] = {$/;"	v
isa_logo	nemu/src/isa/riscv32/logo.c	/^unsigned char isa_logo[] = {$/;"	v
isa_logo	nemu/src/isa/riscv64/logo.c	/^unsigned char isa_logo[] = {$/;"	v
isa_logo	nemu/src/isa/x86/logo.c	/^unsigned char isa_logo[] = {$/;"	v
isa_mmu_translate	nemu/src/isa/mips32/mmu.c	/^paddr_t isa_mmu_translate(vaddr_t vaddr, int type, int len) {$/;"	f
isa_mmu_translate	nemu/src/isa/riscv32/mmu.c	/^paddr_t isa_mmu_translate(vaddr_t addr, int type, int len) {$/;"	f
isa_mmu_translate	nemu/src/isa/riscv64/mmu.c	/^paddr_t isa_mmu_translate(vaddr_t addr, int type, int len) {$/;"	f
isa_mmu_translate	nemu/src/isa/x86/mmu.c	/^paddr_t isa_mmu_translate(vaddr_t vaddr, int type, int len) {$/;"	f
isa_reg_display	nemu/src/isa/mips32/reg.c	/^void isa_reg_display() {$/;"	f
isa_reg_display	nemu/src/isa/riscv32/reg.c	/^void isa_reg_display() {$/;"	f
isa_reg_display	nemu/src/isa/riscv64/reg.c	/^void isa_reg_display() {$/;"	f
isa_reg_display	nemu/src/isa/x86/reg.c	/^void isa_reg_display() {$/;"	f
isa_reg_str2val	nemu/src/isa/mips32/reg.c	/^word_t isa_reg_str2val(const char *s, bool *success) {$/;"	f
isa_reg_str2val	nemu/src/isa/riscv32/reg.c	/^word_t isa_reg_str2val(const char *s, bool *success) {$/;"	f
isa_reg_str2val	nemu/src/isa/riscv64/reg.c	/^word_t isa_reg_str2val(const char *s, bool *success) {$/;"	f
isa_reg_str2val	nemu/src/isa/x86/reg.c	/^word_t isa_reg_str2val(const char *s, bool *success) {$/;"	f
isa_vaddr_check	nemu/include/isa/mips32.h	48;"	d
isa_vaddr_check	nemu/include/isa/riscv32.h	50;"	d
isa_vaddr_check	nemu/include/isa/riscv64.h	50;"	d
isa_vaddr_check	nemu/include/isa/x86.h	47;"	d
iset	abstract-machine/am/src/native/cte.c	/^void iset(bool enable) {$/;"	f
iset	abstract-machine/am/src/nemu/isa/mips32/cte.c	/^void iset(bool enable) {$/;"	f
iset	abstract-machine/am/src/nemu/isa/riscv32/cte.c	/^void iset(bool enable) {$/;"	f
iset	abstract-machine/am/src/nemu/isa/riscv64/cte.c	/^void iset(bool enable) {$/;"	f
iset	abstract-machine/am/src/nemu/isa/x86/cte.c	/^void iset(bool enable) {$/;"	f
iset	abstract-machine/am/src/x86/qemu/cte.c	/^void iset(bool enable) {$/;"	f
isirqused	fceux-am/src/boards/ks7032.cpp	/^static uint8 reg[8], cmd, IRQa = 0, isirqused = 0;$/;"	v	file:
isloaded	fceux-am/src/drivers/sdl/sdl.cpp	/^int isloaded;$/;"	v
isnot2kbank	fceux-am/src/boards/yoko.cpp	/^static uint8 is2kbank, isnot2kbank;$/;"	v	file:
isresetbased	fceux-am/src/boards/bmc42in1r.cpp	/^static uint8 isresetbased = 0;$/;"	v	file:
isv	abstract-machine/am/src/x86.h	/^  uint32_t isv       :  3;$/;"	m	struct:__anon3
iu	nemu/include/isa/mips32.h	/^    } iu;$/;"	m	union:__anon90::__anon91	typeref:struct:__anon90::__anon91::__anon93
jammed	fceux-am/src/x6502struct.h	/^        uint8 jammed;$/;"	m	struct:__X6502
jiffy	nemu/src/device/alarm.c	/^static uint32_t jiffy = 0;$/;"	v	file:
jmp_code	abstract-machine/am/src/x86.h	/^  uint32_t jmp_code;$/;"	m	struct:__anon8
jmp_pc	nemu/include/cpu/decode.h	/^  vaddr_t jmp_pc;$/;"	m	struct:__anon67
joy	fceux-am/src/input.cpp	/^uint8 joy[4]={0,0,0,0}; \/\/HACK - should be static but movie needs it$/;"	v
joy_readbit	fceux-am/src/input.cpp	/^static uint8 joy_readbit[2];$/;"	v	file:
joyports	fceux-am/src/input.cpp	/^JOYPORT joyports[2] = { JOYPORT(0), JOYPORT(1) };$/;"	v
kFetchTime	fceux-am/src/ppu.cpp	/^const int kFetchTime = 2;$/;"	v
kLineTime	fceux-am/src/ppu.cpp	/^const int kLineTime = 341;$/;"	v
kas	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^static AddrSpace kas = {};$/;"	v	file:
kas	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^static AddrSpace kas = {};$/;"	v	file:
kas	abstract-machine/am/src/nemu/isa/x86/vme.c	/^static AddrSpace kas = {};$/;"	v	file:
kcontext	abstract-machine/am/src/native/cte.c	/^Context* kcontext(Area kstack, void (*entry)(void *), void *arg) {$/;"	f
kcontext	abstract-machine/am/src/nemu/isa/mips32/cte.c	/^Context *kcontext(Area kstack, void (*entry)(void *), void *arg) {$/;"	f
kcontext	abstract-machine/am/src/nemu/isa/riscv32/cte.c	/^Context *kcontext(Area kstack, void (*entry)(void *), void *arg) {$/;"	f
kcontext	abstract-machine/am/src/nemu/isa/riscv64/cte.c	/^Context *kcontext(Area kstack, void (*entry)(void *), void *arg) {$/;"	f
kcontext	abstract-machine/am/src/nemu/isa/x86/cte.c	/^Context* kcontext(Area kstack, void (*entry)(void *), void *arg) {$/;"	f
kcontext	abstract-machine/am/src/x86/qemu/cte.c	/^Context* kcontext(Area kstack, void (*entry)(void *), void *arg) {$/;"	f
kernel	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  int kernel;$/;"	m	struct:vm_area
kernel_stack	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^struct kernel_stack {$/;"	s
keyOff	fceux-am/src/boards/emu2413.c	/^INLINE static void keyOff(OPLL * opll, int32 i) {$/;"	f	file:
keyOn	fceux-am/src/boards/emu2413.c	/^INLINE static void keyOn(OPLL * opll, int32 i) {$/;"	f	file:
key_f	abstract-machine/am/src/native/native-input.c	/^static int key_f = 0, key_r = 0;$/;"	v	file:
key_f	nemu/src/device/keyboard.c	/^static int key_f = 0, key_r = 0;$/;"	v	file:
key_queue	abstract-machine/am/src/native/native-input.c	/^static int key_queue[KEY_QUEUE_LEN] = {};$/;"	v	file:
key_queue	nemu/src/device/keyboard.c	/^static int key_queue[KEY_QUEUE_LEN] = {};$/;"	v	file:
key_queue_lock	abstract-machine/am/src/native/native-input.c	/^static SDL_mutex *key_queue_lock = NULL;$/;"	v	file:
key_r	abstract-machine/am/src/native/native-input.c	/^static int key_f = 0, key_r = 0;$/;"	v	file:
key_r	nemu/src/device/keyboard.c	/^static int key_f = 0, key_r = 0;$/;"	v	file:
key_status	fceux-am/src/boards/emu2413.h	/^	int32 key_status[6];$/;"	m	struct:__anon44
keylut	abstract-machine/am/src/x86/qemu/ioe.c	/^static int keylut[128] = {$/;"	v	file:
keymap	abstract-machine/am/src/native/native-input.c	/^static int keymap[256] = {$/;"	v	file:
keymap	nemu/src/device/keyboard.c	/^static uint32_t keymap[256] = {$/;"	v	file:
kogame	fceux-am/src/boards/68.cpp	/^static uint8 kogame, prg_reg, nt1, nt2, mirr;$/;"	v	file:
kook	fceux-am/src/ppu.cpp	/^static int kook = 0;$/;"	v	file:
kpt	abstract-machine/am/src/x86/qemu/vme.c	/^static uintptr_t *kpt;$/;"	v	file:
ksp	abstract-machine/am/include/arch/native.h	/^  uintptr_t ksp;$/;"	m	struct:Context
ksp	abstract-machine/am/src/native/platform.h	/^  uintptr_t ksp;$/;"	m	struct:__anon9
kt_extra	fceux-am/src/boards/mmc3.cpp	/^uint8 kt_extra;$/;"	v
kvm_exec	nemu/tools/kvm-diff/src/kvm.c	/^static void kvm_exec(uint64_t n) {$/;"	f	file:
kvm_getregs	nemu/tools/kvm-diff/src/kvm.c	/^static inline void kvm_getregs(struct kvm_regs *r) {$/;"	f	file:
kvm_getsregs	nemu/tools/kvm-diff/src/kvm.c	/^static void kvm_getsregs(struct kvm_sregs *r) {$/;"	f	file:
kvm_run	nemu/tools/kvm-diff/src/kvm.c	/^  struct kvm_run *kvm_run;$/;"	m	struct:vcpu	typeref:struct:vcpu::kvm_run	file:
kvm_set_step_mode	nemu/tools/kvm-diff/src/kvm.c	/^static void kvm_set_step_mode(bool watch, uint32_t watch_addr) {$/;"	f	file:
kvm_setregs	nemu/tools/kvm-diff/src/kvm.c	/^static void kvm_setregs(const struct kvm_regs *r) {$/;"	f	file:
kvm_setsregs	nemu/tools/kvm-diff/src/kvm.c	/^static void kvm_setsregs(const struct kvm_sregs *r) {$/;"	f	file:
l	abstract-machine/am/src/x86.h	/^  uint32_t l          :  1; \/\/ 64-bit segment$/;"	m	struct:__anon1
lapicaddr	abstract-machine/am/src/x86.h	/^  uint32_t lapicaddr;     \/\/ address of local APIC$/;"	m	struct:__anon6
lapicw	abstract-machine/am/src/x86/qemu/ioe.c	/^static void lapicw(int index, int value) {$/;"	f	file:
large_bank	fceux-am/src/boards/bmc70in1.cpp	/^static uint8 large_bank;$/;"	v	file:
last	fceux-am/src/ppu.cpp	/^	int32 last;$/;"	m	struct:SPRITE_READ	file:
lastclick	fceux-am/src/boards/178.cpp	/^static uint32 MouseData[3], click, lastclick;$/;"	v	file:
lastd	fceux-am/src/palette.cpp	/^static uint8 lastd=0;$/;"	v	file:
lastnt	fceux-am/src/boards/dance2000.cpp	/^static uint32 lastnt = 0;$/;"	v	file:
lastnt	fceux-am/src/boards/pec-586.cpp	/^static uint32 lastnt = 0;$/;"	v	file:
lastppu	fceux-am/src/boards/80.cpp	/^static uint32 lastppu;$/;"	v	file:
lastread	fceux-am/src/boards/90.cpp	/^static uint32 lastread;$/;"	v	file:
laststrobe	fceux-am/src/boards/164.cpp	/^static uint8 laststrobe, trigger;$/;"	v	file:
latch	fceux-am/src/boards/99.cpp	/^static uint8 latch;$/;"	v	file:
latch	fceux-am/src/boards/ffe.cpp	/^static uint8 preg[4], creg[8], latch, ffemode;$/;"	v	file:
latch	fceux-am/src/boards/novel.cpp	/^static uint8 latch;$/;"	v	file:
latch	fceux-am/src/boards/sachen.cpp	/^static uint8 latch[8];$/;"	v	file:
latch0	fceux-am/src/boards/mmc2and4.cpp	/^static uint8 creg[4], latch0, latch1, preg, mirr;$/;"	v	file:
latch1	fceux-am/src/boards/mmc2and4.cpp	/^static uint8 creg[4], latch0, latch1, preg, mirr;$/;"	v	file:
latcha	fceux-am/src/boards/unrom512.cpp	/^static uint16 latcha;$/;"	v	file:
latche	fceux-am/src/boards/230.cpp	/^static uint8 latche, reset;$/;"	v	file:
latche	fceux-am/src/boards/36.cpp	/^static uint8 latche, mirr;$/;"	v	file:
latche	fceux-am/src/boards/77.cpp	/^static uint8 latche;$/;"	v	file:
latche	fceux-am/src/boards/addrlatch.cpp	/^static uint16 latche, latcheinit;$/;"	v	file:
latche	fceux-am/src/boards/bmc42in1r.cpp	/^static uint8 latche[2], reset;$/;"	v	file:
latche	fceux-am/src/boards/datalatch.cpp	/^static uint8 latche, latcheinit, bus_conflict;$/;"	v	file:
latche	fceux-am/src/boards/dream.cpp	/^static uint8 latche;$/;"	v	file:
latche	fceux-am/src/boards/karaoke.cpp	/^static uint8 latche;$/;"	v	file:
latche	fceux-am/src/boards/mihunche.cpp	/^static uint16 latche;$/;"	v	file:
latche	fceux-am/src/boards/unrom512.cpp	/^static uint8 latche, latcheinit, bus_conflict, chrram_mask, software_id=false;$/;"	v	file:
latchea	fceux-am/src/boards/15.cpp	/^static uint16 latchea;$/;"	v	file:
latched	fceux-am/src/boards/15.cpp	/^static uint8 latched;$/;"	v	file:
latcheinit	fceux-am/src/boards/addrlatch.cpp	/^static uint16 latche, latcheinit;$/;"	v	file:
latcheinit	fceux-am/src/boards/datalatch.cpp	/^static uint8 latche, latcheinit, bus_conflict;$/;"	v	file:
latcheinit	fceux-am/src/boards/unrom512.cpp	/^static uint8 latche, latcheinit, bus_conflict, chrram_mask, software_id=false;$/;"	v	file:
length	abstract-machine/am/src/x86.h	/^  uint16_t length;        \/\/ total table length$/;"	m	struct:__anon6
length	abstract-machine/am/src/x86.h	/^  uint8_t  length;   \/\/ 1$/;"	m	struct:__anon7
lengthcount	fceux-am/src/sound.cpp	/^\/*static*\/ int32 lengthcount[4];$/;"	v
lengthtable	fceux-am/src/sound.cpp	/^static const uint8 lengthtable[0x20]=$/;"	v	file:
lfo_am	fceux-am/src/boards/emu2413.h	/^	int32 lfo_am;$/;"	m	struct:__anon44
lfo_pm	fceux-am/src/boards/emu2413.h	/^	int32 lfo_pm;$/;"	m	struct:__anon44
lim_15_0	abstract-machine/am/src/x86.h	/^  uint32_t lim_15_0   : 16; \/\/ Low bits of segment limit$/;"	m	struct:__anon1
lim_19_16	abstract-machine/am/src/x86.h	/^  uint32_t lim_19_16  :  4; \/\/ High bits of segment limit$/;"	m	struct:__anon1
linestartts	fceux-am/src/ppu.cpp	/^int linestartts;	\/\/no longer static so the debugger can see it$/;"	v
link	abstract-machine/am/src/x86.h	/^  uint32_t link;     \/\/ Unused$/;"	m	struct:__anon4
list_foreach	abstract-machine/am/src/native/vme.c	13;"	d	file:
lo	abstract-machine/am/include/arch/mips32-nemu.h	/^  uintptr_t hi, gpr[32], epc, cause, lo, status;$/;"	m	struct:Context
lo	nemu/tools/qemu-diff/include/isa/mips32.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anon103
load_addr	nemu/src/isa/x86/decode.c	/^static inline void load_addr(DecodeExecState *s, ModR_M *m, Operand *rm) {$/;"	f	file:
load_elf32	abstract-machine/am/src/x86/qemu/boot/main.c	/^static void load_elf32(Elf32_Ehdr *elf) {$/;"	f	file:
load_elf64	abstract-machine/am/src/x86/qemu/boot/main.c	/^static void load_elf64(Elf64_Ehdr *elf) {$/;"	f	file:
load_img	nemu/src/monitor/monitor.c	/^static inline long load_img() {$/;"	f	file:
load_kernel	abstract-machine/am/src/x86/qemu/boot/main.c	/^void load_kernel(void) {$/;"	f
load_program	abstract-machine/am/src/x86/qemu/boot/main.c	/^static void load_program(uint32_t filesz, uint32_t memsz, uint32_t paddr, uint32_t offset) {$/;"	f	file:
lock	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static uint8 unromchr, lock;$/;"	v	file:
lock	fceux-am/src/boards/t-262.cpp	/^static uint8 bank, base, lock, mirr, mode;$/;"	v	file:
log_asmbuf	nemu/src/monitor/debug/log.c	/^char log_asmbuf[80] = {};$/;"	v
log_bytebuf	nemu/src/monitor/debug/log.c	/^char log_bytebuf[80] = {};$/;"	v
log_enable	nemu/src/monitor/cpu-exec.c	/^bool log_enable() {$/;"	f
log_file	nemu/src/monitor/monitor.c	/^static char *log_file = NULL;$/;"	v	file:
log_fp	nemu/src/monitor/debug/log.c	/^FILE *log_fp = NULL;$/;"	v
log_write	nemu/include/monitor/log.h	17;"	d
log_write	nemu/include/monitor/log.h	8;"	d
long_double_bits	abstract-machine/klib/src/int64.c	/^} long_double_bits;$/;"	t	typeref:union:__anon27	file:
low	abstract-machine/klib/src/int64.c	/^        du_int low;$/;"	m	struct:__anon20::__anon21	file:
low	abstract-machine/klib/src/int64.c	/^        du_int low;$/;"	m	struct:__anon22::__anon23	file:
low	abstract-machine/klib/src/int64.c	/^        su_int low;$/;"	m	struct:__anon16::__anon17	file:
low	abstract-machine/klib/src/int64.c	/^        su_int low;$/;"	m	struct:__anon18::__anon19	file:
low	abstract-machine/klib/src/int64.c	/^    udwords low;$/;"	m	struct:__anon26	file:
low	fceux-am/src/boards/yoko.cpp	/^static uint8 mode, bank, reg[11], low[4], dip, IRQa;$/;"	v	file:
low	nemu/include/device/map.h	/^  paddr_t low;$/;"	m	struct:__anon70
lowpass	fceux-am/src/fceu.h	/^	int lowpass;$/;"	m	struct:__anon32
lreset	fceux-am/src/boards/mmc1.cpp	/^static uint64 lreset;$/;"	v	file:
lut	abstract-machine/am/src/native/ioe.c	/^static void *lut[128] = {$/;"	v	file:
lut	abstract-machine/am/src/nemu/ioe/ioe.c	/^static void *lut[128] = {$/;"	v	file:
lut	abstract-machine/am/src/x86/qemu/ioe.c	/^static void *lut[128] = {$/;"	v	file:
lut	fceux-am/src/boards/158B.cpp	/^static uint8 lut[8] = { 0x00, 0x00, 0x00, 0x01, 0x02, 0x04, 0x0F, 0x00 };$/;"	v	file:
lut	fceux-am/src/boards/208.cpp	/^static uint8 lut[256] = {$/;"	v	file:
lut	fceux-am/src/boards/603-5052.cpp	/^static uint8 lut[4] = { 0x00, 0x02, 0x02, 0x03 };$/;"	v	file:
lut	fceux-am/src/ppu.cpp	/^	uint8 lut [1 << _BITS];$/;"	m	struct:BITREVLUT	file:
m114_perm	fceux-am/src/boards/mmc3.cpp	/^uint8 m114_perm[8] = { 0, 3, 1, 5, 6, 7, 2, 4 };$/;"	v
macro	fceux-am/src/drivers/common/vidblit.cpp	156;"	d	file:
magic	abstract-machine/am/src/x86.h	/^  int      magic;$/;"	m	struct:__anon7
main	fceux-am/src/drivers/sdl/sdl.cpp	/^int main(const char *romname)$/;"	f
main	fceux-am/src/ppu.cpp	/^	Record main[34];	\/\/one at the end is junk, it can never be rendered$/;"	m	struct:BGData	file:
main	nemu/src/main.c	/^int main(int argc, char *argv[]) {$/;"	f
main	nemu/tools/gen-expr/gen-expr.c	/^int main(int argc, char *argv[]) {$/;"	f
mainargs	abstract-machine/am/src/nemu/trm.c	/^static const char mainargs[] = MAINARGS;$/;"	v	file:
mainreg	fceux-am/src/boards/41.cpp	/^static uint8 mainreg, chrreg, mirror;$/;"	v	file:
makeAdjustTable	fceux-am/src/boards/emu2413.c	/^static void makeAdjustTable(void) {$/;"	f	file:
makeAmTable	fceux-am/src/boards/emu2413.c	/^static void makeAmTable(void) {$/;"	f	file:
makeDB2LinTable	fceux-am/src/boards/emu2413.c	/^static void makeDB2LinTable(void) {$/;"	f	file:
makePmTable	fceux-am/src/boards/emu2413.c	/^static void makePmTable(void) {$/;"	f	file:
makeRksTable	fceux-am/src/boards/emu2413.c	/^static void makeRksTable(void) {$/;"	f	file:
makeSinTable	fceux-am/src/boards/emu2413.c	/^static void makeSinTable(void) {$/;"	f	file:
makeTllTable	fceux-am/src/boards/emu2413.c	/^static void makeTllTable(void) {$/;"	f	file:
make_ti	abstract-machine/klib/src/int64.c	/^static __inline ti_int make_ti(di_int h, di_int l) {$/;"	f	file:
make_token	nemu/src/monitor/debug/expr.c	/^static bool make_token(char *e) {$/;"	f	file:
make_tu	abstract-machine/klib/src/int64.c	/^static __inline tu_int make_tu(du_int h, du_int l) {$/;"	f	file:
makeppulut	fceux-am/src/ppu.cpp	/^static void makeppulut(void) {$/;"	f	file:
maketables	fceux-am/src/boards/emu2413.c	/^static void maketables(uint32 c, uint32 r) {$/;"	f	file:
malloc	abstract-machine/klib/src/stdlib.c	/^void *malloc(size_t size) {$/;"	f
map	abstract-machine/am/src/native/vme.c	/^void map(AddrSpace *as, void *va, void *pa, int prot) {$/;"	f
map	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^void map(AddrSpace *as, void *va, void *pa, int prot) {$/;"	f
map	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^void map(AddrSpace *as, void *va, void *pa, int prot) {$/;"	f
map	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^void map(AddrSpace *as, void *va, void *pa, int prot) {$/;"	f
map	abstract-machine/am/src/nemu/isa/x86/vme.c	/^void map(AddrSpace *as, void *va, void *pa, int prot) {$/;"	f
map	abstract-machine/am/src/x86/qemu/vme.c	/^void map(AddrSpace *as, void *va, void *pa, int prot) {$/;"	f
map_inside	nemu/include/device/map.h	/^static inline bool map_inside(IOMap *map, paddr_t addr) {$/;"	f
map_read	nemu/src/device/io/map.c	/^word_t map_read(paddr_t addr, int len, IOMap *map) {$/;"	f
map_write	nemu/src/device/io/map.c	/^void map_write(paddr_t addr, word_t data, int len, IOMap *map) {$/;"	f
mapper	fceux-am/src/ines.cpp	/^	int32 mapper;$/;"	m	struct:CHINF	file:
mappernum	fceux-am/src/git.h	/^	int mappernum;$/;"	m	struct:FCEUGI
maps	nemu/src/device/io/mmio.c	/^static IOMap maps[NR_MAP] = {};$/;"	v	file:
maps	nemu/src/device/io/port-io.c	/^static IOMap maps[NR_MAP] = {};$/;"	v	file:
mask	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^    uintptr_t mask;$/;"	m	struct:mmu_config::ptinfo
mask	fceux-am/src/boards/emu2413.h	/^	uint32 mask;$/;"	m	struct:__anon44
masko8	fceux-am/src/boards/super24.cpp	/^static int masko8[8] = { 63, 31, 15, 1, 3, 0, 0, 0 };$/;"	v	file:
maxsprites	fceux-am/src/ppu.cpp	/^static int maxsprites = 8;$/;"	v	file:
mbase	nemu/include/isa/x86.h	/^  const rtlreg_t *mbase;$/;"	m	struct:__anon80
mbr	nemu/include/isa/x86.h	/^  rtlreg_t mbr;$/;"	m	struct:__anon80
mbr	nemu/tools/kvm-diff/src/kvm.c	/^static const uint8_t mbr[] = {$/;"	v	file:
mbr	nemu/tools/qemu-diff/src/isa/x86/init.c	/^static uint8_t mbr[] = {$/;"	v	file:
mcache	fceux-am/src/boards/80.cpp	/^static uint8 mcache[8];$/;"	v	file:
md5_asciistr	fceux-am/src/utils/md5.cpp	/^char *md5_asciistr(MD5DATA& md5)$/;"	f
md5_context	fceux-am/src/utils/md5.h	/^struct md5_context$/;"	s
md5_finish	fceux-am/src/utils/md5.cpp	/^void md5_finish( struct md5_context *ctx, uint8 digest[16] )$/;"	f
md5_padding	fceux-am/src/utils/md5.cpp	/^static uint8 md5_padding[64] =$/;"	v	file:
md5_process	fceux-am/src/utils/md5.cpp	/^void md5_process( struct md5_context *ctx, uint8 data[64] )$/;"	f
md5_starts	fceux-am/src/utils/md5.cpp	/^void md5_starts( struct md5_context *ctx )$/;"	f
md5_update	fceux-am/src/utils/md5.cpp	/^void md5_update( struct md5_context *ctx, uint8 *input, uint32 length )$/;"	f
md5lower	fceux-am/src/ines.h	/^	uint64 md5lower;$/;"	m	struct:TMasterRomInfo
md5partial	fceux-am/src/ines.cpp	/^	uint64 md5partial;$/;"	m	struct:BADINF	file:
mem	nemu/tools/kvm-diff/src/kvm.c	/^  uint8_t *mem;$/;"	m	struct:vm	file:
memcmp	abstract-machine/klib/src/string.c	/^int memcmp(const void* s1, const void* s2, size_t n) {$/;"	f
memcpy	abstract-machine/klib/src/string.c	/^void* memcpy(void* out, const void* in, size_t n) {$/;"	f
memmove	abstract-machine/klib/src/string.c	/^void* memmove(void* dst,const void* src,size_t n) {$/;"	f
memset	abstract-machine/klib/src/string.c	/^void* memset(void* v,int c,size_t n) {$/;"	f
min	abstract-machine/am/src/native/native-gpu.c	/^static inline int min(int x, int y) { return (x < y) ? x : y; }$/;"	f	file:
mips32_CPU_state	nemu/include/isa/mips32.h	/^} mips32_CPU_state;$/;"	t	typeref:struct:__anon88
mips32_IMAGE_START	nemu/include/isa/mips32.h	7;"	d
mips32_ISADecodeInfo	nemu/include/isa/mips32.h	/^} mips32_ISADecodeInfo;$/;"	t	typeref:struct:__anon90
mips32_PMEM_BASE	nemu/include/isa/mips32.h	8;"	d
mips32_has_mem_exception	nemu/include/isa/mips32.h	49;"	d
mira	fceux-am/src/boards/90.cpp	/^static void mira(void)$/;"	f	file:
mirr	fceux-am/src/boards/156.cpp	/^static uint8 chrlo[8], chrhi[8], prg, mirr, mirrisused = 0;$/;"	v	file:
mirr	fceux-am/src/boards/175.cpp	/^static uint8 reg, delay, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/18.cpp	/^static uint8 IRQa, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/183.cpp	/^static uint8 prg[4], chr[8], mirr;$/;"	v	file:
mirr	fceux-am/src/boards/222.cpp	/^static uint8 mirr;$/;"	v	file:
mirr	fceux-am/src/boards/225.cpp	/^static uint8 prot[4], prg, mode, chr, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/253.cpp	/^static uint8 chrlo[8], chrhi[8], prg[2], mirr, vlock;$/;"	v	file:
mirr	fceux-am/src/boards/32.cpp	/^static uint8 preg[2], creg[8], mirr;$/;"	v	file:
mirr	fceux-am/src/boards/33.cpp	/^static uint8 regs[8], mirr;$/;"	v	file:
mirr	fceux-am/src/boards/36.cpp	/^static uint8 latche, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/42.cpp	/^static uint8 preg, creg, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/65.cpp	/^static uint8 preg[3], creg[8], mirr;$/;"	v	file:
mirr	fceux-am/src/boards/67.cpp	/^static uint8 preg, creg[4], mirr, suntoggle = 0;$/;"	v	file:
mirr	fceux-am/src/boards/68.cpp	/^static uint8 kogame, prg_reg, nt1, nt2, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/69.cpp	/^static uint8 cmdreg, preg[4], creg[8], mirr;$/;"	v	file:
mirr	fceux-am/src/boards/71.cpp	/^static uint8 preg, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/80.cpp	/^static uint8 mirr, cmd, wram_enable, wram[256];$/;"	v	file:
mirr	fceux-am/src/boards/ac-08.cpp	/^static uint8 reg, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/ax5705.cpp	/^static uint8 mirr;$/;"	v	file:
mirr	fceux-am/src/boards/cityfighter.cpp	/^static uint8 prg_reg, prg_mode, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/ffe.cpp	/^static uint8 IRQa, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/gs-2004.cpp	/^static uint8 reg, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/gs-2013.cpp	/^static uint8 reg, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/ks7010.cpp	/^static uint8 preg[4], creg, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/ks7013.cpp	/^static uint8 reg, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/ks7017.cpp	/^static uint8 reg, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/mmc2and4.cpp	/^static uint8 creg[4], latch0, latch1, preg, mirr;$/;"	v	file:
mirr	fceux-am/src/boards/sl1632.cpp	/^static uint8 chrcmd[8], prg0, prg1, bbrk, mirr, swap;$/;"	v	file:
mirr	fceux-am/src/boards/t-262.cpp	/^static uint8 bank, base, lock, mirr, mode;$/;"	v	file:
mirr	fceux-am/src/boards/tengen.cpp	/^static uint8 cmd, mirr, regs[11];$/;"	v	file:
mirr	fceux-am/src/boards/tf-1201.cpp	/^static uint8 prg0, prg1, mirr, swap;$/;"	v	file:
mirr	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 regcmd, irqcmd, mirr, big_bank;$/;"	v	file:
mirr	fceux-am/src/boards/vrc6.cpp	/^static uint8 prg[2], chr[8], mirr;$/;"	v	file:
mirr	fceux-am/src/boards/vrc7.cpp	/^static uint8 vrc7idx, preg[3], creg[8], mirr;$/;"	v	file:
mirr	fceux-am/src/boards/vrc7p.cpp	/^static uint8 prg[3], chr[8], mirr;$/;"	v	file:
mirrisused	fceux-am/src/boards/156.cpp	/^static uint8 chrlo[8], chrhi[8], prg, mirr, mirrisused = 0;$/;"	v	file:
mirror	fceux-am/src/boards/112.cpp	/^static uint8 mirror, cmd, bank;$/;"	v	file:
mirror	fceux-am/src/boards/117.cpp	/^static uint8 prgreg[4], chrreg[8], mirror;$/;"	v	file:
mirror	fceux-am/src/boards/193.cpp	/^static uint8 mirror, cmd, bank;$/;"	v	file:
mirror	fceux-am/src/boards/41.cpp	/^static uint8 mainreg, chrreg, mirror;$/;"	v	file:
mirror	fceux-am/src/boards/80013-B.cpp	/^static uint8 bios_prg, rom_prg, rom_mode, mirror;$/;"	v	file:
mirror	fceux-am/src/boards/88.cpp	/^static uint8 mirror, cmd, is154;$/;"	v	file:
mirror	fceux-am/src/boards/ks7057.cpp	/^static uint8 reg[8], mirror;$/;"	v	file:
mirror	fceux-am/src/boards/onebus.cpp	41;"	d	file:
mirror	fceux-am/src/cart.h	/^	int mirror;		\/\/ As set in the header or chunk.$/;"	m	struct:__anon37
mirror	fceux-am/src/ines.cpp	/^	int32 mirror;$/;"	m	struct:CHINF	file:
mirrorhard	fceux-am/src/cart.cpp	/^static int mirrorhard = 0;$/;"	v	file:
mirroring	fceux-am/src/boards/bmc70in1.cpp	/^static uint8 mirroring;$/;"	v	file:
mkdir	fceux-am/src/types.h	47;"	d
mmc1_buffer	fceux-am/src/boards/116.cpp	/^static uint8 mmc1_regs[4], mmc1_buffer, mmc1_shift;$/;"	v	file:
mmc1_regs	fceux-am/src/boards/116.cpp	/^static uint8 mmc1_regs[4], mmc1_buffer, mmc1_shift;$/;"	v	file:
mmc1_shift	fceux-am/src/boards/116.cpp	/^static uint8 mmc1_regs[4], mmc1_buffer, mmc1_shift;$/;"	v	file:
mmc3_ctrl	fceux-am/src/boards/116.cpp	/^static uint8 mmc3_regs[10], mmc3_ctrl, mmc3_mirr;$/;"	v	file:
mmc3_mirr	fceux-am/src/boards/116.cpp	/^static uint8 mmc3_regs[10], mmc3_ctrl, mmc3_mirr;$/;"	v	file:
mmc3_regs	fceux-am/src/boards/116.cpp	/^static uint8 mmc3_regs[10], mmc3_ctrl, mmc3_mirr;$/;"	v	file:
mmc3cmd	fceux-am/src/boards/onebus.cpp	40;"	d	file:
mmc3opts	fceux-am/src/boards/mmc3.cpp	/^uint8 mmc3opts = 0;$/;"	v
mmc5ABMode	fceux-am/src/boards/mmc5.cpp	/^uint8 mmc5ABMode;                \/* A=0, B=1 *\/$/;"	v
mmc5_PPURead	fceux-am/src/boards/mmc5.cpp	/^uint8 FASTCALL mmc5_PPURead(uint32 A)$/;"	f
mmc5_PPUWrite	fceux-am/src/boards/mmc5.cpp	/^static void mmc5_PPUWrite(uint32 A, uint8 V) {$/;"	f	file:
mmc5psize	fceux-am/src/boards/mmc5.cpp	/^static uint8 mmc5psize, mmc5vsize;$/;"	v	file:
mmc5vsize	fceux-am/src/boards/mmc5.cpp	/^static uint8 mmc5psize, mmc5vsize;$/;"	v	file:
mmio	nemu/tools/kvm-diff/src/kvm.c	/^  uint8_t *mmio;$/;"	m	struct:vm	file:
mmu	abstract-machine/am/src/x86/qemu/vme.c	/^const struct mmu_config mmu = {$/;"	v	typeref:struct:mmu_config
mmu_config	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^struct mmu_config {$/;"	s
mod	nemu/src/isa/x86/decode.c	/^    uint8_t mod		:2;$/;"	m	struct:__anon55::__anon56	file:
modcon	fceux-am/src/cart.cpp	/^int modcon;$/;"	v
mode	fceux-am/src/boards/116.cpp	/^static uint8 mode;$/;"	v	file:
mode	fceux-am/src/boards/225.cpp	/^static uint8 prot[4], prg, mode, chr, mirr;$/;"	v	file:
mode	fceux-am/src/boards/28.cpp	/^uint8 mode;$/;"	v
mode	fceux-am/src/boards/51.cpp	/^static uint8 bank, mode;$/;"	v	file:
mode	fceux-am/src/boards/62.cpp	/^static uint16 mode;$/;"	v	file:
mode	fceux-am/src/boards/dance2000.cpp	/^static uint8 prg, mode;$/;"	v	file:
mode	fceux-am/src/boards/t-262.cpp	/^static uint8 bank, base, lock, mirr, mode;$/;"	v	file:
mode	fceux-am/src/boards/vrc1.cpp	/^static uint8 preg[3], creg[2], mode;$/;"	v	file:
mode	fceux-am/src/boards/yoko.cpp	/^static uint8 mode, bank, reg[11], low[4], dip, IRQa;$/;"	v	file:
mode	fceux-am/src/emufile.h	/^	char mode[16];$/;"	m	class:EMUFILE_FILE
mode	fceux-am/src/file.h	/^	} mode;$/;"	m	struct:FCEUFILE	typeref:enum:FCEUFILE::__anon34
mode	fceux-am/src/ppu.cpp	/^	int32 mode;$/;"	m	struct:SPRITE_READ	file:
moff	nemu/include/isa/x86.h	/^  word_t moff;$/;"	m	struct:__anon80
monitor_statistic	nemu/src/monitor/cpu-exec.c	/^void monitor_statistic() {$/;"	f
mooPI	fceux-am/src/x6502struct.h	/^        uint8 A,X,Y,S,P,mooPI;$/;"	m	struct:__X6502
movieConvertOffset1	fceux-am/src/sound.cpp	/^int movieSyncHackOn=0,resetDMCacc=0,movieConvertOffset1,movieConvertOffset2;$/;"	v
movieConvertOffset2	fceux-am/src/sound.cpp	/^int movieSyncHackOn=0,resetDMCacc=0,movieConvertOffset1,movieConvertOffset2;$/;"	v
movieSyncHackOn	fceux-am/src/sound.cpp	/^int movieSyncHackOn=0,resetDMCacc=0,movieConvertOffset1,movieConvertOffset2;$/;"	v
mpe_init	abstract-machine/am/src/native/mpe.c	/^bool mpe_init(void (*entry)()) {$/;"	f
mpe_init	abstract-machine/am/src/nemu/mpe.c	/^bool mpe_init(void (*entry)()) {$/;"	f
mpe_init	abstract-machine/am/src/x86/qemu/mpe.c	/^bool mpe_init(void (*entry)()) {$/;"	f
mram	fceux-am/src/boards/228.cpp	/^static uint8 mram[4], vreg;$/;"	v	file:
mrindex	fceux-am/src/filter.cpp	/^static uint32 mrindex;$/;"	v	file:
mrratio	fceux-am/src/filter.cpp	/^static uint32 mrratio;$/;"	v	file:
msg	abstract-machine/am/include/am.h	/^  const char *msg;$/;"	m	struct:__anon11
mul	fceux-am/src/boards/90.cpp	/^static uint8 mul[2];$/;"	v	file:
mul	fceux-am/src/boards/mmc5.cpp	/^static uint8 mul[2];$/;"	v	file:
mwrap	fceux-am/src/boards/mmc3.cpp	/^void (*mwrap)(uint8 V);$/;"	v
name	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^    const char *name;$/;"	m	struct:mmu_config::ptinfo
name	fceux-am/nes/build-roms.py	/^  name = f.stem$/;"	v
name	fceux-am/src/git.h	/^	uint8 *name;	\/\/Game name, UTF8 encoding$/;"	m	struct:FCEUGI
name	fceux-am/src/ines.cpp	/^	const char *name;$/;"	m	struct:BADINF	file:
name	fceux-am/src/ines.h	/^	const char *name;$/;"	m	struct:__anon33
name	fceux-am/src/input.h	/^	const char* name;$/;"	m	struct:EMUCMDTABLE
name	nemu/include/device/map.h	/^  char *name;$/;"	m	struct:__anon70
name	nemu/src/monitor/debug/ui.c	/^  char *name;$/;"	m	struct:__anon62	file:
names	fceux-am/src/boards/90.cpp	/^static uint16 names[4];$/;"	v	file:
nemu_state	nemu/src/monitor/cpu-exec.c	/^NEMUState nemu_state = { .state = NEMU_STOP };$/;"	v
nemu_trap	abstract-machine/am/src/nemu/include/nemu.h	11;"	d
nemu_trap	abstract-machine/am/src/nemu/include/nemu.h	13;"	d
nemu_trap	abstract-machine/am/src/nemu/include/nemu.h	9;"	d
nemu_trap	nemu/src/isa/mips32/exec/all-instr.h	/^def_EHelper(nemu_trap);$/;"	v
nemu_trap	nemu/src/isa/riscv32/exec/all-instr.h	/^def_EHelper(nemu_trap);$/;"	v
nemu_trap	nemu/src/isa/riscv64/exec/all-instr.h	/^def_EHelper(nemu_trap);$/;"	v
nemu_trap	nemu/src/isa/x86/exec/all-instr.h	/^def_EHelper(nemu_trap);$/;"	v
nesincsize	fceux-am/src/sound.cpp	/^int32 nesincsize=0;$/;"	v
net_config	abstract-machine/am/src/x86/qemu/ioe.c	/^static void net_config(AM_NET_CONFIG_T *cfg) { cfg->present = false; }$/;"	f	file:
new_ppu_reset	fceux-am/src/ppu.cpp	/^static bool new_ppu_reset = false;$/;"	v	file:
new_space	nemu/src/device/io/map.c	/^uint8_t* new_space(int size) {$/;"	f
newppu	fceux-am/src/ppu.cpp	/^int newppu = 0;$/;"	v
newppu_get_dot	fceux-am/src/ppu.cpp	/^int newppu_get_dot() { return ppur.status.cycle; }$/;"	f
newppu_get_scanline	fceux-am/src/ppu.cpp	/^int newppu_get_scanline() { return ppur.status.sl; }$/;"	f
newppu_hacky_emergency_reset	fceux-am/src/ppu.cpp	/^void newppu_hacky_emergency_reset()$/;"	f
next	abstract-machine/am/src/native/vme.c	/^  struct PageMap *next;$/;"	m	struct:PageMap	typeref:struct:PageMap::PageMap	file:
next	abstract-machine/klib/src/stdlib.c	/^static unsigned long int next = 1;$/;"	v	file:
next	fceux-am/src/boards/emu2413.h	/^	int32 prev, next;$/;"	m	struct:__anon44
next	nemu/src/monitor/debug/watchpoint.h	/^  struct watchpoint *next;$/;"	m	struct:watchpoint	typeref:struct:watchpoint::watchpoint
no	fceux-am/src/ppu.cpp	/^	uint8 y, no, atr, x;$/;"	m	struct:__anon45	file:
noGui	fceux-am/src/drivers/sdl/sdl.cpp	/^int noGui = 1;$/;"	v
nop	nemu/src/isa/x86/exec/all-instr.h	/^def_EHelper(nop);$/;"	v
normalscanlines	fceux-am/src/fceu.cpp	/^int normalscanlines;$/;"	v
not_power2	fceux-am/src/ines.cpp	/^static int not_power2[] =$/;"	v	file:
nothing	fceux-am/src/cart.cpp	/^static uint8 nothing[8192];$/;"	v	file:
nr_map	nemu/src/device/io/mmio.c	/^static int nr_map = 0;$/;"	v	file:
nr_map	nemu/src/device/io/port-io.c	/^static int nr_map = 0;$/;"	v	file:
nr_reg	nemu/src/device/audio.c	/^  nr_reg$/;"	e	enum:__anon51	file:
nr_token	nemu/src/monitor/debug/expr.c	/^static int nr_token __attribute__((used))  = 0;$/;"	v	file:
nreg	fceux-am/src/sound.cpp	/^static uint16 nreg=0;$/;"	v	file:
nt	fceux-am/src/ppu.cpp	/^		uint8 nt, pecnt, at, pt[2], qtnt;$/;"	m	struct:BGData::Record	file:
nt1	fceux-am/src/boards/68.cpp	/^static uint8 kogame, prg_reg, nt1, nt2, mirr;$/;"	v	file:
nt2	fceux-am/src/boards/68.cpp	/^static uint8 kogame, prg_reg, nt1, nt2, mirr;$/;"	v	file:
num	fceux-am/src/ppu.cpp	/^	int32 num;$/;"	m	struct:SPRITE_READ	file:
numFilesInArchive	fceux-am/src/file.h	/^	int numFilesInArchive;$/;"	m	struct:ArchiveScanRecord
number	fceux-am/src/ines.h	/^	int32 number;$/;"	m	struct:__anon33
numsprites	fceux-am/src/ppu.cpp	/^static uint8 numsprites, SpriteBlurp;$/;"	v	file:
oemlength	abstract-machine/am/src/x86.h	/^  uint16_t oemlength;     \/\/ OEM table length$/;"	m	struct:__anon6
oemtable	abstract-machine/am/src/x86.h	/^  uint32_t oemtable;      \/\/ OEM table pointer$/;"	m	struct:__anon6
off_15_0	abstract-machine/am/src/x86.h	/^  uint32_t off_15_0  : 16; \/\/ Low 16 bits of offset in segment$/;"	m	struct:__anon2
off_15_0	abstract-machine/am/src/x86.h	/^  uint32_t off_15_0  : 16;$/;"	m	struct:__anon3
off_31_16	abstract-machine/am/src/x86.h	/^  uint32_t off_31_16 : 16; \/\/ High bits of offset in segment$/;"	m	struct:__anon2
off_31_16	abstract-machine/am/src/x86.h	/^  uint32_t off_31_16 : 16;$/;"	m	struct:__anon3
off_63_32	abstract-machine/am/src/x86.h	/^  uint32_t off_63_32 : 32;$/;"	m	struct:__anon3
old4016	fceux-am/src/boards/99.cpp	/^static writefunc old4016;$/;"	v	file:
oldkeys	fceux-am/src/boards/transformer.cpp	/^static unsigned int *TransformerKeys, oldkeys[256];$/;"	v	file:
opcode	nemu/include/cpu/decode.h	/^  uint32_t opcode;$/;"	m	struct:__anon67
opcode	nemu/include/isa/mips32.h	/^      uint32_t opcode :  6;$/;"	m	struct:__anon90::__anon91::__anon92
opcode	nemu/include/isa/mips32.h	/^      uint32_t opcode :  6;$/;"	m	struct:__anon90::__anon91::__anon93
opcode	nemu/include/isa/mips32.h	/^      uint32_t opcode : 6;$/;"	m	struct:__anon90::__anon91::__anon94
opcode	nemu/src/isa/x86/decode.c	/^    uint8_t opcode		:3;$/;"	m	struct:__anon55::__anon57	file:
opcode1_0	nemu/include/isa/riscv32.h	/^      uint32_t opcode1_0 : 2;$/;"	m	struct:__anon73::__anon74::__anon75
opcode1_0	nemu/include/isa/riscv32.h	/^      uint32_t opcode1_0 : 2;$/;"	m	struct:__anon73::__anon74::__anon76
opcode1_0	nemu/include/isa/riscv32.h	/^      uint32_t opcode1_0 : 2;$/;"	m	struct:__anon73::__anon74::__anon77
opcode1_0	nemu/include/isa/riscv64.h	/^      uint32_t opcode1_0 : 2;$/;"	m	struct:__anon83::__anon84::__anon85
opcode1_0	nemu/include/isa/riscv64.h	/^      uint32_t opcode1_0 : 2;$/;"	m	struct:__anon83::__anon84::__anon86
opcode1_0	nemu/include/isa/riscv64.h	/^      uint32_t opcode1_0 : 2;$/;"	m	struct:__anon83::__anon84::__anon87
opcode6_2	nemu/include/isa/riscv32.h	/^      uint32_t opcode6_2 : 5;$/;"	m	struct:__anon73::__anon74::__anon75
opcode6_2	nemu/include/isa/riscv32.h	/^      uint32_t opcode6_2 : 5;$/;"	m	struct:__anon73::__anon74::__anon76
opcode6_2	nemu/include/isa/riscv32.h	/^      uint32_t opcode6_2 : 5;$/;"	m	struct:__anon73::__anon74::__anon77
opcode6_2	nemu/include/isa/riscv64.h	/^      uint32_t opcode6_2 : 5;$/;"	m	struct:__anon83::__anon84::__anon85
opcode6_2	nemu/include/isa/riscv64.h	/^      uint32_t opcode6_2 : 5;$/;"	m	struct:__anon83::__anon84::__anon86
opcode6_2	nemu/include/isa/riscv64.h	/^      uint32_t opcode6_2 : 5;$/;"	m	struct:__anon83::__anon84::__anon87
open	fceux-am/src/emufile.cpp	/^void EMUFILE_FILE::open(const char* fname, const char* mode) {$/;"	f	class:EMUFILE_FILE
open	fceux-am/src/emufile.cpp	/^void EMUFILE_FILE::open(const char* fname, const char* mode)$/;"	f	class:EMUFILE_FILE
operand_imm	nemu/src/isa/x86/local-include/decode.h	/^static inline void operand_imm(DecodeExecState *s, Operand *op, bool load_val, word_t imm, int width) {$/;"	f
operand_reg	nemu/src/isa/x86/local-include/decode.h	/^static inline void operand_reg(DecodeExecState *s, Operand *op, bool load_val, int r, int width) {$/;"	f
operand_rm	nemu/src/isa/x86/local-include/decode.h	/^static inline void operand_rm(DecodeExecState *s, Operand *rm, bool load_rm_val, Operand *reg, bool load_reg_val) {$/;"	f
operand_write	nemu/src/isa/x86/local-include/decode.h	/^static inline void operand_write(DecodeExecState *s, Operand *op, rtlreg_t* src) {$/;"	f
operator !=	fceux-am/src/utils/valuearray.h	/^	bool operator!=(ValueArray<T,N> &other) { return !operator==(other); }$/;"	f	struct:ValueArray
operator ==	fceux-am/src/utils/valuearray.h	/^	bool operator==(ValueArray<T,N> &other)$/;"	f	struct:ValueArray
operator []	fceux-am/src/ppu.cpp	/^	uint8 operator[](int index) {$/;"	f	struct:BITREVLUT
operator []	fceux-am/src/utils/valuearray.h	/^	T &operator[](int index) { return data[index]; }$/;"	f	struct:ValueArray
opllstep	fceux-am/src/boards/emu2413.h	/^	uint32 opllstep;$/;"	m	struct:__anon44
oplltime	fceux-am/src/boards/emu2413.h	/^	uint32 oplltime;$/;"	m	struct:__anon44
opsize	fceux-am/src/x6502.cpp	/^const uint8 opsize[256] = {$/;"	v
optype	fceux-am/src/x6502.cpp	/^const uint8 optype[256] = {$/;"	v
opwrite	fceux-am/src/x6502.cpp	/^const uint8 opwrite[256] = {$/;"	v
othercpu_entry	abstract-machine/am/src/x86/qemu/mpe.c	/^static void othercpu_entry() {$/;"	f	file:
out	fceux-am/src/boards/emu2413.h	/^	int32 out;$/;"	m	struct:__anon44
out	nemu/tools/qemu-diff/src/protocol.c	/^  FILE *out;$/;"	m	struct:gdb_conn	file:
outb	abstract-machine/am/src/mips32.h	/^static inline void outb(uintptr_t addr, uint8_t  data) { *(volatile uint8_t  *)addr = data; }$/;"	f
outb	abstract-machine/am/src/riscv32.h	/^static inline void outb(uintptr_t addr, uint8_t  data) { *(volatile uint8_t  *)addr = data; }$/;"	f
outb	abstract-machine/am/src/riscv64.h	/^static inline void outb(uintptr_t addr, uint8_t  data) { *(volatile uint8_t  *)addr = data; }$/;"	f
outb	abstract-machine/am/src/x86.h	/^static inline void outb(int port, uint8_t data) {$/;"	f
outer	fceux-am/src/boards/28.cpp	/^uint8 outer;$/;"	v
outl	abstract-machine/am/src/mips32.h	/^static inline void outl(uintptr_t addr, uint32_t data) { *(volatile uint32_t *)addr = data; }$/;"	f
outl	abstract-machine/am/src/riscv32.h	/^static inline void outl(uintptr_t addr, uint32_t data) { *(volatile uint32_t *)addr = data; }$/;"	f
outl	abstract-machine/am/src/riscv64.h	/^static inline void outl(uintptr_t addr, uint32_t data) { *(volatile uint32_t *)addr = data; }$/;"	f
outl	abstract-machine/am/src/x86.h	/^static inline void outl(int port, uint32_t data) {$/;"	f
output	fceux-am/src/boards/emu2413.h	/^	int32 output[2];  \/* Output value of slot *\/$/;"	m	struct:__anon43
outw	abstract-machine/am/src/mips32.h	/^static inline void outw(uintptr_t addr, uint16_t data) { *(volatile uint16_t *)addr = data; }$/;"	f
outw	abstract-machine/am/src/riscv32.h	/^static inline void outw(uintptr_t addr, uint16_t data) { *(volatile uint16_t *)addr = data; }$/;"	f
outw	abstract-machine/am/src/riscv64.h	/^static inline void outw(uintptr_t addr, uint16_t data) { *(volatile uint16_t *)addr = data; }$/;"	f
outw	abstract-machine/am/src/x86.h	/^static inline void outw(int port, uint16_t data) {$/;"	f
overclocking	fceux-am/src/fceu.cpp	/^bool overclocking = 0;$/;"	v
p	abstract-machine/am/src/x86.h	/^  uint32_t p          :  1; \/\/ Present$/;"	m	struct:__anon1
p	abstract-machine/am/src/x86.h	/^  uint32_t p         :  1; \/\/ Present$/;"	m	struct:__anon2
p	abstract-machine/am/src/x86.h	/^  uint32_t p         :  1;$/;"	m	struct:__anon3
p_space	nemu/src/device/io/map.c	/^static uint8_t *p_space = io_space;$/;"	v	file:
pa	abstract-machine/am/src/native/vme.c	/^  void *pa;$/;"	m	struct:PageMap	file:
pad	abstract-machine/am/src/x86/qemu/ioe.c	/^    uint32_t reg, pad[3], data;$/;"	m	struct:IOAPIC	file:
pad	nemu/include/isa/mips32.h	/^  rtlreg_t pad[5];$/;"	m	struct:__anon88
padding	abstract-machine/am/src/x86.h	/^  uint32_t padding[19];$/;"	m	struct:__anon5
padding	abstract-machine/am/src/x86.h	/^  uint32_t padding[23];$/;"	m	struct:__anon4
paddr_read	nemu/src/memory/paddr.c	/^inline word_t paddr_read(paddr_t addr, int len) {$/;"	f
paddr_t	nemu/include/common.h	/^typedef uint32_t paddr_t;$/;"	t
paddr_t	nemu/tools/qemu-diff/include/common.h	/^typedef uint32_t paddr_t;$/;"	t
paddr_write	nemu/src/memory/paddr.c	/^inline void paddr_write(paddr_t addr, word_t data, int len) {$/;"	f
pal	fceux-am/src/palette.h	/^} pal;$/;"	t	typeref:struct:__anon31
pal_emulation	fceux-am/src/drivers/sdl/sdl.cpp	/^int pal_emulation;$/;"	v
paldeemphswap	fceux-am/src/drivers/common/vidblit.cpp	/^bool   paldeemphswap   = 0;$/;"	v
palette	fceux-am/src/palettes/palettes.h	/^pal palette[512] = {$/;"	v
palette_unvarying	fceux-am/src/palettes/palettes.h	/^pal palette_unvarying[] = {$/;"	v
palettetranslate	fceux-am/src/drivers/common/vidblit.cpp	/^static uint32 *palettetranslate=0;$/;"	v	file:
palo	fceux-am/src/palette.cpp	/^pal *palo;$/;"	v
panic	abstract-machine/klib/include/klib-macros.h	37;"	d
panic	nemu/include/debug.h	27;"	d
panic_on	abstract-machine/klib/include/klib-macros.h	30;"	d
par	fceux-am/src/ppu.cpp	/^	uint32 par;	\/\/8 (sort of a hack, just stored in here, but not managed by this system)$/;"	m	struct:PPUREGS	file:
params	fceux-am/src/ines.cpp	/^	const char* params;$/;"	m	struct:CHINF	file:
params	fceux-am/src/ines.h	/^	const char* params;$/;"	m	struct:TMasterRomInfo
parse_args	nemu/src/monitor/monitor.c	/^static inline void parse_args(int argc, char *argv[]) {$/;"	f	file:
patch	fceux-am/src/boards/emu2413.h	/^	OPLL_PATCH patch;$/;"	m	struct:__anon43
patch_number	fceux-am/src/boards/emu2413.h	/^	int32 patch_number[6];$/;"	m	struct:__anon44
patching	nemu/tools/kvm-diff/src/kvm.c	/^static inline int patching() {$/;"	f	file:
patching_after	nemu/tools/kvm-diff/src/kvm.c	/^static inline void patching_after(uint64_t last_pc) {$/;"	f	file:
pause	abstract-machine/am/src/x86.h	/^static inline void pause() {$/;"	f
pc	nemu/include/isa/mips32.h	/^  vaddr_t pc;$/;"	m	struct:__anon88
pc	nemu/include/isa/riscv32.h	/^  vaddr_t pc;$/;"	m	struct:__anon71
pc	nemu/include/isa/riscv64.h	/^  vaddr_t pc;$/;"	m	struct:__anon81
pc	nemu/include/isa/x86.h	/^  vaddr_t pc;$/;"	m	struct:__anon78
pc	nemu/tools/qemu-diff/include/isa/mips32.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anon103
pc	nemu/tools/qemu-diff/include/isa/riscv32.h	/^    uint32_t pc;$/;"	m	struct:isa_gdb_regs::__anon97
pc	nemu/tools/qemu-diff/include/isa/riscv64.h	/^    uint64_t pc;$/;"	m	struct:isa_gdb_regs::__anon101
pcm_addr	fceux-am/src/boards/onebus.cpp	/^static int16 pcm_addr, pcm_size, pcm_latch, pcm_clock = 0xE1;$/;"	v	file:
pcm_clock	fceux-am/src/boards/onebus.cpp	/^static int16 pcm_addr, pcm_size, pcm_latch, pcm_clock = 0xE1;$/;"	v	file:
pcm_enable	fceux-am/src/boards/178.cpp	/^static uint8 pcm_enable = 0;$/;"	v	file:
pcm_enable	fceux-am/src/boards/onebus.cpp	/^static uint8 pcm_enable = 0, pcm_irq = 0;$/;"	v	file:
pcm_irq	fceux-am/src/boards/onebus.cpp	/^static uint8 pcm_enable = 0, pcm_irq = 0;$/;"	v	file:
pcm_latch	fceux-am/src/boards/onebus.cpp	/^static int16 pcm_addr, pcm_size, pcm_latch, pcm_clock = 0xE1;$/;"	v	file:
pcm_size	fceux-am/src/boards/onebus.cpp	/^static int16 pcm_addr, pcm_size, pcm_latch, pcm_clock = 0xE1;$/;"	v	file:
pcmwrite	fceux-am/src/boards/164.cpp	/^static writefunc pcmwrite;$/;"	v	file:
pcmwrite	fceux-am/src/boards/cityfighter.cpp	/^static writefunc pcmwrite;$/;"	v	file:
pdir	abstract-machine/am/include/arch/mips32-nemu.h	/^  void *pdir;$/;"	m	struct:Context
pdir	abstract-machine/am/include/arch/riscv32-nemu.h	/^  void *pdir;$/;"	m	struct:Context
pdir	abstract-machine/am/include/arch/riscv64-nemu.h	/^  void *pdir;$/;"	m	struct:Context
pecnt	fceux-am/src/ppu.cpp	/^		uint8 nt, pecnt, at, pt[2], qtnt;$/;"	m	struct:BGData::Record	file:
pgalloc	abstract-machine/am/src/native/vme.c	/^static void* (*pgalloc)(int) = NULL;$/;"	v	file:
pgalloc	abstract-machine/am/src/x86/qemu/vme.c	/^static void *(*pgalloc)(int size);$/;"	v	file:
pgalloc_usr	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^static void* (*pgalloc_usr)(int) = NULL;$/;"	v	file:
pgalloc_usr	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^static void* (*pgalloc_usr)(int) = NULL;$/;"	v	file:
pgalloc_usr	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^static void* (*pgalloc_usr)(int) = NULL;$/;"	v	file:
pgalloc_usr	abstract-machine/am/src/nemu/isa/x86/vme.c	/^static void* (*pgalloc_usr)(int) = NULL;$/;"	v	file:
pgallocz	abstract-machine/am/src/x86/qemu/vme.c	/^static void *pgallocz() {$/;"	f	file:
pgfree	abstract-machine/am/src/native/vme.c	/^static void (*pgfree)(void *) = NULL;$/;"	v	file:
pgfree	abstract-machine/am/src/x86/qemu/vme.c	/^static void (*pgfree)(void *);$/;"	v	file:
pgfree_usr	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^static void (*pgfree_usr)(void*) = NULL;$/;"	v	file:
pgfree_usr	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^static void (*pgfree_usr)(void*) = NULL;$/;"	v	file:
pgfree_usr	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^static void (*pgfree_usr)(void*) = NULL;$/;"	v	file:
pgfree_usr	abstract-machine/am/src/nemu/isa/x86/vme.c	/^static void (*pgfree_usr)(void*) = NULL;$/;"	v	file:
pgout	fceux-am/src/boards/emu2413.h	/^	uint32 pgout;     \/* output *\/$/;"	m	struct:__anon43
pgsize	abstract-machine/am/include/am.h	/^  int pgsize;$/;"	m	struct:__anon13
pgsize	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  int ptlevels, pgsize;$/;"	m	struct:mmu_config
pgtables	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  } pgtables[];$/;"	m	struct:mmu_config	typeref:struct:mmu_config::ptinfo
phase	fceux-am/src/boards/emu2413.h	/^	uint32 phase;     \/* Phase *\/$/;"	m	struct:__anon43
pio_read_b	nemu/src/device/io/port-io.c	/^uint32_t pio_read_b(ioaddr_t addr) { return pio_read_common(addr, 1); }$/;"	f
pio_read_common	nemu/src/device/io/port-io.c	/^uint32_t pio_read_common(ioaddr_t addr, int len) {$/;"	f
pio_read_l	nemu/src/device/io/port-io.c	/^uint32_t pio_read_l(ioaddr_t addr) { return pio_read_common(addr, 4); }$/;"	f
pio_read_w	nemu/src/device/io/port-io.c	/^uint32_t pio_read_w(ioaddr_t addr) { return pio_read_common(addr, 2); }$/;"	f
pio_write_b	nemu/src/device/io/port-io.c	/^void pio_write_b(ioaddr_t addr, uint32_t data) { pio_write_common(addr, data, 1); }$/;"	f
pio_write_common	nemu/src/device/io/port-io.c	/^void pio_write_common(ioaddr_t addr, uint32_t data, int len) {$/;"	f
pio_write_l	nemu/src/device/io/port-io.c	/^void pio_write_l(ioaddr_t addr, uint32_t data) { pio_write_common(addr, data, 4); }$/;"	f
pio_write_w	nemu/src/device/io/port-io.c	/^void pio_write_w(ioaddr_t addr, uint32_t data) { pio_write_common(addr, data, 2); }$/;"	f
pixel	abstract-machine/am/src/x86/qemu/ioe.c	/^struct pixel {$/;"	s	file:
pixel_data	fceux-am/src/drivers/sdl/sdl-icon.h	/^  uint8 	 pixel_data[32 * 32 * 3 + 1];$/;"	m	struct:__anon49
pixels	abstract-machine/am/include/amdev.h	/^  gpuptr_t pixels;$/;"	m	struct:gpu_texturedesc
pm_dphase	fceux-am/src/boards/emu2413.c	/^static uint32 pm_dphase;$/;"	v	file:
pm_phase	fceux-am/src/boards/emu2413.h	/^	uint32 pm_phase;$/;"	m	struct:__anon44
pmem	abstract-machine/am/src/native/platform.c	/^static void *pmem = NULL;$/;"	v	file:
pmem_fd	abstract-machine/am/src/native/platform.c	/^static int pmem_fd = 0;$/;"	v	file:
pmem_read	nemu/src/memory/paddr.c	/^static inline word_t pmem_read(paddr_t addr, int len) {$/;"	f	file:
pmem_write	nemu/src/memory/paddr.c	/^static inline void pmem_write(paddr_t addr, word_t data, int len) {$/;"	f	file:
pmtable	fceux-am/src/boards/emu2413.c	/^static int32 pmtable[PM_PG_WIDTH];$/;"	v	file:
portFC	fceux-am/src/input.cpp	/^FCPORT portFC;$/;"	v
postrenderscanlines	fceux-am/src/fceu.cpp	/^int postrenderscanlines = 0;$/;"	v
ppu201x	fceux-am/src/boards/onebus.cpp	/^static uint8 cpu410x[16], ppu201x[16], apu40xx[64];$/;"	v	file:
ppu_getScroll	fceux-am/src/ppu.cpp	/^void ppu_getScroll(int &xpos, int &ypos) {$/;"	f
ppudead	fceux-am/src/ppu.cpp	/^static int ppudead = 1;$/;"	v	file:
ppulatch	fceux-am/src/boards/96.cpp	/^static uint8 reg, ppulatch;$/;"	v	file:
ppulut1	fceux-am/src/ppu.cpp	/^static uint32 ppulut1[256];$/;"	v	file:
ppulut2	fceux-am/src/ppu.cpp	/^static uint32 ppulut2[256];$/;"	v	file:
ppulut3	fceux-am/src/ppu.cpp	/^static uint32 ppulut3[128];$/;"	v	file:
ppuphase	fceux-am/src/ppu.cpp	/^PPUPHASE ppuphase;$/;"	v
ppur	fceux-am/src/ppu.cpp	/^} ppur;$/;"	v	typeref:struct:PPUREGS
pputime	fceux-am/src/ppu.cpp	/^int pputime = 0;$/;"	v
preexec	fceux-am/src/x6502struct.h	/^  int preexec;      \/* Pre-exec'ing for debug breakpoints. *\/$/;"	m	struct:__X6502
preg	fceux-am/src/boards/18.cpp	/^static uint8 preg[4], creg[8];$/;"	v	file:
preg	fceux-am/src/boards/232.cpp	/^static uint8 bank, preg;$/;"	v	file:
preg	fceux-am/src/boards/234.cpp	/^static uint8 bank, preg;$/;"	v	file:
preg	fceux-am/src/boards/244.cpp	/^static uint8 preg, creg;$/;"	v	file:
preg	fceux-am/src/boards/252.cpp	/^static uint8 creg[8], preg[2];$/;"	v	file:
preg	fceux-am/src/boards/32.cpp	/^static uint8 preg[2], creg[8], mirr;$/;"	v	file:
preg	fceux-am/src/boards/42.cpp	/^static uint8 preg, creg, mirr;$/;"	v	file:
preg	fceux-am/src/boards/65.cpp	/^static uint8 preg[3], creg[8], mirr;$/;"	v	file:
preg	fceux-am/src/boards/67.cpp	/^static uint8 preg, creg[4], mirr, suntoggle = 0;$/;"	v	file:
preg	fceux-am/src/boards/69.cpp	/^static uint8 cmdreg, preg[4], creg[8], mirr;$/;"	v	file:
preg	fceux-am/src/boards/71.cpp	/^static uint8 preg, mirr;$/;"	v	file:
preg	fceux-am/src/boards/72.cpp	/^static uint8 preg, creg;$/;"	v	file:
preg	fceux-am/src/boards/79.cpp	/^static uint8 creg, preg;$/;"	v	file:
preg	fceux-am/src/boards/80.cpp	/^static uint8 preg[3], creg[6], isExMirr;$/;"	v	file:
preg	fceux-am/src/boards/ffe.cpp	/^static uint8 preg[4], creg[8], latch, ffemode;$/;"	v	file:
preg	fceux-am/src/boards/ks7010.cpp	/^static uint8 preg[4], creg, mirr;$/;"	v	file:
preg	fceux-am/src/boards/ks7016.cpp	/^static uint8 preg;$/;"	v	file:
preg	fceux-am/src/boards/mmc2and4.cpp	/^static uint8 creg[4], latch0, latch1, preg, mirr;$/;"	v	file:
preg	fceux-am/src/boards/sb-2000.cpp	/^static uint8 preg[8];$/;"	v	file:
preg	fceux-am/src/boards/vrc1.cpp	/^static uint8 preg[3], creg[2], mode;$/;"	v	file:
preg	fceux-am/src/boards/vrc3.cpp	/^static uint8 preg;$/;"	v	file:
preg	fceux-am/src/boards/vrc7.cpp	/^static uint8 vrc7idx, preg[3], creg[8], mirr;$/;"	v	file:
preg	nemu/include/cpu/decode.h	/^  rtlreg_t *preg;$/;"	m	struct:__anon65
pregs	fceux-am/src/boards/91.cpp	/^static uint8 cregs[4], pregs[2];$/;"	v	file:
prev	fceux-am/src/boards/emu2413.h	/^	int32 prev, next;$/;"	m	struct:__anon44
prg	fceux-am/src/boards/09-034a.cpp	/^static uint8 prg;$/;"	v	file:
prg	fceux-am/src/boards/156.cpp	/^static uint8 chrlo[8], chrhi[8], prg, mirr, mirrisused = 0;$/;"	v	file:
prg	fceux-am/src/boards/176.cpp	/^static uint8 prg[4], chr, sbw, we_sram;$/;"	v	file:
prg	fceux-am/src/boards/183.cpp	/^static uint8 prg[4], chr[8], mirr;$/;"	v	file:
prg	fceux-am/src/boards/225.cpp	/^static uint8 prot[4], prg, mode, chr, mirr;$/;"	v	file:
prg	fceux-am/src/boards/253.cpp	/^static uint8 chrlo[8], chrhi[8], prg[2], mirr, vlock;$/;"	v	file:
prg	fceux-am/src/boards/28.cpp	/^uint8 prg;$/;"	v
prg	fceux-am/src/boards/dance2000.cpp	/^static uint8 prg, mode;$/;"	v	file:
prg	fceux-am/src/boards/vrc6.cpp	/^static uint8 prg[2], chr[8], mirr;$/;"	v	file:
prg	fceux-am/src/boards/vrc7p.cpp	/^static uint8 prg[3], chr[8], mirr;$/;"	v	file:
prg0	fceux-am/src/boards/sl1632.cpp	/^static uint8 chrcmd[8], prg0, prg1, bbrk, mirr, swap;$/;"	v	file:
prg0	fceux-am/src/boards/tf-1201.cpp	/^static uint8 prg0, prg1, mirr, swap;$/;"	v	file:
prg1	fceux-am/src/boards/sl1632.cpp	/^static uint8 chrcmd[8], prg0, prg1, bbrk, mirr, swap;$/;"	v	file:
prg1	fceux-am/src/boards/tf-1201.cpp	/^static uint8 prg0, prg1, mirr, swap;$/;"	v	file:
prg_bank	fceux-am/src/boards/bmc70in1.cpp	/^static uint8 prg_bank;$/;"	v	file:
prg_bonus	fceux-am/src/boards/fk23c.cpp	/^static int prg_bonus;$/;"	v	file:
prg_mask	fceux-am/src/boards/fk23c.cpp	/^static int prg_mask;$/;"	v	file:
prg_mask_16k	fceux-am/src/boards/28.cpp	/^static int prg_mask_16k;$/;"	v	file:
prg_mode	fceux-am/src/boards/cityfighter.cpp	/^static uint8 prg_reg, prg_mode, mirr;$/;"	v	file:
prg_perm	fceux-am/src/boards/244.cpp	/^static uint8 prg_perm[4][4] = {$/;"	v	file:
prg_reg	fceux-am/src/boards/222.cpp	/^static uint8 prg_reg[2];$/;"	v	file:
prg_reg	fceux-am/src/boards/57.cpp	/^static uint8 prg_reg;$/;"	v	file:
prg_reg	fceux-am/src/boards/68.cpp	/^static uint8 kogame, prg_reg, nt1, nt2, mirr;$/;"	v	file:
prg_reg	fceux-am/src/boards/ax5705.cpp	/^static uint8 prg_reg[2];$/;"	v	file:
prg_reg	fceux-am/src/boards/bonza.cpp	/^static uint8 prg_reg;$/;"	v	file:
prg_reg	fceux-am/src/boards/cityfighter.cpp	/^static uint8 prg_reg, prg_mode, mirr;$/;"	v	file:
prgb	fceux-am/src/boards/90.cpp	/^static uint8 prgb[4];$/;"	v	file:
prgb	fceux-am/src/boards/bmc13in1jy110.cpp	/^static uint8 prgb[4];$/;"	v	file:
prgchr	fceux-am/src/boards/12in1.cpp	/^static uint8 prgchr[2], ctrl;$/;"	v	file:
prgr	fceux-am/src/boards/190.cpp	/^static uint8 prgr, chrr[4];$/;"	v	file:
prgreg	fceux-am/src/boards/117.cpp	/^static uint8 prgreg[4], chrreg[8], mirror;$/;"	v	file:
prgreg	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 prgreg[2], chrreg[8];$/;"	v	file:
print_Dop	nemu/include/cpu/decode.h	36;"	d
print_Dop	nemu/include/cpu/decode.h	38;"	d
print_asm	nemu/include/cpu/exec.h	42;"	d
print_asm	nemu/include/cpu/exec.h	48;"	d
print_asm_template1	nemu/include/cpu/exec.h	55;"	d
print_asm_template2	nemu/include/cpu/exec.h	58;"	d
print_asm_template3	nemu/include/cpu/exec.h	61;"	d
printf	abstract-machine/klib/src/stdio.c	/^int printf(const char *fmt, ...) {$/;"	f
product	abstract-machine/am/src/x86.h	/^  uint8_t  product[20];   \/\/ product id$/;"	m	struct:__anon6
prot	abstract-machine/am/src/native/vme.c	/^  int prot;$/;"	m	struct:PageMap	file:
prot	fceux-am/src/boards/225.cpp	/^static uint8 prot[4], prg, mode, chr, mirr;$/;"	v	file:
prot_array	fceux-am/src/boards/121.cpp	/^static uint8 prot_array[16] = { 0x83, 0x83, 0x42, 0x00 };$/;"	v	file:
prot_data	fceux-am/src/boards/187.cpp	/^static uint8 prot_data[4] = { 0x83, 0x83, 0x42, 0x00 };$/;"	v	file:
protect	abstract-machine/am/src/native/vme.c	/^void protect(AddrSpace *as) {$/;"	f
protect	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^void protect(AddrSpace *as) {$/;"	f
protect	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^void protect(AddrSpace *as) {$/;"	f
protect	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^void protect(AddrSpace *as) {$/;"	f
protect	abstract-machine/am/src/nemu/isa/x86/vme.c	/^void protect(AddrSpace *as) {$/;"	f
protect	abstract-machine/am/src/x86/qemu/vme.c	/^void protect(AddrSpace *as) {$/;"	f
psfun	fceux-am/src/boards/mmc5.cpp	/^static void (*psfun)(void);$/;"	v	file:
pt	fceux-am/src/ppu.cpp	/^		uint8 nt, pecnt, at, pt[2], qtnt;$/;"	m	struct:BGData::Record	file:
ptinfo	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  struct ptinfo {$/;"	s	struct:mmu_config
ptlevels	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  int ptlevels, pgsize;$/;"	m	struct:mmu_config
ptr	abstract-machine/am/include/am.h	/^  void *ptr;$/;"	m	struct:__anon13
ptr	fceux-am/src/input.h	/^	void* ptr;$/;"	m	struct:FCPORT
ptr	fceux-am/src/input.h	/^	void* ptr;$/;"	m	struct:JOYPORT
ptwalk	abstract-machine/am/src/x86/qemu/vme.c	/^static uintptr_t *ptwalk(AddrSpace *as, uintptr_t addr, int flags) {$/;"	f	file:
putch	abstract-machine/am/src/native/trm.c	/^void putch(char ch) {$/;"	f
putch	abstract-machine/am/src/nemu/trm.c	/^void putch(char ch) {$/;"	f
putch	abstract-machine/am/src/x86/qemu/trm.c	/^void putch(char ch) {$/;"	f
putstr	abstract-machine/klib/include/klib-macros.h	15;"	d
pwrap	fceux-am/src/boards/mmc3.cpp	/^void (*pwrap)(uint32 A, uint8 V);$/;"	v
qtaintramreg	fceux-am/src/ppu.cpp	/^uint8 qtaintramreg;$/;"	v
qtnt	fceux-am/src/ppu.cpp	/^		uint8 nt, pecnt, at, pt[2], qtnt;$/;"	m	struct:BGData::Record	file:
quality	fceux-am/src/boards/emu2413.h	/^	uint32 quality;$/;"	m	struct:__anon44
query_intr	nemu/src/isa/mips32/intr.c	/^void query_intr(DecodeExecState *s) {$/;"	f
query_intr	nemu/src/isa/riscv32/intr.c	/^void query_intr(DecodeExecState *s) {$/;"	f
query_intr	nemu/src/isa/riscv64/intr.c	/^void query_intr(DecodeExecState *s) {$/;"	f
query_intr	nemu/src/isa/x86/intr.c	/^void query_intr(DecodeExecState *s) {$/;"	f
r	abstract-machine/am/src/x86/qemu/ioe.c	/^  uint8_t b, g, r;$/;"	m	struct:pixel	file:
r	fceux-am/src/drivers/sdl/sdl-video.cpp	/^  uint8 r, g, b, unused;$/;"	m	struct:__anon47	file:
r	fceux-am/src/palette.h	/^	uint8 r,g,b;$/;"	m	struct:__anon31
r	nemu/include/isa/mips32.h	/^    } r;$/;"	m	union:__anon90::__anon91	typeref:struct:__anon90::__anon91::__anon94
r10	abstract-machine/am/include/arch/x86_64-qemu.h	/^           r8, r9, r10, r11,$/;"	m	struct:Context
r11	abstract-machine/am/include/arch/x86_64-qemu.h	/^           r8, r9, r10, r11,$/;"	m	struct:Context
r12	abstract-machine/am/include/arch/x86_64-qemu.h	/^           r12, r13, r14, r15,$/;"	m	struct:Context
r13	abstract-machine/am/include/arch/x86_64-qemu.h	/^           r12, r13, r14, r15,$/;"	m	struct:Context
r14	abstract-machine/am/include/arch/x86_64-qemu.h	/^           r12, r13, r14, r15,$/;"	m	struct:Context
r15	abstract-machine/am/include/arch/x86_64-qemu.h	/^           r12, r13, r14, r15,$/;"	m	struct:Context
r8	abstract-machine/am/include/arch/x86_64-qemu.h	/^           r8, r9, r10, r11,$/;"	m	struct:Context
r9	abstract-machine/am/include/arch/x86_64-qemu.h	/^           r8, r9, r10, r11,$/;"	m	struct:Context
raise_intr	nemu/src/isa/mips32/intr.c	/^void raise_intr(DecodeExecState *s, word_t NO, vaddr_t ret_addr) {$/;"	f
raise_intr	nemu/src/isa/riscv32/intr.c	/^void raise_intr(DecodeExecState *s, word_t NO, vaddr_t epc) {$/;"	f
raise_intr	nemu/src/isa/riscv64/intr.c	/^void raise_intr(DecodeExecState *s, word_t NO, vaddr_t epc) {$/;"	f
raise_intr	nemu/src/isa/x86/intr.c	/^void raise_intr(DecodeExecState *s, word_t NO, vaddr_t ret_addr) {$/;"	f
rand	abstract-machine/klib/src/stdlib.c	/^int rand(void) {$/;"	f
rate	fceux-am/src/boards/emu2413.c	/^static uint32 rate = 3354932;$/;"	v	file:
rate_adjust	fceux-am/src/boards/emu2413.c	152;"	d	file:
raw	fceux-am/src/boards/mmc5.cpp	/^	uint8 raw;$/;"	m	struct:__anon39	file:
rawcontrol	fceux-am/src/boards/mmc5.cpp	/^	uint8 rawcontrol;$/;"	m	struct:__anon39	file:
rax	abstract-machine/am/include/arch/x86_64-qemu.h	/^  uint64_t rax, rbx, rcx, rdx,$/;"	m	struct:Context
rbp	abstract-machine/am/include/arch/x86_64-qemu.h	/^           rbp, rsi, rdi,$/;"	m	struct:Context
rbx	abstract-machine/am/include/arch/x86_64-qemu.h	/^  uint64_t rax, rbx, rcx, rdx,$/;"	m	struct:Context
rcx	abstract-machine/am/include/arch/x86_64-qemu.h	/^  uint64_t rax, rbx, rcx, rdx,$/;"	m	struct:Context
rd	nemu/include/isa/mips32.h	/^      uint32_t rd     : 5;$/;"	m	struct:__anon90::__anon91::__anon94
rd	nemu/include/isa/riscv32.h	/^      uint32_t rd        : 5;$/;"	m	struct:__anon73::__anon74::__anon75
rd	nemu/include/isa/riscv32.h	/^      uint32_t rd        : 5;$/;"	m	struct:__anon73::__anon74::__anon77
rd	nemu/include/isa/riscv64.h	/^      uint32_t rd        : 5;$/;"	m	struct:__anon83::__anon84::__anon85
rd	nemu/include/isa/riscv64.h	/^      uint32_t rd        : 5;$/;"	m	struct:__anon83::__anon84::__anon87
rdi	abstract-machine/am/include/arch/x86_64-qemu.h	/^           rbp, rsi, rdi,$/;"	m	struct:Context
rdtsc	abstract-machine/am/src/x86.h	/^static inline uint64_t rdtsc() {$/;"	f
rdx	abstract-machine/am/include/arch/x86_64-qemu.h	/^  uint64_t rax, rbx, rcx, rdx,$/;"	m	struct:Context
re	nemu/src/monitor/debug/expr.c	/^static regex_t re[NR_REGEX] = {};$/;"	v	file:
read_ModR_M	nemu/src/isa/x86/decode.c	/^void read_ModR_M(DecodeExecState *s, Operand *rm, bool load_rm_val, Operand *reg, bool load_reg_val) {$/;"	f
read_disk	abstract-machine/am/src/x86/qemu/boot/main.c	/^static inline void read_disk(void *buf, int sect) {$/;"	f	file:
read_rtc	abstract-machine/am/src/x86/qemu/ioe.c	/^static inline int read_rtc(int reg) {$/;"	f	file:
read_rtc_async	abstract-machine/am/src/x86/qemu/ioe.c	/^static void read_rtc_async(AM_TIMER_RTC_T *rtc) {$/;"	f	file:
readfunc	fceux-am/src/types.h	/^typedef uint8 (*readfunc)(uint32 A);$/;"	t
real	abstract-machine/klib/src/int64.c	/^typedef struct { double real, imaginary; } Dcomplex;$/;"	m	struct:__anon29	file:
real	abstract-machine/klib/src/int64.c	/^typedef struct { float real, imaginary; } Fcomplex;$/;"	m	struct:__anon28	file:
real	abstract-machine/klib/src/int64.c	/^typedef struct { long double real, imaginary; } Lcomplex;$/;"	m	struct:__anon30	file:
realstep	fceux-am/src/boards/emu2413.h	/^	uint32 realstep;$/;"	m	struct:__anon44
recv_packet	nemu/tools/qemu-diff/src/protocol.c	/^static uint8_t* recv_packet(FILE *in, size_t *ret_size, bool* ret_sum_ok) {$/;"	f	file:
redzone	abstract-machine/am/include/arch/native.h	/^  uint8_t redzone[128];$/;"	m	struct:Context
ref	abstract-machine/am/include/am.h	/^  uintptr_t cause, ref;$/;"	m	struct:__anon11
ref_difftest_exec	nemu/src/monitor/difftest/dut.c	/^void (*ref_difftest_exec)(uint64_t n) = NULL;$/;"	v
ref_difftest_getregs	nemu/src/monitor/difftest/dut.c	/^void (*ref_difftest_getregs)(void *c) = NULL;$/;"	v
ref_difftest_memcpy_from_dut	nemu/src/monitor/difftest/dut.c	/^void (*ref_difftest_memcpy_from_dut)(paddr_t dest, void *src, size_t n) = NULL;$/;"	v
ref_difftest_setregs	nemu/src/monitor/difftest/dut.c	/^void (*ref_difftest_setregs)(const void *c) = NULL;$/;"	v
reg	abstract-machine/am/src/x86/qemu/ioe.c	/^    uint32_t reg, pad[3], data;$/;"	m	struct:IOAPIC	file:
reg	fceux-am/src/boards/01-222.cpp	/^static uint8 reg[4], cmd, is172, is173;$/;"	v	file:
reg	fceux-am/src/boards/106.cpp	/^static uint8 reg[16], IRQa;$/;"	v	file:
reg	fceux-am/src/boards/108.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/112.cpp	/^static uint8 reg[8];$/;"	v	file:
reg	fceux-am/src/boards/120.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/164.cpp	/^static uint8 reg[8];$/;"	v	file:
reg	fceux-am/src/boards/168.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/170.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/175.cpp	/^static uint8 reg, delay, mirr;$/;"	v	file:
reg	fceux-am/src/boards/177.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/178.cpp	/^static uint8 reg[4];$/;"	v	file:
reg	fceux-am/src/boards/193.cpp	/^static uint8 reg[8];$/;"	v	file:
reg	fceux-am/src/boards/28.cpp	/^uint8 reg;$/;"	v
reg	fceux-am/src/boards/3d-block.cpp	/^static uint8 reg[4], IRQa;$/;"	v	file:
reg	fceux-am/src/boards/40.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/43.cpp	/^static uint8 reg, swap;$/;"	v	file:
reg	fceux-am/src/boards/50.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/88.cpp	/^static uint8 reg[8];$/;"	v	file:
reg	fceux-am/src/boards/96.cpp	/^static uint8 reg, ppulatch;$/;"	v	file:
reg	fceux-am/src/boards/ac-08.cpp	/^static uint8 reg, mirr;$/;"	v	file:
reg	fceux-am/src/boards/bandai.cpp	/^static uint8 reg[16], is153, x24c02;$/;"	v	file:
reg	fceux-am/src/boards/bb.cpp	/^static uint8 reg, chr;$/;"	v	file:
reg	fceux-am/src/boards/cheapocabra.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/edu2000.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/ghostbusters63in1.cpp	/^static uint8 reg[2], bank;$/;"	v	file:
reg	fceux-am/src/boards/gs-2004.cpp	/^static uint8 reg, mirr;$/;"	v	file:
reg	fceux-am/src/boards/gs-2013.cpp	/^static uint8 reg, mirr;$/;"	v	file:
reg	fceux-am/src/boards/ks7012.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/ks7013.cpp	/^static uint8 reg, mirr;$/;"	v	file:
reg	fceux-am/src/boards/ks7017.cpp	/^static uint8 reg, mirr;$/;"	v	file:
reg	fceux-am/src/boards/ks7031.cpp	/^static uint8 reg[4];$/;"	v	file:
reg	fceux-am/src/boards/ks7032.cpp	/^static uint8 reg[8], cmd, IRQa = 0, isirqused = 0;$/;"	v	file:
reg	fceux-am/src/boards/ks7037.cpp	/^static uint8 reg[8], cmd;$/;"	v	file:
reg	fceux-am/src/boards/ks7057.cpp	/^static uint8 reg[8], mirror;$/;"	v	file:
reg	fceux-am/src/boards/lh32.cpp	/^static uint8 reg;$/;"	v	file:
reg	fceux-am/src/boards/lh53.cpp	/^static uint8 reg, IRQa;$/;"	v	file:
reg	fceux-am/src/boards/pec-586.cpp	/^static uint8 reg[8];$/;"	v	file:
reg	fceux-am/src/boards/sc-127.cpp	/^static uint8 reg[8], chr[8];$/;"	v	file:
reg	fceux-am/src/boards/yoko.cpp	/^static uint8 mode, bank, reg[11], low[4], dip, IRQa;$/;"	v	file:
reg	nemu/include/cpu/decode.h	/^    uint32_t reg;$/;"	m	union:__anon65::__anon66
reg	nemu/src/isa/x86/decode.c	/^    uint8_t reg		:3;$/;"	m	struct:__anon55::__anon56	file:
reg0	fceux-am/src/boards/103.cpp	/^static uint8 reg0, reg1, reg2;$/;"	v	file:
reg0	fceux-am/src/boards/46.cpp	/^static uint8 reg0, reg1;$/;"	v	file:
reg0	fceux-am/src/boards/ks7030.cpp	/^static uint8 reg0, reg1;$/;"	v	file:
reg1	fceux-am/src/boards/103.cpp	/^static uint8 reg0, reg1, reg2;$/;"	v	file:
reg1	fceux-am/src/boards/46.cpp	/^static uint8 reg0, reg1;$/;"	v	file:
reg1	fceux-am/src/boards/ks7030.cpp	/^static uint8 reg0, reg1;$/;"	v	file:
reg1mask	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 is22, reg1mask, reg2mask;$/;"	v	file:
reg2	fceux-am/src/boards/103.cpp	/^static uint8 reg0, reg1, reg2;$/;"	v	file:
reg2mask	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 is22, reg1mask, reg2mask;$/;"	v	file:
reg_b	nemu/src/isa/x86/local-include/reg.h	17;"	d
reg_channels	nemu/src/device/audio.c	/^  reg_channels,$/;"	e	enum:__anon51	file:
reg_chr	fceux-am/src/boards/bs-5.cpp	/^static uint8 reg_chr[4];$/;"	v	file:
reg_count	nemu/src/device/audio.c	/^  reg_count,$/;"	e	enum:__anon51	file:
reg_d	nemu/src/isa/riscv64/local-include/reg.h	11;"	d
reg_freq	nemu/src/device/audio.c	/^  reg_freq,$/;"	e	enum:__anon51	file:
reg_init	nemu/src/device/audio.c	/^  reg_init,$/;"	e	enum:__anon51	file:
reg_l	nemu/src/isa/mips32/local-include/reg.h	11;"	d
reg_l	nemu/src/isa/riscv32/local-include/reg.h	11;"	d
reg_l	nemu/src/isa/x86/local-include/reg.h	15;"	d
reg_name	nemu/src/isa/mips32/local-include/reg.h	/^static inline const char* reg_name(int index) {$/;"	f
reg_name	nemu/src/isa/riscv32/local-include/reg.h	/^static inline const char* reg_name(int index) {$/;"	f
reg_name	nemu/src/isa/riscv64/local-include/reg.h	/^static inline const char* reg_name(int index) {$/;"	f
reg_name	nemu/src/isa/x86/local-include/reg.h	/^static inline const char* reg_name(int index, int width) {$/;"	f
reg_prg	fceux-am/src/boards/bs-5.cpp	/^static uint8 reg_prg[4];$/;"	v	file:
reg_samples	nemu/src/device/audio.c	/^  reg_samples,$/;"	e	enum:__anon51	file:
reg_sbuf_size	nemu/src/device/audio.c	/^  reg_sbuf_size,$/;"	e	enum:__anon51	file:
reg_test	nemu/src/isa/x86/reg.c	/^void reg_test() {$/;"	f
reg_w	nemu/src/isa/x86/local-include/reg.h	16;"	d
regcmd	fceux-am/src/boards/vrc2and4.cpp	/^static uint8 regcmd, irqcmd, mirr, big_bank;$/;"	v	file:
regex	nemu/src/monitor/debug/expr.c	/^  char *regex;$/;"	m	struct:rule	file:
regie	fceux-am/src/boards/90.cpp	/^static uint8 regie;$/;"	v	file:
regperm	fceux-am/src/boards/8237.cpp	/^static uint8 regperm[8][8] =$/;"	v	file:
regs	fceux-am/src/boards/151.cpp	/^static uint8 regs[8];$/;"	v	file:
regs	fceux-am/src/boards/186.cpp	/^static uint8 regs[4];$/;"	v	file:
regs	fceux-am/src/boards/246.cpp	/^static uint8 regs[8];$/;"	v	file:
regs	fceux-am/src/boards/33.cpp	/^static uint8 regs[8], mirr;$/;"	v	file:
regs	fceux-am/src/boards/34.cpp	/^static uint8 regs[3];$/;"	v	file:
regs	fceux-am/src/boards/82.cpp	/^static uint8 regs[9], ctrl;$/;"	v	file:
regs	fceux-am/src/boards/bmc64in1nr.cpp	/^static uint8 regs[4];$/;"	v	file:
regs	fceux-am/src/boards/famicombox.cpp	/^static uint8 regs[8];$/;"	v	file:
regs	fceux-am/src/boards/hp898f.cpp	/^static uint8 regs[2];$/;"	v	file:
regs	fceux-am/src/boards/inlnsf.cpp	/^static uint8 regs[8];$/;"	v	file:
regs	fceux-am/src/boards/subor.cpp	/^static uint8 is167, regs[4];$/;"	v	file:
regs	fceux-am/src/boards/tengen.cpp	/^static uint8 cmd, mirr, regs[11];$/;"	v	file:
regs	fceux-am/src/boards/vrc5.cpp	/^static uint8 regs[16];$/;"	v	file:
regs	nemu/src/isa/mips32/reg.c	/^const char *regs[] = {$/;"	v
regs	nemu/src/isa/riscv32/reg.c	/^const char *regs[] = {$/;"	v
regs	nemu/src/isa/riscv64/reg.c	/^const char *regs[] = {$/;"	v
regsb	nemu/src/isa/x86/reg.c	/^const char *regsb[] = {"al", "cl", "dl", "bl", "ah", "ch", "dh", "bh"};$/;"	v
regsl	nemu/src/isa/x86/reg.c	/^const char *regsl[] = {"eax", "ecx", "edx", "ebx", "esp", "ebp", "esi", "edi"};$/;"	v
regsw	nemu/src/isa/x86/reg.c	/^const char *regsw[] = {"ax", "cx", "dx", "bx", "sp", "bp", "si", "di"};$/;"	v
reloaddec	fceux-am/src/sound.h	/^	int reloaddec;$/;"	m	struct:__anon36
render	abstract-machine/am/src/x86/qemu/ioe.c	/^static struct pixel *render(struct gpu_canvas *cv, struct gpu_canvas *parent, struct pixel *px) {$/;"	f	file:
renderbg	fceux-am/src/ppu.cpp	/^static bool rendersprites = true, renderbg = true;$/;"	v	file:
rendercount	fceux-am/src/ppu.cpp	/^volatile int rendercount, vromreadcount, undefinedvromcount, LogAddress = -1;$/;"	v
renderer	abstract-machine/am/src/native/native-gpu.c	/^static SDL_Renderer *renderer = NULL;$/;"	v	file:
renderer	nemu/src/device/vga.c	/^static SDL_Renderer *renderer = NULL;$/;"	v	file:
rendersprites	fceux-am/src/ppu.cpp	/^static bool rendersprites = true, renderbg = true;$/;"	v	file:
reserved	abstract-machine/am/src/x86.h	/^  uint8_t  reserved;$/;"	m	struct:__anon6
reserved	abstract-machine/am/src/x86.h	/^  uint8_t  reserved[3];$/;"	m	struct:__anon7
reserved	fceux-am/src/ines.h	/^	uint8 reserved[2];           \/\/ 14, 15$/;"	m	struct:iNES_HEADER
reset	fceux-am/src/boards/230.cpp	/^static uint8 latche, reset;$/;"	v	file:
reset	fceux-am/src/boards/8157.cpp	/^static uint8 reset;$/;"	v	file:
reset	fceux-am/src/boards/bmc42in1r.cpp	/^static uint8 latche[2], reset;$/;"	v	file:
reset	fceux-am/src/ppu.cpp	/^	void reset() {$/;"	f	struct:PPUREGS
reset	fceux-am/src/ppu.cpp	/^	void reset() {$/;"	f	struct:SPRITE_READ
resetDMCacc	fceux-am/src/sound.cpp	/^int movieSyncHackOn=0,resetDMCacc=0,movieConvertOffset1,movieConvertOffset2;$/;"	v
reset_flag	fceux-am/src/boards/411120-c.cpp	/^static uint8 reset_flag = 0;$/;"	v	file:
reset_flag	fceux-am/src/boards/t-227-1.cpp	/^static uint8 reset_flag = 0x07;$/;"	v	file:
reset_zero	nemu/src/isa/mips32/exec/exec.c	/^static inline void reset_zero() {$/;"	f	file:
reset_zero	nemu/src/isa/riscv32/exec/exec.c	/^static inline void reset_zero() {$/;"	f	file:
reset_zero	nemu/src/isa/riscv64/exec/exec.c	/^static inline void reset_zero() {$/;"	f	file:
restart	nemu/src/isa/mips32/init.c	/^static void restart() {$/;"	f	file:
restart	nemu/src/isa/riscv32/init.c	/^static void restart() {$/;"	f	file:
restart	nemu/src/isa/riscv64/init.c	/^static void restart() {$/;"	f	file:
restart	nemu/src/isa/x86/init.c	/^static void restart() {$/;"	f	file:
ret	fceux-am/src/ppu.cpp	/^	int32 ret;$/;"	m	struct:SPRITE_READ	file:
rflags	abstract-machine/am/include/arch/x86_64-qemu.h	/^           rip, cs, rflags,$/;"	m	struct:Context
rflags	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint64_t rip, cs, rflags, rsp, ss;$/;"	m	struct:trap_frame
rip	abstract-machine/am/include/arch/x86_64-qemu.h	/^           rip, cs, rflags,$/;"	m	struct:Context
rip	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint64_t rip, cs, rflags, rsp, ss;$/;"	m	struct:trap_frame
riscv32_CPU_state	nemu/include/isa/riscv32.h	/^} riscv32_CPU_state;$/;"	t	typeref:struct:__anon71
riscv32_IMAGE_START	nemu/include/isa/riscv32.h	7;"	d
riscv32_ISADecodeInfo	nemu/include/isa/riscv32.h	/^} riscv32_ISADecodeInfo;$/;"	t	typeref:struct:__anon73
riscv32_PMEM_BASE	nemu/include/isa/riscv32.h	8;"	d
riscv32_has_mem_exception	nemu/include/isa/riscv32.h	51;"	d
riscv64_CPU_state	nemu/include/isa/riscv64.h	/^} riscv64_CPU_state;$/;"	t	typeref:struct:__anon81
riscv64_IMAGE_START	nemu/include/isa/riscv64.h	7;"	d
riscv64_ISADecodeInfo	nemu/include/isa/riscv64.h	/^} riscv64_ISADecodeInfo;$/;"	t	typeref:struct:__anon83
riscv64_PMEM_BASE	nemu/include/isa/riscv64.h	8;"	d
riscv64_has_mem_exception	nemu/include/isa/riscv64.h	51;"	d
rks	fceux-am/src/boards/emu2413.h	/^	uint32 rks;       \/* Key scale offset (Rks) *\/$/;"	m	struct:__anon43
rksTable	fceux-am/src/boards/emu2413.c	/^static int32 rksTable[2][8][2];$/;"	v	file:
rl_gets	nemu/src/monitor/debug/ui.c	/^static char* rl_gets() {$/;"	f	file:
rmode	fceux-am/src/boards/tengen.cpp	/^static uint8 rmode, IRQmode, IRQCount, IRQa, IRQLatch;$/;"	v	file:
rom_mode	fceux-am/src/boards/80013-B.cpp	/^static uint8 bios_prg, rom_prg, rom_mode, mirror;$/;"	v	file:
rom_prg	fceux-am/src/boards/80013-B.cpp	/^static uint8 bios_prg, rom_prg, rom_mode, mirror;$/;"	v	file:
roms	fceux-am/nes/build-roms.py	/^roms = []$/;"	v
rp2c04001	fceux-am/src/palettes/palettes.h	/^pal rp2c04001[512] = {$/;"	v
rp2c04002	fceux-am/src/palettes/palettes.h	/^pal rp2c04002[512] = {$/;"	v
rp2c04003	fceux-am/src/palettes/palettes.h	/^pal rp2c04003[512] = {$/;"	v
rp2c05004	fceux-am/src/palettes/palettes.h	/^pal rp2c05004[512] = {$/;"	v
rs	nemu/include/isa/mips32.h	/^      uint32_t rs     :  5;$/;"	m	struct:__anon90::__anon91::__anon92
rs	nemu/include/isa/mips32.h	/^      uint32_t rs     :  5;$/;"	m	struct:__anon90::__anon91::__anon93
rs	nemu/include/isa/mips32.h	/^      uint32_t rs     : 5;$/;"	m	struct:__anon90::__anon91::__anon94
rs1	nemu/include/isa/riscv32.h	/^      uint32_t rs1       : 5;$/;"	m	struct:__anon73::__anon74::__anon75
rs1	nemu/include/isa/riscv32.h	/^      uint32_t rs1       : 5;$/;"	m	struct:__anon73::__anon74::__anon76
rs1	nemu/include/isa/riscv64.h	/^      uint32_t rs1       : 5;$/;"	m	struct:__anon83::__anon84::__anon85
rs1	nemu/include/isa/riscv64.h	/^      uint32_t rs1       : 5;$/;"	m	struct:__anon83::__anon84::__anon86
rs2	nemu/include/isa/riscv32.h	/^      uint32_t rs2       : 5;$/;"	m	struct:__anon73::__anon74::__anon76
rs2	nemu/include/isa/riscv64.h	/^      uint32_t rs2       : 5;$/;"	m	struct:__anon83::__anon84::__anon86
rsi	abstract-machine/am/include/arch/x86_64-qemu.h	/^           rbp, rsi, rdi,$/;"	m	struct:Context
rsp	abstract-machine/am/include/arch/x86_64-qemu.h	/^           rsp, ss, rsp0;$/;"	m	struct:Context
rsp	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint64_t rip, cs, rflags, rsp, ss;$/;"	m	struct:trap_frame
rsp0	abstract-machine/am/include/arch/x86_64-qemu.h	/^           rsp, ss, rsp0;$/;"	m	struct:Context
rsp0	abstract-machine/am/src/x86.h	/^  uint64_t rsp0, rsp1, rsp2;$/;"	m	struct:__anon5
rsp1	abstract-machine/am/src/x86.h	/^  uint64_t rsp0, rsp1, rsp2;$/;"	m	struct:__anon5
rsp2	abstract-machine/am/src/x86.h	/^  uint64_t rsp0, rsp1, rsp2;$/;"	m	struct:__anon5
rsv	abstract-machine/am/src/x86.h	/^  uint32_t rsv       : 32;$/;"	m	struct:__anon3
rsv	abstract-machine/am/src/x86.h	/^  uint32_t rsv;$/;"	m	struct:__anon5
rsv1	abstract-machine/am/src/x86.h	/^  uint32_t rsv1      :  3; \/\/ Reserved(should be zero I guess)$/;"	m	struct:__anon2
rt	nemu/include/isa/mips32.h	/^      uint32_t rt     :  5;$/;"	m	struct:__anon90::__anon91::__anon92
rt	nemu/include/isa/mips32.h	/^      uint32_t rt     :  5;$/;"	m	struct:__anon90::__anon91::__anon93
rt	nemu/include/isa/mips32.h	/^      uint32_t rt     : 5;$/;"	m	struct:__anon90::__anon91::__anon94
rtc_io_handler	nemu/src/device/timer.c	/^static void rtc_io_handler(uint32_t offset, int len, bool is_write) {$/;"	f	file:
rtc_port_base	nemu/src/device/timer.c	/^static uint32_t *rtc_port_base = NULL;$/;"	v	file:
rtl_addiw	nemu/src/engine/interpreter/rtl-basic.h	40;"	d
rtl_exit	nemu/src/monitor/cpu-exec.c	/^void rtl_exit(int state, vaddr_t halt_pc, uint32_t halt_ret) {$/;"	f
rtl_sariw	nemu/src/engine/interpreter/rtl-basic.h	43;"	d
rtl_setcc	nemu/src/isa/x86/exec/cc.h	/^static inline void rtl_setcc(DecodeExecState *s, rtlreg_t* dest, uint32_t subcode) {$/;"	f
rtl_shliw	nemu/src/engine/interpreter/rtl-basic.h	41;"	d
rtl_shriw	nemu/src/engine/interpreter/rtl-basic.h	42;"	d
rtlreg_t	nemu/include/common.h	/^typedef word_t rtlreg_t;$/;"	t
rule	nemu/src/monitor/debug/expr.c	/^static struct rule {$/;"	s	file:
rules	nemu/src/monitor/debug/expr.c	/^} rules[] = {$/;"	v	typeref:struct:rule	file:
run_protected_mode	nemu/tools/kvm-diff/src/kvm.c	/^static void run_protected_mode() {$/;"	f	file:
running	fceux-am/src/boards/mmc5.cpp	/^	uint8 running;$/;"	m	struct:__anon39	file:
runppu	fceux-am/src/ppu.cpp	/^void runppu(int x) {$/;"	f
rz	nemu/include/rtl/rtl.h	19;"	d
rzero	nemu/src/monitor/cpu-exec.c	/^const rtlreg_t rzero = 0;$/;"	v
s	abstract-machine/am/src/x86.h	/^  uint32_t s          :  1; \/\/ 0 = system, 1 = application$/;"	m	struct:__anon1
s	abstract-machine/am/src/x86.h	/^  uint32_t s         :  1; \/\/ Must be 0 (system)$/;"	m	struct:__anon2
s	abstract-machine/klib/src/int64.c	/^    }s;$/;"	m	union:__anon16	typeref:struct:__anon16::__anon17	file:
s	abstract-machine/klib/src/int64.c	/^    }s;$/;"	m	union:__anon18	typeref:struct:__anon18::__anon19	file:
s	abstract-machine/klib/src/int64.c	/^    }s;$/;"	m	union:__anon20	typeref:struct:__anon20::__anon21	file:
s	abstract-machine/klib/src/int64.c	/^    }s;$/;"	m	union:__anon22	typeref:struct:__anon22::__anon23	file:
s	fceux-am/src/ppu.cpp	/^	uint32 s;	\/\/1 ($2000 bit 4: "Background pattern table address (0: $0000; 1: $1000)")$/;"	m	struct:PPUREGS	file:
s	fceux-am/src/state.h	/^	uint32 s;$/;"	m	struct:SFORMAT
s	nemu/include/isa/riscv32.h	/^    } s;$/;"	m	union:__anon73::__anon74	typeref:struct:__anon73::__anon74::__anon76
s	nemu/include/isa/riscv64.h	/^    } s;$/;"	m	union:__anon83::__anon84	typeref:struct:__anon83::__anon84::__anon86
s0	nemu/include/rtl/rtl.h	13;"	d
s1	nemu/include/rtl/rtl.h	14;"	d
s16	fceux-am/src/types.h	/^typedef int16 s16;$/;"	t
s2	nemu/include/rtl/rtl.h	15;"	d
s32	fceux-am/src/types.h	/^typedef int32 s32;$/;"	t
s64	fceux-am/src/types.h	/^typedef int64 s64;$/;"	t
s8	fceux-am/src/types.h	/^typedef int8 s8;$/;"	t
sMasterRomInfo	fceux-am/src/ines.cpp	/^static const TMasterRomInfo sMasterRomInfo[] = {$/;"	v	file:
s_BufferSize	fceux-am/src/drivers/sdl/sdl-sound.cpp	/^static int s_BufferSize;$/;"	v	file:
s_clipSides	fceux-am/src/drivers/sdl/sdl-video.cpp	41;"	d	file:
s_inited	fceux-am/src/drivers/sdl/sdl-video.cpp	/^static int s_inited;$/;"	v	file:
s_paletterefresh	fceux-am/src/drivers/sdl/sdl-video.cpp	/^static int s_paletterefresh;$/;"	v	file:
s_psdl	fceux-am/src/drivers/sdl/sdl-video.cpp	/^} s_psdl[256];$/;"	v	typeref:struct:__anon47	file:
s_srendline	fceux-am/src/drivers/sdl/sdl-video.cpp	/^static int s_srendline;$/;"	v	file:
s_tlines	fceux-am/src/drivers/sdl/sdl-video.cpp	/^static const int s_tlines = 240;$/;"	v	file:
sa	nemu/include/isa/mips32.h	/^      uint32_t sa     : 5;$/;"	m	struct:__anon90::__anon91::__anon94
save_context_handler	abstract-machine/am/src/native/platform.c	/^static void save_context_handler(int sig, siginfo_t *info, void *ucontext) {$/;"	f	file:
save_example_context	abstract-machine/am/src/native/platform.c	/^static void save_example_context() {$/;"	f	file:
saved_context	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  Context saved_context;$/;"	m	struct:trap_frame
sbuf	abstract-machine/am/src/native/native-audio.c	/^static uint8_t sbuf [SBUF_SIZE_MAX] = {};$/;"	v	file:
sbuf	nemu/src/device/audio.c	/^static uint8_t *sbuf = NULL;$/;"	v	file:
sbw	fceux-am/src/boards/176.cpp	/^static uint8 prg[4], chr, sbw, we_sram;$/;"	v	file:
scanline	fceux-am/src/ppu.cpp	/^int scanline;$/;"	v
scanlines_per_frame	fceux-am/src/ppu.cpp	/^static uint32 scanlines_per_frame;$/;"	v	file:
sdl_clear_event_queue	nemu/src/device/device.c	/^void sdl_clear_event_queue() {$/;"	f
segments	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^static Area segments[] = {      \/\/ Kernel memory mappings$/;"	v	file:
segments	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^static Area segments[] = {      \/\/ Kernel memory mappings$/;"	v	file:
segments	abstract-machine/am/src/nemu/isa/x86/vme.c	/^static Area segments[] = {      \/\/ Kernel memory mappings$/;"	v	file:
send_key	nemu/src/device/keyboard.c	/^void send_key(uint8_t scancode, bool is_keydown) {$/;"	f
send_packet	nemu/tools/qemu-diff/src/protocol.c	/^static void send_packet(FILE *out, const uint8_t *command, size_t size) {$/;"	f	file:
seq_pc	nemu/include/cpu/decode.h	/^  vaddr_t seq_pc;  \/\/ sequential pc$/;"	m	struct:__anon67
serial_base	nemu/src/device/serial.c	/^static uint8_t *serial_base = NULL;$/;"	v	file:
serial_io_handler	nemu/src/device/serial.c	/^static void serial_io_handler(uint32_t offset, int len, bool is_write) {$/;"	f	file:
setBlock	fceux-am/src/boards/emu2413.c	/^INLINE static void setBlock(OPLL * opll, int32 c, int32 block) {$/;"	f	file:
setFnumber	fceux-am/src/boards/emu2413.c	/^INLINE static void setFnumber(OPLL * opll, int32 c, int32 fnum) {$/;"	f	file:
setInstrument	fceux-am/src/boards/emu2413.c	/^static void setInstrument(OPLL * opll, uint32 i, uint32 inst) {$/;"	f	file:
setSlotVolume	fceux-am/src/boards/emu2413.c	/^INLINE static void setSlotVolume(OPLL_SLOT * slot, int32 volume) {$/;"	f	file:
setSustine	fceux-am/src/boards/emu2413.c	/^INLINE static void setSustine(OPLL * opll, int32 c, int32 sustine) {$/;"	f	file:
setVolume	fceux-am/src/boards/emu2413.c	/^INLINE static void setVolume(OPLL * opll, int32 c, int32 volume) {$/;"	f	file:
set_cr0	abstract-machine/am/src/x86.h	/^static inline void set_cr0(uintptr_t cr0) {$/;"	f
set_cr3	abstract-machine/am/src/x86.h	/^static inline void set_cr3(void *pdir) {$/;"	f
set_device_update_flag	nemu/src/device/device.c	/^static void set_device_update_flag() {$/;"	f	file:
set_gdt	abstract-machine/am/src/x86.h	/^static inline void set_gdt(void *gdt, int size) {$/;"	f
set_idt	abstract-machine/am/src/x86.h	/^static inline void set_idt(void *idt, int size) {$/;"	f
set_satp	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^static inline void set_satp(void *pdir) {$/;"	f	file:
set_satp	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^static inline void set_satp(void *pdir) {$/;"	f	file:
set_tr	abstract-machine/am/src/x86.h	/^static inline void set_tr(int selector) {$/;"	f
set_width	nemu/src/isa/mips32/exec/exec.c	/^static inline void set_width(DecodeExecState *s, int width) {$/;"	f	file:
set_width	nemu/src/isa/riscv32/exec/exec.c	/^static inline void set_width(DecodeExecState *s, int width) {$/;"	f	file:
set_width	nemu/src/isa/riscv64/exec/exec.c	/^static inline void set_width(DecodeExecState *s, int width) {$/;"	f	file:
set_width	nemu/src/isa/x86/exec/exec.c	/^static inline void set_width(DecodeExecState *s, int width) {$/;"	f	file:
setchr1	fceux-am/src/cart.cpp	/^void setchr1(uint32 A, uint32 V) {$/;"	f
setchr1r	fceux-am/src/cart.cpp	/^void setchr1r(int r, uint32 A, uint32 V) {$/;"	f
setchr2	fceux-am/src/cart.cpp	/^void setchr2(uint32 A, uint32 V) {$/;"	f
setchr2r	fceux-am/src/cart.cpp	/^void setchr2r(int r, uint32 A, uint32 V) {$/;"	f
setchr4	fceux-am/src/cart.cpp	/^void setchr4(uint32 A, uint32 V) {$/;"	f
setchr4r	fceux-am/src/cart.cpp	/^void setchr4r(int r, uint32 A, uint32 V) {$/;"	f
setchr8	fceux-am/src/cart.cpp	/^void setchr8(uint32 V) {$/;"	f
setchr8r	fceux-am/src/cart.cpp	/^void setchr8r(int r, uint32 V) {$/;"	f
setfpageptr	fceux-am/src/boards/unrom512.cpp	/^static INLINE void setfpageptr(int s, uint32 A, uint8 *p) {$/;"	f	file:
setfprg16	fceux-am/src/boards/unrom512.cpp	/^void setfprg16(uint32 A, uint32 V) {$/;"	f
setmirror	fceux-am/src/cart.cpp	/^void setmirror(int t) {$/;"	f
setmirrorw	fceux-am/src/cart.cpp	/^void setmirrorw(int a, int b, int c, int d) {$/;"	f
setntamem	fceux-am/src/cart.cpp	/^void setntamem(uint8 *p, int ram, uint32 b) {$/;"	f
setpageptr	fceux-am/src/cart.cpp	/^static INLINE void setpageptr(int s, uint32 A, uint8 *p, int ram) {$/;"	f	file:
setprg16	fceux-am/src/cart.cpp	/^void setprg16(uint32 A, uint32 V) {$/;"	f
setprg16r	fceux-am/src/cart.cpp	/^void setprg16r(int r, uint32 A, uint32 V) {$/;"	f
setprg2	fceux-am/src/cart.cpp	/^void setprg2(uint32 A, uint32 V) {$/;"	f
setprg2r	fceux-am/src/cart.cpp	/^void setprg2r(int r, uint32 A, uint32 V) {$/;"	f
setprg32	fceux-am/src/cart.cpp	/^void setprg32(uint32 A, uint32 V) {$/;"	f
setprg32r	fceux-am/src/cart.cpp	/^void setprg32r(int r, uint32 A, uint32 V) {$/;"	f
setprg4	fceux-am/src/cart.cpp	/^void setprg4(uint32 A, uint32 V) {$/;"	f
setprg4r	fceux-am/src/cart.cpp	/^void setprg4r(int r, uint32 A, uint32 V) {$/;"	f
setprg8	fceux-am/src/cart.cpp	/^void setprg8(uint32 A, uint32 V) {$/;"	f
setprg8r	fceux-am/src/cart.cpp	/^void setprg8r(int r, uint32 A, uint32 V) {$/;"	f
setup_protected_mode	nemu/tools/kvm-diff/src/kvm.c	/^static void setup_protected_mode(struct kvm_sregs *sregs) {$/;"	f	file:
setup_sigaltstack	abstract-machine/am/src/native/platform.c	/^static void setup_sigaltstack() {$/;"	f	file:
setup_stack	abstract-machine/am/src/native/cte.c	/^static void setup_stack(uintptr_t event, ucontext_t *uc) {$/;"	f	file:
sfun	fceux-am/src/boards/mmc5.cpp	/^static void (*sfun)(int P);$/;"	v	file:
sfun	fceux-am/src/boards/vrc6.cpp	/^static void(*sfun[3]) (void);$/;"	v	file:
shift	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^    int shift, bits;$/;"	m	struct:mmu_config::ptinfo
si_int	abstract-machine/klib/src/int64.c	/^typedef      int si_int;$/;"	t	file:
si_int	abstract-machine/klib/src/int64.c	158;"	d	file:
sibling	abstract-machine/am/include/amdev.h	/^  gpuptr_t sibling;$/;"	m	struct:gpu_canvas
sig_handler	abstract-machine/am/src/native/cte.c	/^static void sig_handler(int sig, siginfo_t *info, void *ucontext) {$/;"	f	file:
signature	abstract-machine/am/src/x86.h	/^  uint8_t  signature[4];  \/\/ "PCMP"$/;"	m	struct:__anon6
sigstack	abstract-machine/am/src/native/platform.h	/^  uint8_t sigstack[SIGSTKSZ];$/;"	m	struct:__anon9
simm	nemu/include/cpu/decode.h	/^    sword_t simm;$/;"	m	union:__anon65::__anon66
simm	nemu/include/isa/mips32.h	/^      int32_t  simm   : 16;$/;"	m	struct:__anon90::__anon91::__anon92
simm11_0	nemu/include/isa/riscv32.h	/^      int32_t  simm11_0  :12;$/;"	m	struct:__anon73::__anon74::__anon75
simm11_0	nemu/include/isa/riscv64.h	/^      int32_t  simm11_0  :12;$/;"	m	struct:__anon83::__anon84::__anon85
simm11_5	nemu/include/isa/riscv32.h	/^      int32_t  simm11_5  : 7;$/;"	m	struct:__anon73::__anon74::__anon76
simm11_5	nemu/include/isa/riscv64.h	/^      int32_t  simm11_5  : 7;$/;"	m	struct:__anon83::__anon84::__anon86
simm31_12	nemu/include/isa/riscv64.h	/^      int32_t  simm31_12 :20;$/;"	m	struct:__anon83::__anon84::__anon87
sintbl	fceux-am/src/boards/emu2413.h	/^	uint16 *sintbl;   \/* Wavetable *\/$/;"	m	struct:__anon43
size	fceux-am/src/boards/mmc5.cpp	/^	uint8 size;$/;"	m	struct:__cartdata	file:
size	fceux-am/src/emufile.h	/^	int size() { return filesize; }$/;"	f	class:EMUFILE_FILE
size	fceux-am/src/emufile.h	/^	virtual int size() {$/;"	f	class:EMUFILE_FILE
size	fceux-am/src/file.h	/^	int size;$/;"	m	struct:FCEUFILE
size	fceux-am/src/utils/valuearray.h	/^	static const int size = N;$/;"	m	struct:ValueArray
skip_7bit_overclocking	fceux-am/src/fceu.cpp	/^bool skip_7bit_overclocking = 1; \/\/ 7-bit samples have priority over overclocking$/;"	v
skip_dut_nr_instr	nemu/src/monitor/difftest/dut.c	/^static int skip_dut_nr_instr = 0;$/;"	v	file:
sl	fceux-am/src/ppu.cpp	/^	int32 sl;$/;"	m	struct:PPUSTATUS	file:
slot	fceux-am/src/boards/emu2413.h	/^	OPLL_SLOT slot[6 * 2];$/;"	m	struct:__anon44
slotOff	fceux-am/src/boards/emu2413.c	/^INLINE static void slotOff(OPLL_SLOT * slot) {$/;"	f	file:
slotOn	fceux-am/src/boards/emu2413.c	/^INLINE static void slotOn(OPLL_SLOT * slot) {$/;"	f	file:
slotOn2	fceux-am/src/boards/emu2413.c	/^INLINE static void slotOn2(OPLL_SLOT * slot) {$/;"	f	file:
slot_on_flag	fceux-am/src/boards/emu2413.h	/^	int32 slot_on_flag[6 * 2];$/;"	m	struct:__anon44
sndcmd	fceux-am/src/boards/69.cpp	/^static uint8 sndcmd, sreg[14];$/;"	v	file:
snesjoy	fceux-am/src/input.cpp	/^uint16 snesjoy[4]={0,0,0,0}; \/\/HACK - should be static but movie needs it$/;"	v
snprintf	abstract-machine/klib/src/stdio.c	/^int snprintf(char *out, size_t n, const char *fmt, ...) {$/;"	f
software_id	fceux-am/src/boards/unrom512.cpp	/^static uint8 latche, latcheinit, bus_conflict, chrram_mask, software_id=false;$/;"	v	file:
soundchan	fceux-am/src/git.h	/^	int soundchan;  \/\/Number of sound channels.$/;"	m	struct:FCEUGI
soundq	fceux-am/src/fceu.h	/^	int soundq;$/;"	m	struct:__anon32
soundrate	fceux-am/src/git.h	/^	int soundrate;  \/\/For Ogg Vorbis expansion sound wacky support.  0 for default.$/;"	m	struct:FCEUGI
soundtimestamp	fceux-am/src/x6502.cpp	/^uint32 soundtimestamp;$/;"	v
soundtsi	fceux-am/src/sound.cpp	/^uint32 soundtsi=0;$/;"	v
soundtsinc	fceux-am/src/sound.cpp	/^uint32 soundtsinc=0;$/;"	v
soundtsoffs	fceux-am/src/sound.cpp	/^uint32 soundtsoffs=0;$/;"	v
space	nemu/include/device/map.h	/^  uint8_t *space;$/;"	m	struct:__anon70
specrev	abstract-machine/am/src/x86.h	/^  uint8_t  specrev;  \/\/ [14]$/;"	m	struct:__anon7
sphitdata	fceux-am/src/ppu.cpp	/^static uint8 sphitdata;$/;"	v	file:
sphitx	fceux-am/src/ppu.cpp	/^static int32 sphitx;$/;"	v	file:
spork	fceux-am/src/ppu.cpp	/^static int spork = 0;$/;"	v	file:
spr_read	fceux-am/src/ppu.cpp	/^SPRITE_READ spr_read;$/;"	v
sprintf	abstract-machine/klib/src/stdio.c	/^int sprintf(char *out, const char *fmt, ...) {$/;"	f
sprlinebuf	fceux-am/src/ppu.cpp	/^static uint8 sprlinebuf[256 + 8];$/;"	v	file:
sq2coeffs	fceux-am/src/filter.cpp	/^static int32 sq2coeffs[SQ2NCOEFFS];$/;"	v	file:
sqacc	fceux-am/src/sound.cpp	/^static int32 sqacc[2];$/;"	v	file:
srand	abstract-machine/klib/src/stdlib.c	/^void srand(unsigned int seed) {$/;"	f
src1	nemu/include/cpu/decode.h	/^  Operand src1, dest, src2;$/;"	m	struct:__anon67
src2	nemu/include/cpu/decode.h	/^  Operand src1, dest, src2;$/;"	m	struct:__anon67
sreg	fceux-am/src/boards/69.cpp	/^static uint8 sndcmd, sreg[14];$/;"	v	file:
ss	abstract-machine/am/include/arch/x86_64-qemu.h	/^           rsp, ss, rsp0;$/;"	m	struct:Context
ss	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint32_t eip, cs, eflags, esp, ss;$/;"	m	struct:trap_frame
ss	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint64_t rip, cs, rflags, rsp, ss;$/;"	m	struct:trap_frame
ss	nemu/src/isa/x86/decode.c	/^    uint8_t ss		:2;$/;"	m	struct:__anon58::__anon59	file:
ss	nemu/tools/qemu-diff/include/isa/x86.h	/^    uint32_t cs, ss, ds, es, fs, gs;$/;"	m	struct:isa_gdb_regs::__anon99
ss0	abstract-machine/am/src/x86.h	/^  uint32_t ss0;      \/\/   after an increase in privilege level$/;"	m	struct:__anon4
ss3	abstract-machine/am/include/arch/x86-qemu.h	/^           eip, cs, eflags, esp, ss3;$/;"	m	struct:Context
stack	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  struct kernel_stack stack;$/;"	m	struct:cpu_local	typeref:struct:cpu_local::kernel_stack
stack	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  uint8_t stack[8192];$/;"	m	struct:kernel_stack
stack_switch_call	abstract-machine/am/src/x86.h	/^static inline void stack_switch_call(void *sp, void *entry, uintptr_t arg) {$/;"	f
stack_top	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^static inline void *stack_top(struct kernel_stack *stk) {$/;"	f
start	abstract-machine/am/include/am.h	/^  void *start, *end;$/;"	m	struct:__anon10
start32	abstract-machine/am/src/x86/qemu/boot/start.S	/^start32:$/;"	l
start_scanline	fceux-am/src/ppu.cpp	/^	void start_scanline() {$/;"	f	struct:SPRITE_READ
stat	fceux-am/src/types.h	46;"	d
state	fceux-am/src/input.h	/^	int state;$/;"	m	struct:EMUCMDTABLE
state	fceux-am/src/utils/md5.h	/^    uint32 state[4];$/;"	m	struct:md5_context
state	nemu/include/monitor/monitor.h	/^  int state;$/;"	m	struct:__anon96
static_assert	abstract-machine/klib/include/klib-macros.h	27;"	d
status	abstract-machine/am/include/arch/mips32-nemu.h	/^  uintptr_t hi, gpr[32], epc, cause, lo, status;$/;"	m	struct:Context
status	abstract-machine/am/include/arch/riscv32-nemu.h	/^  uintptr_t epc, cause, gpr[32], status;$/;"	m	struct:Context
status	abstract-machine/am/include/arch/riscv64-nemu.h	/^  uintptr_t epc, cause, gpr[32], status;$/;"	m	struct:Context
status	fceux-am/src/ppu.cpp	/^	PPUSTATUS status;$/;"	m	struct:PPUREGS	file:
status	nemu/tools/qemu-diff/include/isa/mips32.h	/^    uint32_t status, lo, hi, badvaddr, cause, pc;$/;"	m	struct:isa_gdb_regs::__anon103
sti	abstract-machine/am/src/x86.h	/^static inline void sti() {$/;"	f
str	nemu/include/cpu/decode.h	/^  char str[OP_STR_SIZE];$/;"	m	struct:__anon65
str	nemu/include/macro.h	5;"	d
str	nemu/src/monitor/debug/expr.c	/^  char str[32];$/;"	m	struct:token	file:
str	nemu/tools/qemu-diff/include/isa/mips32.h	5;"	d
str_temp	nemu/include/macro.h	4;"	d
strcat	abstract-machine/klib/src/string.c	/^char* strcat(char* dst, const char* src) {$/;"	f
strcatf	nemu/src/monitor/debug/log.c	/^void strcatf(char *buf, const char *fmt, ...) {$/;"	f
strcmp	abstract-machine/klib/src/string.c	/^int strcmp(const char* s1, const char* s2) {$/;"	f
strcpy	abstract-machine/klib/src/string.c	/^char *strcpy(char* dst,const char* src) {$/;"	f
stream	fceux-am/src/file.h	/^	EMUFILE_FILE *stream;$/;"	m	struct:FCEUFILE
strlen	abstract-machine/klib/src/string.c	/^size_t strlen(const char *s) {$/;"	f
strncmp	abstract-machine/klib/src/string.c	/^int strncmp(const char* s1, const char* s2, size_t n) {$/;"	f
strncpy	abstract-machine/klib/src/string.c	/^char* strncpy(char* dst, const char* src, size_t n) {$/;"	f
su_int	abstract-machine/klib/src/int64.c	/^typedef unsigned su_int;$/;"	t	file:
submapper	fceux-am/src/cart.h	/^	int submapper;	\/\/ Submappers as defined by NES 2.0$/;"	m	struct:__anon37
suffix_char	nemu/include/cpu/exec.h	52;"	d
suffix_char	nemu/include/isa/x86.h	46;"	d
suntoggle	fceux-am/src/boards/67.cpp	/^static uint8 preg, creg[4], mirr, suntoggle = 0;$/;"	v	file:
sustine	fceux-am/src/boards/emu2413.h	/^	int32 sustine;      \/* Sustine 1 = ON, 0 = OFF *\/$/;"	m	struct:__anon43
swap	fceux-am/src/boards/43.cpp	/^static uint8 reg, swap;$/;"	v	file:
swap	fceux-am/src/boards/sl1632.cpp	/^static uint8 chrcmd[8], prg0, prg1, bbrk, mirr, swap;$/;"	v	file:
swap	fceux-am/src/boards/tf-1201.cpp	/^static uint8 prg0, prg1, mirr, swap;$/;"	v	file:
swapDuty	fceux-am/src/drivers/sdl/sdl.cpp	/^bool swapDuty;$/;"	v
sweepon	fceux-am/src/sound.cpp	/^static uint8 sweepon[2];$/;"	v	file:
sword_t	nemu/include/common.h	/^typedef int32_t sword_t;$/;"	t
sword_t	nemu/include/common.h	/^typedef int64_t sword_t;$/;"	t
sys_fd	nemu/tools/kvm-diff/src/kvm.c	/^  int sys_fd;$/;"	m	struct:vm	file:
sys_pgsz	abstract-machine/am/src/native/platform.c	/^static int sys_pgsz;$/;"	v	file:
t0	nemu/include/rtl/rtl.h	16;"	d
tail	abstract-machine/am/src/native/native-audio.c	/^static int head = 0, tail = 0;$/;"	v	file:
target	fceux-am/src/drawing.cpp	/^char target[64][256];$/;"	v
tcount	fceux-am/src/x6502struct.h	/^  int32 tcount;     \/* Temporary cycle counter *\/$/;"	m	struct:__X6502
teardown	abstract-machine/am/src/x86/qemu/vme.c	/^static void teardown(int level, uintptr_t *pt) {$/;"	f	file:
tekker	fceux-am/src/boards/90.cpp	/^static uint8 tekker;$/;"	v	file:
tekker	fceux-am/src/boards/sheroes.cpp	/^static uint8 tekker;$/;"	v	file:
tekprom	fceux-am/src/boards/90.cpp	/^static void tekprom(void)$/;"	f	file:
tekvrom	fceux-am/src/boards/90.cpp	/^static void tekvrom(void)$/;"	f	file:
tempbuf	nemu/src/monitor/debug/log.c	/^static char tempbuf[256] = {};$/;"	v	file:
test	fceux-am/src/ppu.cpp	/^int test = 0;$/;"	v
tester	fceux-am/src/sound.cpp	/^static INLINE void tester(void)$/;"	f	file:
texture	abstract-machine/am/include/amdev.h	/^    struct gpu_texturedesc texture;$/;"	m	union:gpu_canvas::__anon15	typeref:struct:gpu_canvas::__anon15::gpu_texturedesc
texture	abstract-machine/am/src/native/native-gpu.c	/^static SDL_Texture *texture = NULL;$/;"	v	file:
texture	nemu/src/device/vga.c	/^static SDL_Texture *texture = NULL;$/;"	v	file:
texture_sync	abstract-machine/am/src/native/native-gpu.c	/^static Uint32 texture_sync(Uint32 interval, void *param) {$/;"	f	file:
thiscpu	abstract-machine/am/src/native/platform.h	26;"	d
ti_int	abstract-machine/klib/src/int64.c	/^typedef int      ti_int __attribute__ ((mode (TI)));$/;"	t	file:
timer_config	abstract-machine/am/src/x86/qemu/ioe.c	/^static void timer_config(AM_TIMER_CONFIG_T *cfg) {$/;"	f	file:
timer_init	abstract-machine/am/src/x86/qemu/ioe.c	/^static void timer_init() {$/;"	f	file:
timer_intr	nemu/src/device/timer.c	/^static void timer_intr() {$/;"	f	file:
timer_rtc	abstract-machine/am/src/x86/qemu/ioe.c	/^static void timer_rtc(AM_TIMER_RTC_T *rtc) {$/;"	f	file:
timer_uptime	abstract-machine/am/src/x86/qemu/ioe.c	/^static void timer_uptime(AM_TIMER_UPTIME_T *upt) {$/;"	f	file:
timestamp	fceux-am/src/x6502.cpp	/^uint32 timestamp;$/;"	v
timestampbase	fceux-am/src/fceu.cpp	/^uint64 timestampbase;$/;"	v
tkcom	fceux-am/src/boards/90.cpp	/^static uint8 tkcom[4];$/;"	v	file:
tll	fceux-am/src/boards/emu2413.h	/^	uint32 tll;             \/* Total Level + Key scale level*\/$/;"	m	struct:__anon43
tllTable	fceux-am/src/boards/emu2413.c	/^static uint32 tllTable[16][8][1 << TL_BITS][4];$/;"	v	file:
tmp_reg	nemu/include/cpu/decode.h	/^  rtlreg_t tmp_reg[4];$/;"	m	struct:__anon67
to_host	abstract-machine/am/src/x86/qemu/ioe.c	/^static inline void *to_host(gpuptr_t ptr) { return ptr == AM_GPU_NULL ? NULL : vmem + ptr; }$/;"	f	file:
tofix	fceux-am/src/ppu.cpp	/^static int tofix = 0;$/;"	v	file:
togglie	fceux-am/src/boards/90.cpp	/^static void togglie()$/;"	f	file:
token	nemu/src/monitor/debug/expr.c	/^typedef struct token {$/;"	s	file:
token_type	nemu/src/monitor/debug/expr.c	/^  int token_type;$/;"	m	struct:rule	file:
tokens	nemu/src/monitor/debug/expr.c	/^static Token tokens[32] __attribute__((used)) = {};$/;"	v	file:
total	fceux-am/src/utils/md5.h	/^    uint32 total[2];$/;"	m	struct:md5_context
totalscanlines	fceux-am/src/fceu.cpp	/^int totalscanlines;$/;"	v
totpputime	fceux-am/src/ppu.cpp	/^int totpputime = 0;$/;"	v
trainerpoo	fceux-am/src/ines.cpp	/^uint8 *trainerpoo = NULL;$/;"	v
trap	abstract-machine/am/src/x86/qemu/trap32.S	/^trap:$/;"	l
trap	abstract-machine/am/src/x86/qemu/trap64.S	/^trap:$/;"	l
trap_frame	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^struct trap_frame {$/;"	s
trigger	fceux-am/src/boards/164.cpp	/^static uint8 laststrobe, trigger;$/;"	v	file:
tristep	fceux-am/src/sound.cpp	/^static int32 tristep=0;$/;"	v	file:
trm_init	abstract-machine/am/src/native/trm.c	/^void trm_init() {$/;"	f
true	nemu/include/common.h	42;"	d
true	nemu/tools/qemu-diff/include/common.h	12;"	d
tss	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  TSS32 tss;$/;"	m	struct:cpu_local
tss	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  TSS64 tss;$/;"	m	struct:cpu_local
tu_int	abstract-machine/klib/src/int64.c	/^typedef unsigned tu_int __attribute__ ((mode (TI)));$/;"	t	file:
turbo	fceux-am/src/drivers/sdl/sdl.cpp	/^bool turbo = false;$/;"	v
twords	abstract-machine/klib/src/int64.c	/^} twords;$/;"	t	typeref:union:__anon20	file:
type	abstract-machine/am/include/amdev.h	/^  uint16_t type, w, h, x1, y1, w1, h1;$/;"	m	struct:gpu_canvas
type	abstract-machine/am/src/x86.h	/^  uint32_t type       :  4; \/\/ Segment type (see STS_ constants)$/;"	m	struct:__anon1
type	abstract-machine/am/src/x86.h	/^  uint32_t type      :  4; \/\/ Type(STS_{TG,IG32,TG32})$/;"	m	struct:__anon2
type	abstract-machine/am/src/x86.h	/^  uint32_t type      :  4;$/;"	m	struct:__anon3
type	abstract-machine/am/src/x86.h	/^  uint8_t  type;     \/\/ config type$/;"	m	struct:__anon7
type	fceux-am/src/boards/emu2413.h	/^	int32 type;         \/* 0 : modulator 1 : carrier *\/$/;"	m	struct:__anon43
type	fceux-am/src/boards/sachen.cpp	/^static int type;$/;"	v	file:
type	fceux-am/src/file.h	/^	int type;$/;"	m	struct:ArchiveScanRecord
type	fceux-am/src/git.h	/^	EGIT type;$/;"	m	struct:FCEUGI
type	fceux-am/src/ines.cpp	/^	uint32 type;$/;"	m	struct:BADINF	file:
type	fceux-am/src/input.h	/^	ESI type;$/;"	m	struct:JOYPORT
type	fceux-am/src/input.h	/^	ESIFC type;$/;"	m	struct:FCPORT
type	fceux-am/src/input.h	/^	int type;$/;"	m	struct:EMUCMDTABLE
type	nemu/include/cpu/decode.h	/^  uint32_t type;$/;"	m	struct:__anon65
type	nemu/src/monitor/debug/expr.c	/^  int type;$/;"	m	struct:token	file:
u	abstract-machine/klib/src/int64.c	/^    su_int u;$/;"	m	union:__anon24	file:
u	abstract-machine/klib/src/int64.c	/^    udwords u;$/;"	m	union:__anon25	file:
u	abstract-machine/klib/src/int64.c	/^    uqwords     u;$/;"	m	union:__anon27	file:
u	nemu/include/isa/riscv32.h	/^    } u;$/;"	m	union:__anon73::__anon74	typeref:struct:__anon73::__anon74::__anon77
u	nemu/include/isa/riscv64.h	/^    } u;$/;"	m	union:__anon83::__anon84	typeref:struct:__anon83::__anon84::__anon87
u16	fceux-am/src/types.h	/^typedef uint16 u16;$/;"	t
u32	fceux-am/src/types.h	/^typedef uint32 u32;$/;"	t
u64	fceux-am/src/types.h	/^ typedef uint64 u64;$/;"	t
u64	fceux-am/src/types.h	/^typedef uint64 u64;$/;"	t
u8	fceux-am/src/types.h	/^typedef uint8 u8;$/;"	t
uart_config	abstract-machine/am/src/x86/qemu/ioe.c	/^static void uart_config(AM_UART_CONFIG_T *cfg) {$/;"	f	file:
uart_init	abstract-machine/am/src/x86/qemu/ioe.c	/^static int uart_init() {$/;"	f	file:
uart_rx	abstract-machine/am/src/x86/qemu/ioe.c	/^static void uart_rx(AM_UART_RX_T *recv) {$/;"	f	file:
uart_tx	abstract-machine/am/src/x86/qemu/ioe.c	/^static void uart_tx(AM_UART_TX_T *send) {$/;"	f	file:
uc	abstract-machine/am/include/arch/native.h	/^  ucontext_t uc;$/;"	m	struct:Context
uc_example	abstract-machine/am/src/native/platform.c	/^static ucontext_t uc_example = {};$/;"	v	file:
ucontext	abstract-machine/am/src/native/vme.c	/^Context* ucontext(AddrSpace *as, Area kstack, void *entry) {$/;"	f
ucontext	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^Context *ucontext(AddrSpace *as, Area kstack, void *entry) {$/;"	f
ucontext	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^Context *ucontext(AddrSpace *as, Area kstack, void *entry) {$/;"	f
ucontext	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^Context *ucontext(AddrSpace *as, Area kstack, void *entry) {$/;"	f
ucontext	abstract-machine/am/src/nemu/isa/x86/vme.c	/^Context* ucontext(AddrSpace *as, Area kstack, void *entry) {$/;"	f
ucontext	abstract-machine/am/src/x86/qemu/vme.c	/^Context *ucontext(AddrSpace *as, Area kstack, void *entry) {$/;"	f
udwords	abstract-machine/klib/src/int64.c	/^} udwords;$/;"	t	typeref:union:__anon18	file:
ui_mainloop	nemu/src/monitor/debug/ui.c	/^void ui_mainloop() {$/;"	f
uint16	fceux-am/src/types.h	/^typedef uint16_t uint16;$/;"	t
uint16	fceux-am/src/types.h	/^typedef unsigned short uint16;$/;"	t
uint32	fceux-am/src/types.h	/^typedef uint32_t uint32;$/;"	t
uint32	fceux-am/src/types.h	/^typedef unsigned int uint32;$/;"	t
uint64	fceux-am/src/types.h	/^ typedef unsigned __int64 uint64;$/;"	t
uint64	fceux-am/src/types.h	/^ typedef unsigned long long uint64;$/;"	t
uint8	fceux-am/src/types.h	/^typedef uint8_t uint8;$/;"	t
uint8	fceux-am/src/types.h	/^typedef unsigned char uint8;$/;"	t
undefinedvromcount	fceux-am/src/ppu.cpp	/^volatile int rendercount, vromreadcount, undefinedvromcount, LogAddress = -1;$/;"	v
unfail	fceux-am/src/emufile.h	/^	void unfail() { failbit=false; }$/;"	f	class:EMUFILE
unprotect	abstract-machine/am/src/native/vme.c	/^void unprotect(AddrSpace *as) {$/;"	f
unprotect	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^void unprotect(AddrSpace *as) {$/;"	f
unprotect	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^void unprotect(AddrSpace *as) {$/;"	f
unprotect	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^void unprotect(AddrSpace *as) {$/;"	f
unprotect	abstract-machine/am/src/nemu/isa/x86/vme.c	/^void unprotect(AddrSpace *as) {$/;"	f
unprotect	abstract-machine/am/src/x86/qemu/vme.c	/^void unprotect(AddrSpace *as) {$/;"	f
unromchr	fceux-am/src/boards/fk23c.cpp	/^static uint8 unromchr;$/;"	v	file:
unromchr	fceux-am/src/boards/hp10xx_hp20xx.cpp	/^static uint8 unromchr, lock;$/;"	v	file:
unused	fceux-am/src/drivers/sdl/sdl-video.cpp	/^  uint8 r, g, b, unused;$/;"	m	struct:__anon47	file:
update_PALcache	fceux-am/src/ppu.cpp	/^static void update_PALcache() {$/;"	f	file:
update_ampm	fceux-am/src/boards/emu2413.c	/^static void update_ampm(OPLL * opll) {$/;"	f	file:
update_key_status	fceux-am/src/boards/emu2413.c	/^INLINE static void update_key_status(OPLL * opll) { 	int ch;$/;"	f	file:
update_pc	nemu/include/cpu/exec.h	/^static inline void update_pc(DecodeExecState *s) {$/;"	f
update_screen	nemu/src/device/vga.c	/^static inline void update_screen() {$/;"	f	file:
uppow2	fceux-am/src/utils/general.cpp	/^uint32 uppow2(uint32 n)$/;"	f
uptime	nemu/src/device/alarm.c	/^uint32_t uptime() { return jiffy \/ TIMER_HZ; }$/;"	f
uptsc	abstract-machine/am/src/x86/qemu/ioe.c	/^static uint64_t uptsc;$/;"	v	file:
uqwords	abstract-machine/klib/src/int64.c	/^} uqwords;$/;"	t	typeref:struct:__anon26	file:
user_entry	abstract-machine/am/src/x86/qemu/mpe.c	/^static void (* volatile user_entry)();$/;"	v	file:
user_handler	abstract-machine/am/src/native/cte.c	/^static Context* (*user_handler)(Event, Context*) = NULL;$/;"	v	file:
user_handler	abstract-machine/am/src/nemu/isa/mips32/cte.c	/^static Context* (*user_handler)(Event, Context*) = NULL;$/;"	v	file:
user_handler	abstract-machine/am/src/nemu/isa/riscv32/cte.c	/^static Context* (*user_handler)(Event, Context*) = NULL;$/;"	v	file:
user_handler	abstract-machine/am/src/nemu/isa/riscv64/cte.c	/^static Context* (*user_handler)(Event, Context*) = NULL;$/;"	v	file:
user_handler	abstract-machine/am/src/nemu/isa/x86/cte.c	/^static Context* (*user_handler)(Event, Context*) = NULL;$/;"	v	file:
user_handler	abstract-machine/am/src/x86/qemu/cte.c	/^static Context* (*user_handler)(Event, Context*) = NULL;$/;"	v	file:
utwords	abstract-machine/klib/src/int64.c	/^} utwords;$/;"	t	typeref:union:__anon22	file:
uvm	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^  AddrSpace *uvm;$/;"	m	struct:cpu_local
uvm_area	abstract-machine/am/src/x86/qemu/vme.c	34;"	d	file:
v	fceux-am/src/ppu.cpp	/^	uint32 v;	\/\/1$/;"	m	struct:PPUREGS	file:
v	fceux-am/src/state.h	/^	void *v;$/;"	m	struct:SFORMAT
va	abstract-machine/am/src/native/vme.c	/^  void *va;$/;"	m	struct:PageMap	file:
va2pa	nemu/tools/kvm-diff/src/kvm.c	/^static inline uint64_t va2pa(uint64_t va) {$/;"	f	file:
vaddr_ifetch	nemu/include/memory/vaddr.h	/^static inline word_t vaddr_ifetch(vaddr_t addr, int len) {$/;"	f
vaddr_read	nemu/include/memory/vaddr.h	/^static inline word_t vaddr_read(vaddr_t addr, int len) {$/;"	f
vaddr_t	nemu/include/common.h	/^typedef word_t vaddr_t;$/;"	t
vaddr_write	nemu/include/memory/vaddr.h	/^static inline void vaddr_write(vaddr_t addr, word_t data, int len) {$/;"	f
val	nemu/include/cpu/decode.h	/^  rtlreg_t val;$/;"	m	struct:__anon65
val	nemu/include/isa/mips32.h	/^    uint32_t val;$/;"	m	union:__anon90::__anon91
val	nemu/include/isa/riscv32.h	/^    uint32_t val;$/;"	m	union:__anon73::__anon74
val	nemu/include/isa/riscv64.h	/^    uint32_t val;$/;"	m	union:__anon83::__anon84
val	nemu/src/isa/x86/decode.c	/^  uint8_t val;$/;"	m	union:__anon55	file:
val	nemu/src/isa/x86/decode.c	/^  uint8_t val;$/;"	m	union:__anon58	file:
vbe_info	abstract-machine/am/src/x86/qemu/ioe.c	/^struct vbe_info {$/;"	s	file:
vblankscanlines	fceux-am/src/fceu.cpp	/^int vblankscanlines = 0;$/;"	v
vbuf	abstract-machine/am/src/x86/qemu/ioe.c	/^static uint8_t vmem[VMEM_SIZE], vbuf[VMEM_SIZE], *vbuf_head;$/;"	v	file:
vbuf_alloc	abstract-machine/am/src/x86/qemu/ioe.c	/^static void *vbuf_alloc(int size) {$/;"	f	file:
vbuf_head	abstract-machine/am/src/x86/qemu/ioe.c	/^static uint8_t vmem[VMEM_SIZE], vbuf[VMEM_SIZE], *vbuf_head;$/;"	v	file:
vcount	fceux-am/src/boards/69.cpp	/^static int32 vcount[3];$/;"	v	file:
vcount	fceux-am/src/boards/mmc5.cpp	/^	int32 vcount[2];$/;"	m	struct:__anon39	file:
vcount	fceux-am/src/boards/n106.cpp	/^static int32 vcount[8];$/;"	v	file:
vcount	fceux-am/src/boards/vrc6.cpp	/^static int32 vcount[3];$/;"	v	file:
vcpu	nemu/tools/kvm-diff/src/kvm.c	/^static struct vcpu vcpu;$/;"	v	typeref:struct:vcpu	file:
vcpu	nemu/tools/kvm-diff/src/kvm.c	/^struct vcpu {$/;"	s	file:
vcpu_init	nemu/tools/kvm-diff/src/kvm.c	/^static void vcpu_init() {$/;"	f	file:
version	abstract-machine/am/src/x86.h	/^  uint8_t  version;       \/\/ [14]$/;"	m	struct:__anon6
vga_update_screen	nemu/src/device/vga.c	/^void vga_update_screen() {$/;"	f
vgactl_port_base	nemu/src/device/vga.c	/^static uint32_t *vgactl_port_base = NULL;$/;"	v	file:
vidsys	fceux-am/src/git.h	/^	EGIV vidsys;    \/\/Current emulated video system;$/;"	m	struct:FCEUGI
vlock	fceux-am/src/boards/253.cpp	/^static uint8 chrlo[8], chrhi[8], prg[2], mirr, vlock;$/;"	v	file:
vm	nemu/tools/kvm-diff/src/kvm.c	/^static struct vm vm;$/;"	v	typeref:struct:vm	file:
vm	nemu/tools/kvm-diff/src/kvm.c	/^struct vm {$/;"	s	file:
vm_area	abstract-machine/am/src/x86/qemu/x86-qemu.h	/^struct vm_area {$/;"	s
vm_areas	abstract-machine/am/src/x86/qemu/vme.c	/^static const struct vm_area vm_areas[] = {$/;"	v	typeref:struct:vm_area	file:
vm_head	abstract-machine/am/include/arch/native.h	/^  void *vm_head;$/;"	m	struct:Context
vm_head	abstract-machine/am/src/native/platform.h	/^  void *vm_head;$/;"	m	struct:__anon9
vm_init	nemu/tools/kvm-diff/src/kvm.c	/^static void vm_init(size_t mem_size) {$/;"	f	file:
vme_enable	abstract-machine/am/src/native/vme.c	/^static int vme_enable = 0;$/;"	v	file:
vme_enable	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^static int vme_enable = 0;$/;"	v	file:
vme_enable	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^static int vme_enable = 0;$/;"	v	file:
vme_enable	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^static int vme_enable = 0;$/;"	v	file:
vme_enable	abstract-machine/am/src/nemu/isa/x86/vme.c	/^static int vme_enable = 0;$/;"	v	file:
vme_init	abstract-machine/am/src/native/vme.c	/^bool vme_init(void* (*pgalloc_f)(int), void (*pgfree_f)(void*)) {$/;"	f
vme_init	abstract-machine/am/src/nemu/isa/mips32/vme.c	/^bool vme_init(void* (*pgalloc_f)(int), void (*pgfree_f)(void*)) {$/;"	f
vme_init	abstract-machine/am/src/nemu/isa/riscv32/vme.c	/^bool vme_init(void* (*pgalloc_f)(int), void (*pgfree_f)(void*)) {$/;"	f
vme_init	abstract-machine/am/src/nemu/isa/riscv64/vme.c	/^bool vme_init(void* (*pgalloc_f)(int), void (*pgfree_f)(void*)) {$/;"	f
vme_init	abstract-machine/am/src/nemu/isa/x86/vme.c	/^bool vme_init(void* (*pgalloc_f)(int), void (*pgfree_f)(void*)) {$/;"	f
vme_init	abstract-machine/am/src/x86/qemu/vme.c	/^bool vme_init(void *(*_pgalloc)(int size), void (*_pgfree)(void *)) {$/;"	f
vmem	abstract-machine/am/src/x86/qemu/ioe.c	/^static uint8_t vmem[VMEM_SIZE], vbuf[VMEM_SIZE], *vbuf_head;$/;"	v	file:
vmem	nemu/src/device/vga.c	/^static uint32_t (*vmem) [SCREEN_W] = NULL;$/;"	v	file:
vnapage	fceux-am/src/ppu.cpp	/^uint8 *vnapage[4];$/;"	v
volume	fceux-am/src/boards/emu2413.h	/^	int32 volume;       \/* Current volume *\/$/;"	m	struct:__anon43
vpsg1	fceux-am/src/boards/vrc6.cpp	/^static uint8 vpsg1[8];$/;"	v	file:
vpsg2	fceux-am/src/boards/vrc6.cpp	/^static uint8 vpsg2[4];$/;"	v	file:
vram_size	fceux-am/src/cart.h	/^	int vram_size;$/;"	m	struct:__anon37
vrc2_chr	fceux-am/src/boards/116.cpp	/^static uint8 vrc2_chr[8], vrc2_prg[2], vrc2_mirr;$/;"	v	file:
vrc2_mirr	fceux-am/src/boards/116.cpp	/^static uint8 vrc2_chr[8], vrc2_prg[2], vrc2_mirr;$/;"	v	file:
vrc2_prg	fceux-am/src/boards/116.cpp	/^static uint8 vrc2_chr[8], vrc2_prg[2], vrc2_mirr;$/;"	v	file:
vrc7idx	fceux-am/src/boards/vrc7.cpp	/^static uint8 vrc7idx, preg[3], creg[8], mirr;$/;"	v	file:
vreg	fceux-am/src/boards/228.cpp	/^static uint8 mram[4], vreg;$/;"	v	file:
vromreadcount	fceux-am/src/ppu.cpp	/^volatile int rendercount, vromreadcount, undefinedvromcount, LogAddress = -1;$/;"	v
vsnprintf	abstract-machine/klib/src/stdio.c	/^int vsnprintf(char *out, size_t n, const char *fmt, va_list ap) {$/;"	f
vsprintf	abstract-machine/klib/src/stdio.c	/^int vsprintf(char *out, const char *fmt, va_list ap) {$/;"	f
vt	fceux-am/src/ppu.cpp	/^	uint32 vt;	\/\/5$/;"	m	struct:PPUREGS	file:
vtoggle	fceux-am/src/ppu.cpp	/^uint8 vtoggle = 0;$/;"	v
w	abstract-machine/am/include/amdev.h	/^  uint16_t type, w, h, x1, y1, w1, h1;$/;"	m	struct:gpu_canvas
w	abstract-machine/am/include/amdev.h	/^  uint16_t w, h;$/;"	m	struct:gpu_texturedesc
w	fceux-am/src/input.h	/^	int w;$/;"	m	struct:JOYPORT
w1	abstract-machine/am/include/amdev.h	/^  uint16_t type, w, h, x1, y1, w1, h1;$/;"	m	struct:gpu_canvas
wait_disk	abstract-machine/am/src/x86/qemu/boot/main.c	/^static inline void wait_disk(void) {$/;"	f	file:
wait_disk	abstract-machine/am/src/x86/qemu/ioe.c	/^static inline void wait_disk(void) {$/;"	f	file:
wait_sec	abstract-machine/am/src/x86/qemu/ioe.c	/^static void wait_sec(AM_TIMER_RTC_T *t1) {$/;"	f	file:
watchpoint	nemu/src/monitor/debug/watchpoint.h	/^typedef struct watchpoint {$/;"	s
wave2_2pi	fceux-am/src/boards/emu2413.c	653;"	d	file:
wave2_2pi	fceux-am/src/boards/emu2413.c	655;"	d	file:
wave2_4pi	fceux-am/src/boards/emu2413.c	660;"	d	file:
wave2_4pi	fceux-am/src/boards/emu2413.c	662;"	d	file:
wave2_4pi	fceux-am/src/boards/emu2413.c	664;"	d	file:
wave2_8pi	fceux-am/src/boards/emu2413.c	669;"	d	file:
wave2_8pi	fceux-am/src/boards/emu2413.c	671;"	d	file:
wave2_8pi	fceux-am/src/boards/emu2413.c	673;"	d	file:
waveform	fceux-am/src/boards/emu2413.c	/^static uint16 *waveform[2] = { fullsintable, halfsintable };$/;"	v	file:
we_sram	fceux-am/src/boards/176.cpp	/^static uint8 prg[4], chr, sbw, we_sram;$/;"	v	file:
welcome	nemu/src/monitor/monitor.c	/^static inline void welcome() {$/;"	f	file:
width	abstract-machine/am/src/x86/qemu/ioe.c	/^  uint16_t width;$/;"	m	struct:vbe_info	file:
width	fceux-am/src/drivers/sdl/sdl-icon.h	/^  unsigned int  	 width;$/;"	m	struct:__anon49
width	nemu/include/cpu/decode.h	/^  int width;$/;"	m	struct:__anon65
width	nemu/include/cpu/decode.h	/^  int width;$/;"	m	struct:__anon67
window	abstract-machine/am/src/native/native-gpu.c	/^static SDL_Window *window = NULL;$/;"	v	file:
wl	fceux-am/src/boards/mmc5.cpp	/^	uint16 wl[2];$/;"	m	struct:__anon39	file:
wlcount	fceux-am/src/sound.cpp	/^static int32 wlcount[4]={0,0,0,0};	\/\/ Wave length counters.$/;"	v	file:
wlookup1	fceux-am/src/sound.cpp	/^static uint32 wlookup1[32];$/;"	v	file:
wlookup2	fceux-am/src/sound.cpp	/^static uint32 wlookup2[203];$/;"	v	file:
word_t	nemu/include/common.h	/^typedef uint32_t word_t;$/;"	t
word_t	nemu/include/common.h	/^typedef uint64_t word_t;$/;"	t
wp_pool	nemu/src/monitor/debug/watchpoint.c	/^static WP wp_pool[NR_WP] = {};$/;"	v	file:
wram	fceux-am/src/boards/80.cpp	/^static uint8 mirr, cmd, wram_enable, wram[256];$/;"	v	file:
wram_enable	fceux-am/src/boards/80.cpp	/^static uint8 mirr, cmd, wram_enable, wram[256];$/;"	v	file:
wram_size	fceux-am/src/cart.h	/^	int wram_size;$/;"	m	struct:__anon37
writefunc	fceux-am/src/types.h	/^typedef void (*writefunc)(uint32 A, uint8 V);$/;"	t
x	fceux-am/src/ppu.cpp	/^	uint8 ca[2], atr, x;$/;"	m	struct:__anon46	file:
x	fceux-am/src/ppu.cpp	/^	uint8 y, no, atr, x;$/;"	m	struct:__anon45	file:
x1	abstract-machine/am/include/amdev.h	/^  uint16_t type, w, h, x1, y1, w1, h1;$/;"	m	struct:gpu_canvas
x24c02	fceux-am/src/boards/bandai.cpp	/^static uint8 reg[16], is153, x24c02;$/;"	v	file:
x24c0xStateRegs	fceux-am/src/boards/bandai.cpp	/^static SFORMAT x24c0xStateRegs[] =$/;"	v	file:
x24c0x_addr	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_addr, x24c0x_word, x24c0x_latch, x24c0x_bitcount;$/;"	v	file:
x24c0x_bitcount	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_addr, x24c0x_word, x24c0x_latch, x24c0x_bitcount;$/;"	v	file:
x24c0x_data	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_data[256], x24c0x_state;$/;"	v	file:
x24c0x_init	fceux-am/src/boards/bandai.cpp	/^static void x24c0x_init() {$/;"	f	file:
x24c0x_latch	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_addr, x24c0x_word, x24c0x_latch, x24c0x_bitcount;$/;"	v	file:
x24c0x_oe	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_sda, x24c0x_scl, x24c0x_out, x24c0x_oe;$/;"	v	file:
x24c0x_out	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_sda, x24c0x_scl, x24c0x_out, x24c0x_oe;$/;"	v	file:
x24c0x_read	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_read() {$/;"	f	file:
x24c0x_scl	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_sda, x24c0x_scl, x24c0x_out, x24c0x_oe;$/;"	v	file:
x24c0x_sda	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_sda, x24c0x_scl, x24c0x_out, x24c0x_oe;$/;"	v	file:
x24c0x_state	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_data[256], x24c0x_state;$/;"	v	file:
x24c0x_word	fceux-am/src/boards/bandai.cpp	/^static uint8 x24c0x_addr, x24c0x_word, x24c0x_latch, x24c0x_bitcount;$/;"	v	file:
x24c0x_write	fceux-am/src/boards/bandai.cpp	/^static void x24c0x_write(uint8 data) {$/;"	f	file:
x86_CPU_state	nemu/include/isa/x86.h	/^} x86_CPU_state;$/;"	t	typeref:struct:__anon78
x86_IMAGE_START	nemu/include/isa/x86.h	8;"	d
x86_ISADecodeInfo	nemu/include/isa/x86.h	/^} x86_ISADecodeInfo;$/;"	t	typeref:struct:__anon80
x86_PMEM_BASE	nemu/include/isa/x86.h	9;"	d
x86_has_mem_exception	nemu/include/isa/x86.h	48;"	d
xbsave	fceux-am/src/video.cpp	/^static u8 *xbsave=NULL;$/;"	v	file:
xchecksum	abstract-machine/am/src/x86.h	/^  uint8_t  xchecksum;     \/\/ extended table checksum$/;"	m	struct:__anon6
xchg	abstract-machine/am/src/x86.h	/^static inline int xchg(int *addr, int newval) {$/;"	f
xlength	abstract-machine/am/src/x86.h	/^  uint16_t xlength;       \/\/ extended table length$/;"	m	struct:__anon6
xoroshiro128plus_next	fceux-am/src/fceu.cpp	/^u64 xoroshiro128plus_next() {$/;"	f
y	fceux-am/src/ppu.cpp	/^	uint8 y, no, atr, x;$/;"	m	struct:__anon45	file:
y1	abstract-machine/am/include/amdev.h	/^  uint16_t type, w, h, x1, y1, w1, h1;$/;"	m	struct:gpu_canvas
yield	abstract-machine/am/src/native/cte.c	/^void yield() {$/;"	f
yield	abstract-machine/am/src/nemu/isa/mips32/cte.c	/^void yield() {$/;"	f
yield	abstract-machine/am/src/nemu/isa/riscv32/cte.c	/^void yield() {$/;"	f
yield	abstract-machine/am/src/nemu/isa/riscv64/cte.c	/^void yield() {$/;"	f
yield	abstract-machine/am/src/nemu/isa/x86/cte.c	/^void yield() {$/;"	f
yield	abstract-machine/am/src/x86/qemu/cte.c	/^void yield() {$/;"	f
zero1	abstract-machine/am/src/x86.h	/^  uint32_t zero1     :  5;$/;"	m	struct:__anon3
zero2	abstract-machine/am/src/x86.h	/^  uint32_t zero2     :  1;$/;"	m	struct:__anon3
~EMUFILE	fceux-am/src/emufile.h	/^	virtual ~EMUFILE() {}$/;"	f	class:EMUFILE
~EMUFILE_FILE	fceux-am/src/emufile.h	/^	virtual ~EMUFILE_FILE() {$/;"	f	class:EMUFILE_FILE
~EMUFILE_FILE	fceux-am/src/emufile.h	/^	~EMUFILE_FILE() { }$/;"	f	class:EMUFILE_FILE
~FCEUFILE	fceux-am/src/file.h	/^	~FCEUFILE()$/;"	f	struct:FCEUFILE
~FCEUGI	fceux-am/src/fceu.cpp	/^FCEUGI::~FCEUGI() { }$/;"	f	class:FCEUGI
